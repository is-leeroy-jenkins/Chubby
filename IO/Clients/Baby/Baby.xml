<?xml version="1.0" ?>
<doc>
<assembly>
<name> Baby </name>
</assembly>
<members>
<member name="T:Baby.ContextMenuCallback">
<summary> </summary>
<seealso cref="T:CefSharp.IContextMenuHandler" />
</member>
<member name="F:Baby.ContextMenuCallback._lastSelText">
<summary> The last sel text </summary>
</member>
<member name="F:Baby.ContextMenuCallback._webBrowser">
<summary> My form </summary>
</member>
<member name="F:Baby.ContextMenuCallback._SHOW_DEV_TOOLS">
<summary> The show dev tools </summary>
</member>
<member name="F:Baby.ContextMenuCallback._CLOSE_DEV_TOOLS">
<summary> The close dev tools </summary>
</member>
<member name="F:Baby.ContextMenuCallback._SAVE_IMAGE_AS">
<summary> The save image as </summary>
</member>
<member name="F:Baby.ContextMenuCallback._SAVE_AS_PDF">
<summary> The save as PDF </summary>
</member>
<member name="F:Baby.ContextMenuCallback._SAVE_LINK_AS">
<summary> The save link as </summary>
</member>
<member name="F:Baby.ContextMenuCallback._COPY_LINK_ADDRESS">
<summary> The copy link address </summary>
</member>
<member name="F:Baby.ContextMenuCallback._OPEN_LINK_IN_NEW_TAB">
<summary> The open link in new tab </summary>
</member>
<member name="F:Baby.ContextMenuCallback._CLOSE_TAB">
<summary> The close tab </summary>
</member>
<member name="F:Baby.ContextMenuCallback._REFRESH_TAB">
<summary> The refresh tab </summary>
</member>
<member name="F:Baby.ContextMenuCallback._PRINT">
<summary> The print </summary>
</member>
<member name="M:Baby.ContextMenuCallback.#ctor(Baby.WebBrowser)">
<summary> Initializes a new instance of the
<see cref="T:Baby.ContextMenuCallback" />
class. </summary>
<param name="form"> The form. </param>
</member>
<member
  name="M:Baby.ContextMenuCallback.OnBeforeContextMenu(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IContextMenuParams,CefSharp.IMenuModel)">
<summary> Called before a context menu is displayed. The model can be cleared to show no context
menu or modified to show a custom menu. </summary>
<param name="browserControl"> The browser control. </param>
<param name="browser"> The browser. </param>
<param name="frame"> The frame. </param>
<param name="parameters"> The parameters. </param>
<param name="model"> The model. </param>
</member>
<member
  name="M:Baby.ContextMenuCallback.OnContextMenuCommand(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IContextMenuParams,CefSharp.CefMenuCommand,CefSharp.CefEventFlags)">
<summary> Called to execute a command selected from the context menu. See cef_menu_id_t for the
command ids that have default implementations. All user-defined command ids should be between
MENU_ID_USER_FIRST and MENU_ID_USER_LAST. </summary>
<param name="browserControl"> The browser control. </param>
<param name="browser"> The browser. </param>
<param name="frame"> The frame. </param>
<param name="parameters"> The parameters. </param>
<param name="commandId"> The command identifier. </param>
<param name="eventFlags"> The event flags. </param>
<returns> Return true if the command was handled or false for the default implementation. </returns>
</member>
<member
  name="M:Baby.ContextMenuCallback.OnContextMenuDismissed(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame)">
<summary> Called when the context menu is dismissed irregardless of whether the menu was empty or a
command was selected. </summary>
<param name="browserControl"> The browser control. </param>
<param name="browser"> The browser. </param>
<param name="frame"> The frame. </param>
</member>
<member
  name="M:Baby.ContextMenuCallback.RunContextMenu(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IContextMenuParams,CefSharp.IMenuModel,CefSharp.IRunContextMenuCallback)">
<summary> Called to allow custom display of the context menu. For custom display return true and
execute callback either synchronously or asynchronously with the selected command Id. For default
display return false. Do not keep references to parameters or model outside of this callback. </summary>
<param name="browserControl"> The browser control. </param>
<param name="browser"> The browser. </param>
<param name="frame"> The frame. </param>
<param name="parameters"> The parameters. </param>
<param name="model"> The model. </param>
<param name="callback"> The callback. </param>
<returns> For custom display return true and execute callback either synchronously or
asynchronously with the selected command ID. </returns>
</member>
<member name="T:Baby.DownloadCallback">
<summary> </summary>
<seealso cref="T:CefSharp.IDownloadHandler" />
</member>
<member name="F:Baby.DownloadCallback._webBrowser">
<summary> The browser </summary>
</member>
<member name="M:Baby.DownloadCallback.#ctor(System.Windows.Forms.Form)">
<summary> Initializes a new instance of the
<see cref="T:Baby.DownloadCallback" />
class. </summary>
<param name="form"> The form. </param>
</member>
<member
  name="M:Baby.DownloadCallback.CanDownload(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String,System.String)">
<summary> Determines whether this instance can download the specified chromium WebBrowser. </summary>
<param name="chromiumWebBrowser"> The chromium WebBrowser. </param>
<param name="browser"> The browser. </param>
<param name="url"> The URL. </param>
<param name="requestMethod"> The request method. </param>
<returns>
<c> true </c>
if this instance can download the specified chromium WebBrowser; otherwise,
<c> false </c>
. </returns>
</member>
<member
  name="M:Baby.DownloadCallback.OnBeforeDownload(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.DownloadItem,CefSharp.IBeforeDownloadCallback)">
<summary> Called when [before download]. </summary>
<param name="webBrowser"> The web browser. </param>
<param name="browser"> The browser. </param>
<param name="item"> The item. </param>
<param name="callback"> The callback. </param>
</member>
<member
  name="M:Baby.DownloadCallback.OnDownloadUpdated(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.DownloadItem,CefSharp.IDownloadItemCallback)">
<summary> Called when [download updated]. </summary>
<param name="webBrowser"> The web browser. </param>
<param name="browser"> The browser. </param>
<param name="downloadItem"> The download item. </param>
<param name="callback"> The callback. </param>
</member>
<member name="T:Baby.GetterCallback">
<summary> </summary>
<param name="obj"> The object. </param>
<returns> </returns>
</member>
<member name="T:Baby.HostCallback">
<summary> functions in this class are accessible by JS using the code `host.X()` </summary>
</member>
<member name="F:Baby.HostCallback._webBrowser">
<summary> The browser </summary>
</member>
<member name="M:Baby.HostCallback.#ctor(System.Windows.Forms.Form)">
<summary> Initializes a new instance of the
<see cref="T:Baby.HostCallback" />
class. </summary>
<param name="webBrowser"> The webBrowser. </param>
</member>
<member name="M:Baby.HostCallback.AddNewBrowserTab(System.String,System.Boolean)">
<summary> Adds the new browser tab. </summary>
<param name="url"> The URL. </param>
<param name="focusNewTab"> if set to
<c> true </c>
[focus new tab]. </param>
</member>
<member name="M:Baby.HostCallback.GetDownloads">
<summary> Gets the downloads. </summary>
<returns> string </returns>
</member>
<member name="M:Baby.HostCallback.CancelDownload(System.Int32)">
<summary> Cancels the download. </summary>
<param name="downloadId"> The download identifier. </param>
<returns> </returns>
</member>
<member name="M:Baby.HostCallback.RefreshActiveTab">
<summary> Refreshes the active tab. </summary>
</member>
<member name="T:Baby.KeyboardCallback">
<summary> </summary>
<seealso cref="T:CefSharp.IKeyboardHandler" />
</member>
<member name="F:Baby.KeyboardCallback._webBrowser">
<summary> My form </summary>
</member>
<member name="F:Baby.KeyboardCallback.Hotkeys">
<summary> The hot keys </summary>
</member>
<member name="M:Baby.KeyboardCallback.#ctor(System.Windows.Forms.Form)">
<summary> Initializes a new instance of the
<see cref="T:Baby.KeyboardCallback" />
class. </summary>
<param name="form"> The form. </param>
</member>
<member
  name="M:Baby.KeyboardCallback.AddHotKey(System.Windows.Forms.Form,System.Action,System.Windows.Forms.Keys,System.Boolean,System.Boolean,System.Boolean)">
<summary> Adds the hot key. </summary>
<param name="form"> The form. </param>
<param name="function"> The function. </param>
<param name="key"> The key. </param>
<param name="ctrl"> if set to
<c> true </c>
[control]. </param>
<param name="shift"> if set to
<c> true </c>
[shift]. </param>
<param name="alt"> if set to
<c> true </c>
[alt]. </param>
</member>
<member
  name="M:Baby.KeyboardCallback.OnPreKeyEvent(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.KeyType,System.Int32,System.Int32,CefSharp.CefEventFlags,System.Boolean,System.Boolean@)">
<summary> Summary: Called before a keyboard event is sent to the renderer. Return true if the event
was handled or false otherwise. If the event will be handled in
CefSharp.IKeyboardHandler.OnKeyEvent(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.KeyType,
System.Int32,System.Int32,CefSharp.CefEventFlags,System.Boolean) as a keyboard shortcut set
isKeyboardShortcut to true and return false. Parameters: chromiumWebBrowser: the ChromiumWebBrowser
control browser: The browser instance. type: Whether this was a key up/down/raw/etc...
windowsKeyCode: The Windows key code for the key event. This value is used by the DOM
specification. Sometimes it comes directly from the event (i.e. on Windows) and sometimes it's
determined using a mapping function. See WebCore/platform/chromium/KeyboardCodes.h for the list of
values. nativeKeyCode: The native key code. On Windows this appears to be in the format of
WM_KEYDOWN/WM_KEYUP/etc... lParam data. modifiers: What other modifier keys are currently down:
Shift/Control/Alt/OS X Command/etc... isSystemKey: Indicates whether the event is considered a
"system key" event (see http://msdn.microsoft.com/en-us/library/ms646286(VS.85).aspx for details).
isKeyboardShortcut: See the summary for an explanation of when to set this to true. Returns:
Returns true if the event was handled or false otherwise. </summary>
<param name="browserControl"> </param>
<param name="browser"> </param>
<param name="type"> </param>
<param name="windowsKeyCode"> </param>
<param name="nativeKeyCode"> </param>
<param name="modifiers"> </param>
<param name="isSystemKey"> </param>
<param name="isKeyboardShortcut"> </param>
<returns> </returns>
</member>
<member
  name="M:Baby.KeyboardCallback.OnKeyEvent(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.KeyType,System.Int32,System.Int32,CefSharp.CefEventFlags,System.Boolean)">
<summary> Summary: Called after the renderer and JavaScript in the page has had a chance to handle
the event. Return true if the keyboard event was handled or false otherwise. Parameters:
chromiumWebBrowser: the ChromiumWebBrowser control browser: The browser instance. type: Whether
this was a key up/down/raw/etc... windowsKeyCode: The Windows key code for the key event. This
value is used by the DOM specification. Sometimes it comes directly from the event (i.e. on
Windows) and sometimes it's determined using a mapping function. See
WebCore/platform/chromium/KeyboardCodes.h for the list of values. nativeKeyCode: The native key
code. On Windows this appears to be in the format of WM_KEYDOWN/WM_KEYUP/etc... lParam data.
modifiers: What other modifier keys are currently down: Shift/Control/Alt/OS X Command/etc...
isSystemKey: Indicates whether the event is considered a "system key" event (see
http://msdn.microsoft.com/en-us/library/ms646286(VS.85).aspx for details). Returns: Return true if
the keyboard event was handled or false otherwise. </summary>
<param name="browserControl"> </param>
<param name="browser"> </param>
<param name="type"> </param>
<param name="windowsKeyCode"> </param>
<param name="nativeKeyCode"> </param>
<param name="modifiers"> </param>
<param name="isSystemKey"> </param>
<returns> </returns>
</member>
<member name="T:Baby.LifeSpanCallback">
<summary> </summary>
<seealso cref="T:CefSharp.ILifeSpanHandler" />
</member>
<member name="F:Baby.LifeSpanCallback._webBrowser">
<summary> The browser </summary>
</member>
<member name="M:Baby.LifeSpanCallback.#ctor(System.Windows.Forms.Form)">
<summary> Initializes a new instance of the
<see cref="T:Baby.LifeSpanCallback" />
class. </summary>
<param name="form"> The form. </param>
</member>
<member name="M:Baby.LifeSpanCallback.DoClose(CefSharp.IWebBrowser,CefSharp.IBrowser)">
<summary> Does the close. </summary>
<param name="browserControl"> The browser control. </param>
<param name="browser"> The browser. </param>
<returns> </returns>
</member>
<member name="M:Baby.LifeSpanCallback.OnAfterCreated(CefSharp.IWebBrowser,CefSharp.IBrowser)">
<summary> Called when [after created]. </summary>
<param name="browserControl"> The browser control. </param>
<param name="browser"> The browser. </param>
</member>
<member name="M:Baby.LifeSpanCallback.OnBeforeClose(CefSharp.IWebBrowser,CefSharp.IBrowser)">
<summary> Called when [before close]. </summary>
<param name="browserControl"> The browser control. </param>
<param name="browser"> The browser. </param>
</member>
<member
  name="M:Baby.LifeSpanCallback.OnBeforePopup(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,System.String,System.String,CefSharp.WindowOpenDisposition,System.Boolean,CefSharp.IPopupFeatures,CefSharp.IWindowInfo,CefSharp.IBrowserSettings,System.Boolean@,CefSharp.IWebBrowser@)">
<summary> Called when [before popup]. </summary>
<param name="browserControl"> The browser control. </param>
<param name="browser"> The browser. </param>
<param name="frame"> The frame. </param>
<param name="targetUrl"> The target URL. </param>
<param name="targetFrameName"> Name of the target frame. </param>
<param name="targetDisposition"> The target disposition. </param>
<param name="userGesture"> if set to
<c> true </c>
[user gesture]. </param>
<param name="popupFeatures"> The popup features. </param>
<param name="windowInfo"> The window information. </param>
<param name="browserSettings"> The browser settings. </param>
<param name="noJavascriptAccess"> if set to
<c> true </c>
[no javascript access]. </param>
<param name="newBrowser"> The new browser. </param>
<returns> </returns>
</member>
<member name="T:Baby.RequestCallback">
<summary> </summary>
<seealso cref="T:CefSharp.IRequestHandler" />
</member>
<member name="F:Baby.RequestCallback._webBrowser">
<summary> The browser </summary>
</member>
<member name="M:Baby.RequestCallback.#ctor(System.Windows.Forms.Form)">
<summary> Initializes a new instance of the
<see cref="T:Baby.RequestCallback" />
class. </summary>
<param name="form"> The form. </param>
</member>
<member
  name="M:Baby.RequestCallback.GetAuthCredentials(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String,System.Boolean,System.String,System.Int32,System.String,System.String,CefSharp.IAuthCallback)">
<summary> Gets the authentication credentials. </summary>
<param name="chromiumWebBrowser"> The chromium WebBrowser. </param>
<param name="browser"> The browser. </param>
<param name="originUrl"> The origin URL. </param>
<param name="isProxy"> if set to
<c> true </c>
[is proxy]. </param>
<param name="host"> The host. </param>
<param name="port"> The port. </param>
<param name="realm"> The realm. </param>
<param name="scheme"> The scheme. </param>
<param name="callback"> The callback. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.RequestCallback.OnBeforeBrowse(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,System.Boolean,System.Boolean)">
<summary> Called when [before browse]. </summary>
<param name="chromiumWebBrowser"> The chromium WebBrowser. </param>
<param name="browser"> The browser. </param>
<param name="frame"> The frame. </param>
<param name="request"> The request. </param>
<param name="userGesture"> if set to
<c> true </c>
[user gesture]. </param>
<param name="isRedirect"> if set to
<c> true </c>
[is redirect]. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.RequestCallback.OnCertificateError(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.CefErrorCode,System.String,CefSharp.ISslInfo,CefSharp.IRequestCallback)">
<summary> Called when [certificate error]. </summary>
<param name="browserControl"> The browser control. </param>
<param name="browser"> The browser. </param>
<param name="errorCode"> The error code. </param>
<param name="requestUrl"> The request URL. </param>
<param name="sslInfo"> The SSL information. </param>
<param name="callback"> The callback. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.RequestCallback.OnOpenUrlFromTab(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,System.String,CefSharp.WindowOpenDisposition,System.Boolean)">
<summary> Called when [open URL from tab]. </summary>
<param name="browserControl"> The browser control. </param>
<param name="browser"> The browser. </param>
<param name="frame"> The frame. </param>
<param name="targetUrl"> The target URL. </param>
<param name="targetDisposition"> The target disposition. </param>
<param name="userGesture"> if set to
<c> true </c>
[user gesture]. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.RequestCallback.OnPluginCrashed(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String)">
<summary> Called when [plugin crashed]. </summary>
<param name="browserControl"> The browser control. </param>
<param name="browser"> The browser. </param>
<param name="pluginPath"> The plugin path. </param>
</member>
<member
  name="M:Baby.RequestCallback.OnQuotaRequest(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String,System.Int64,CefSharp.IRequestCallback)">
<summary> Called when [quota request]. </summary>
<param name="browserControl"> The browser control. </param>
<param name="browser"> The browser. </param>
<param name="originUrl"> The origin URL. </param>
<param name="newSize"> The new size. </param>
<param name="callback"> The callback. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.RequestCallback.OnRenderProcessTerminated(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.CefTerminationStatus)">
<summary> Called when [render process terminated]. </summary>
<param name="browserControl"> The browser control. </param>
<param name="browser"> The browser. </param>
<param name="status"> The status. </param>
</member>
<member name="M:Baby.RequestCallback.OnRenderViewReady(CefSharp.IWebBrowser,CefSharp.IBrowser)">
<summary> Called when [render view ready]. </summary>
<param name="browserControl"> The browser control. </param>
<param name="browser"> The browser. </param>
</member>
<member
  name="M:Baby.RequestCallback.GetResourceRequestHandler(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,System.Boolean,System.Boolean,System.String,System.Boolean@)">
<summary> Gets the resource request handler. </summary>
<param name="chromiumWebBrowser"> The chromium WebBrowser. </param>
<param name="browser"> The browser. </param>
<param name="frame"> The frame. </param>
<param name="request"> The request. </param>
<param name="isNavigation"> if set to
<c> true </c>
[is navigation]. </param>
<param name="isDownload"> if set to
<c> true </c>
[is download]. </param>
<param name="requestInitiator"> The request initiator. </param>
<param name="disableDefaultHandling"> if set to
<c> true </c>
[disable default handling]. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.RequestCallback.OnSelectClientCertificate(CefSharp.IWebBrowser,CefSharp.IBrowser,System.Boolean,System.String,System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,CefSharp.ISelectClientCertificateCallback)">
<summary> Called when [select client certificate]. </summary>
<param name="chromiumWebBrowser"> The chromium WebBrowser. </param>
<param name="browser"> The browser. </param>
<param name="isProxy"> if set to
<c> true </c>
[is proxy]. </param>
<param name="host"> The host. </param>
<param name="port"> The port. </param>
<param name="certificates"> The certificates. </param>
<param name="callback"> The callback. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.RequestCallback.OnDocumentAvailableInMainFrame(CefSharp.IWebBrowser,CefSharp.IBrowser)">
<summary> Called when [document available in main frame]. </summary>
<param name="chromiumWebBrowser"> The chromium WebBrowser. </param>
<param name="browser"> The browser. </param>
</member>
<member name="T:Baby.ResourceRequestCallback">
<summary> </summary>
<seealso cref="T:CefSharp.IResourceRequestHandler" />
</member>
<member name="F:Baby.ResourceRequestCallback._webBrowser">
<summary> The browser </summary>
</member>
<member name="M:Baby.ResourceRequestCallback.#ctor(System.Windows.Forms.Form)">
<summary> Initializes a new instance of the
<see cref="T:Baby.ResourceRequestCallback" />
class. </summary>
<param name="form"> The form. </param>
</member>
<member
  name="M:Baby.ResourceRequestCallback.GetCookieAccessFilter(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest)">
<summary> Gets the cookie access filter. </summary>
<param name="chromiumWebBrowser"> The chromium WebBrowser. </param>
<param name="browser"> The browser. </param>
<param name="frame"> The frame. </param>
<param name="request"> The request. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.ResourceRequestCallback.GetResourceHandler(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest)">
<summary> Gets the resource handler. </summary>
<param name="chromiumWebBrowser"> The chromium WebBrowser. </param>
<param name="browser"> The browser. </param>
<param name="frame"> The frame. </param>
<param name="request"> The request. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.ResourceRequestCallback.GetResourceResponseFilter(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IResponse)">
<summary> Gets the resource response filter. </summary>
<param name="chromiumWebBrowser"> The chromium WebBrowser. </param>
<param name="browser"> The browser. </param>
<param name="frame"> The frame. </param>
<param name="request"> The request. </param>
<param name="response"> The response. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.ResourceRequestCallback.OnBeforeResourceLoad(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IRequestCallback)">
<summary> Called when [before resource load]. </summary>
<param name="chromiumWebBrowser"> The chromium WebBrowser. </param>
<param name="browser"> The browser. </param>
<param name="frame"> The frame. </param>
<param name="request"> The request. </param>
<param name="callback"> The callback. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.ResourceRequestCallback.OnProtocolExecution(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest)">
<summary> Called when [protocol execution]. </summary>
<param name="chromiumWebBrowser"> The chromium WebBrowser. </param>
<param name="browser"> The browser. </param>
<param name="frame"> The frame. </param>
<param name="request"> The request. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.ResourceRequestCallback.OnResourceLoadComplete(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IResponse,CefSharp.UrlRequestStatus,System.Int64)">
<summary> Called when [resource load complete]. </summary>
<param name="chromiumWebBrowser"> The chromium WebBrowser. </param>
<param name="browser"> The browser. </param>
<param name="frame"> The frame. </param>
<param name="request"> The request. </param>
<param name="response"> The response. </param>
<param name="status"> The status. </param>
<param name="receivedContentLength"> Length of the received content. </param>
</member>
<member
  name="M:Baby.ResourceRequestCallback.OnResourceRedirect(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IResponse,System.String@)">
<summary> Called when [resource redirect]. </summary>
<param name="chromiumWebBrowser"> The chromium WebBrowser. </param>
<param name="browser"> The browser. </param>
<param name="frame"> The frame. </param>
<param name="request"> The request. </param>
<param name="response"> The response. </param>
<param name="newUrl"> The new URL. </param>
</member>
<member
  name="M:Baby.ResourceRequestCallback.OnResourceResponse(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IResponse)">
<summary> Called when [resource response]. </summary>
<param name="chromiumWebBrowser"> The chromium WebBrowser. </param>
<param name="browser"> The browser. </param>
<param name="frame"> The frame. </param>
<param name="request"> The request. </param>
<param name="response"> The response. </param>
<returns> </returns>
</member>
<member name="M:Baby.ResourceRequestCallback.Dispose">
<inheritdoc />
<summary> Performs application-defined tasks associated with freeing, releasing, or resetting
unmanaged resources. </summary>
</member>
<member name="T:Baby.SchemaCallback">
<summary> </summary>
<seealso cref="T:CefSharp.IResourceHandler" />
</member>
<member name="F:Baby.SchemaCallback._fileName">
<summary> The file name </summary>
</member>
<member name="F:Baby.SchemaCallback._mimeType">
<summary> The MIME type </summary>
</member>
<member name="F:Baby.SchemaCallback._webBrowser">
<summary> The browser </summary>
</member>
<member name="F:Baby.SchemaCallback._stream">
<summary> The stream </summary>
</member>
<member name="F:Baby.SchemaCallback._uri">
<summary> The URI </summary>
</member>
<member name="F:Baby.SchemaCallback._path">
<summary> The application path </summary>
</member>
<member name="M:Baby.SchemaCallback.#ctor(System.Windows.Forms.Form)">
<summary> Initializes a new instance of the
<see cref="T:Baby.SchemaCallback" />
class. </summary>
<param name="form"> The form. </param>
</member>
<member name="M:Baby.SchemaCallback.Dispose">
<inheritdoc />
<summary> Performs application-defined tasks associated with freeing, releasing, or resetting
unmanaged resources. </summary>
</member>
<member name="M:Baby.SchemaCallback.Open(CefSharp.IRequest,System.Boolean@,CefSharp.ICallback)">
<summary> Opens the specified request. </summary>
<param name="request"> The request. </param>
<param name="handleRequest"> if set to
<c> true </c>
[handle request]. </param>
<param name="callBack"> The callBack. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.SchemaCallback.GetResponseHeaders(CefSharp.IResponse,System.Int64@,System.String@)">
<summary> Gets the response headers. </summary>
<param name="response"> The response. </param>
<param name="responseLength"> Length of the response. </param>
<param name="redirectUrl"> The redirect URL. </param>
</member>
<member
  name="M:Baby.SchemaCallback.ReadResponse(System.IO.Stream,System.Int32@,CefSharp.ICallback)">
<summary> Reads the response. </summary>
<param name="dataOut"> The data out. </param>
<param name="bytesRead"> The bytes read. </param>
<param name="callback"> The callBack. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.SchemaCallback.Read(System.IO.Stream,System.Int32@,CefSharp.Callback.IResourceReadCallback)">
<summary> Reads the specified data out. </summary>
<param name="dataOut"> The data out. </param>
<param name="bytesRead"> The bytes read. </param>
<param name="callback"> The callBack. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.SchemaCallback.Skip(System.Int64,System.Int64@,CefSharp.Callback.IResourceSkipCallback)">
<summary> Skips the specified bytes to skip. </summary>
<param name="bytesToSkip"> The bytes to skip. </param>
<param name="bytesSkipped"> The bytes skipped. </param>
<param name="callback"> The callBack. </param>
<returns> </returns>
</member>
<member name="M:Baby.SchemaCallback.Cancel">
<summary> Cancels this instance. </summary>
</member>
<member name="M:Baby.SchemaCallback.CanGetCookie(CefSharp.Cookie)">
<summary> Determines whether this instance [can get cookie] the specified cookie. </summary>
<param name="cookie"> The cookie. </param>
<returns>
<c> true </c>
if this instance [can get cookie] the specified cookie; otherwise,
<c> false </c>
. </returns>
</member>
<member name="M:Baby.SchemaCallback.CanSetCookie(CefSharp.Cookie)">
<summary> Determines whether this instance [can set cookie] the specified cookie. </summary>
<param name="cookie"> The cookie. </param>
<returns>
<c> true </c>
if this instance [can set cookie] the specified cookie; otherwise,
<c> false </c>
. </returns>
</member>
<member name="M:Baby.SchemaCallback.ProcessRequest(CefSharp.IRequest,CefSharp.ICallback)">
<summary> Processes the request. </summary>
<param name="request"> The request. </param>
<param name="callback"> The callBack. </param>
<returns> </returns>
</member>
<member name="T:Baby.SchemaCallbackFactory">
<summary> </summary>
<seealso cref="T:CefSharp.ISchemeHandlerFactory" />
</member>
<member
  name="M:Baby.SchemaCallbackFactory.Create(CefSharp.IBrowser,CefSharp.IFrame,System.String,CefSharp.IRequest)">
<summary> Creates the specified browser. </summary>
<param name="browser"> The browser. </param>
<param name="frame"> The frame. </param>
<param name="schemeName"> Name of the scheme. </param>
<param name="request"> The request. </param>
<returns> </returns>
</member>
<member name="T:Baby.SetterCallback">
<summary> </summary>
<param name="target"> The target. </param>
<param name="value"> The value. </param>
<returns> </returns>
</member>
<member name="T:Baby.ControlBox">
<summary> </summary>
<seealso cref="T:MetroSet_UI.Controls.MetroSetControlBox" />
</member>
<member name="F:Baby.ControlBox._maximumSize">
<summary> The maximum size </summary>
</member>
<member name="F:Baby.ControlBox._minimumSize">
<summary> The minimum size </summary>
</member>
<member name="F:Baby.ControlBox._normalSize">
<summary> The normal size </summary>
</member>
<member name="F:Baby.ControlBox._toolTip">
<summary> The tool tip </summary>
</member>
<member name="M:Baby.ControlBox.#ctor">
<summary> Initializes a new instance of the
<see cref="T:Baby.ControlBox" />
class. </summary>
</member>
<member name="M:Baby.ControlBox.OnMaximizeButtonClick(System.Object,System.EventArgs)">
<summary> Called when [maximize button click]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.ControlBox.OnMaxmizeButtonHover(System.Object,System.EventArgs)">
<summary> Called when [maxmize button hover]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.ControlBox.OnCloseButtonClick(System.Object,System.EventArgs)">
<summary> Called when [close button click]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.ControlBox.OnCloseButtonHover(System.Object,System.EventArgs)">
<summary> Called when [close button hover]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.ControlBox.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.BrowserConfig">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.Branding">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.AcceptLanguage">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.UserAgent">
<summary> UserAgent to fix issue with Google account authentication </summary>
</member>
<member name="F:Baby.BrowserConfig.Homepage">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.NewTab">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.Internal">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.Downloads">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.FileNotFound">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.CannotConnect">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.Google">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.EPA">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.GPO">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.GovInfo">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.CRS">
<summary> The congressional search URL </summary>
</member>
<member name="F:Baby.BrowserConfig.LOC">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.OMB">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.Treasury">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.NASA">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.NOAA">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.PyPI">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.NuGet">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.GitHub">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.WebSecurity">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.CrossDomainSecurity">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.WebGl">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.ApplicationCache">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.Proxy">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.ProxyIp">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.ProxyPort">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.ProxyUsername">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.ProxyPassword">
<summary> </summary>
</member>
<member name="F:Baby.BrowserConfig.ProxyBypassList">
<summary> </summary>
</member>
<member name="T:Baby.BrowserHotKey">
<summary> POCO for holding hot-key data </summary>
</member>
<member name="F:Baby.BrowserHotKey.Key">
<summary> The key </summary>
</member>
<member name="F:Baby.BrowserHotKey.KeyCode">
<summary> The key code </summary>
</member>
<member name="F:Baby.BrowserHotKey.Ctrl">
<summary> The control </summary>
</member>
<member name="F:Baby.BrowserHotKey.Shift">
<summary> The shift </summary>
</member>
<member name="F:Baby.BrowserHotKey.Alt">
<summary> The alt </summary>
</member>
<member name="F:Baby.BrowserHotKey.Callback">
<summary> The callback </summary>
</member>
<member
  name="M:Baby.BrowserHotKey.#ctor(System.Action,System.Windows.Forms.Keys,System.Boolean,System.Boolean,System.Boolean)">
<summary> Initializes a new instance of the
<see cref="T:Baby.BrowserHotKey" />
class. </summary>
<param name="callback"> The callback. </param>
<param name="key"> The key. </param>
<param name="ctrl"> if set to
<c> true </c>
[control]. </param>
<param name="shift"> if set to
<c> true </c>
[shift]. </param>
<param name="alt"> if set to
<c> true </c>
[alt]. </param>
</member>
<member name="T:Baby.BrowserTab">
<summary> POCO created for holding data per tab </summary>
</member>
<member name="F:Baby.BrowserTab.IsOpen">
<summary> The is open </summary>
</member>
<member name="F:Baby.BrowserTab.OriginalUrl">
<summary> The original URL </summary>
</member>
<member name="F:Baby.BrowserTab.CurrentUrl">
<summary> The current URL </summary>
</member>
<member name="F:Baby.BrowserTab.Title">
<summary> The title </summary>
</member>
<member name="F:Baby.BrowserTab.ReferringUrl">
<summary> The referring URL </summary>
</member>
<member name="F:Baby.BrowserTab.DateCreated">
<summary> The date created </summary>
</member>
<member name="F:Baby.BrowserTab.Tab">
<summary> The tab </summary>
</member>
<member name="F:Baby.BrowserTab.Browser">
<summary> The browser </summary>
</member>
<member name="T:Baby.WebBrowser">
<inheritdoc />
<summary> The main Baby form, supporting multiple tabs. We used the x86 version of CefSharp, so the
app works on 32-bit and 64-bit machines. If you would only like to support 64-bit machines, simply
change the DLL references. </summary>
</member>
<member name="F:Baby.WebBrowser._newTabItem">
<summary> The new tab strip </summary>
</member>
<member name="F:Baby.WebBrowser._downloadStrip">
<summary> The download strip </summary>
</member>
<member name="F:Baby.WebBrowser._originalUrl">
<summary> The current full URL </summary>
</member>
<member name="F:Baby.WebBrowser._finalUrl">
<summary> The current clean URL </summary>
</member>
<member name="F:Baby.WebBrowser._currentTitle">
<summary> The current title </summary>
</member>
<member name="F:Baby.WebBrowser._downloadCallback">
<summary> The download handler </summary>
</member>
<member name="F:Baby.WebBrowser._contextMenuCallback">
<summary> The context menu handler </summary>
</member>
<member name="F:Baby.WebBrowser._lifeSpanCallback">
<summary> The life span handler </summary>
</member>
<member name="F:Baby.WebBrowser._keyboardCallback">
<summary> The keyboard handler </summary>
</member>
<member name="F:Baby.WebBrowser._requestCallback">
<summary> The request handler </summary>
</member>
<member name="F:Baby.WebBrowser._statusUpdate">
<summary> The status update </summary>
</member>
<member name="F:Baby.WebBrowser._browserCallback">
<summary> The browser action </summary>
</member>
<member name="F:Baby.WebBrowser._path">
<summary> The application path </summary>
</member>
<member name="F:Baby.WebBrowser._searchOpen">
<summary> The search open </summary>
</member>
<member name="F:Baby.WebBrowser._lastSearch">
<summary> The last search </summary>
</member>
<member name="F:Baby.WebBrowser._searchEngineUrl">
<summary> The search engine URL </summary>
</member>
<member name="F:Baby.WebBrowser._oldWindowState">
<summary> The old window state </summary>
</member>
<member name="F:Baby.WebBrowser._oldBorderStyle">
<summary> The old border style </summary>
</member>
<member name="F:Baby.WebBrowser._fullScreen">
<summary> The is full screen </summary>
</member>
<member name="F:Baby.WebBrowser._cancelRequests">
<summary> The download cancel requests </summary>
</member>
<member name="F:Baby.WebBrowser._downloadItems">
<summary> The downloads </summary>
</member>
<member name="F:Baby.WebBrowser.Instance">
<summary> The instance </summary>
</member>
<member name="F:Baby.WebBrowser.Assembly">
<summary> The assembly </summary>
</member>
<member name="F:Baby.WebBrowser.Host">
<summary> The host </summary>
</member>
<member name="F:Baby.WebBrowser.DownloadNames">
<summary> The download names </summary>
</member>
<member name="P:Baby.WebBrowser.CurrentIndex">
<summary> Gets or sets the index of the current. </summary>
<value> The index of the current. </value>
</member>
<member name="P:Baby.WebBrowser.LastIndex">
<summary> Gets the last index. </summary>
<value> The last index. </value>
</member>
<member name="P:Baby.WebBrowser.CancelRequests">
<summary> Gets the cancel requests. </summary>
<value> The cancel requests. </value>
</member>
<member name="P:Baby.WebBrowser.DownloadItems">
<summary> Gets the downloads. </summary>
<value> The downloads. </value>
</member>
<member name="P:Baby.WebBrowser.CurrentTab">
<summary> Gets the current tab. </summary>
<value> The current tab. </value>
</member>
<member name="P:Baby.WebBrowser.SearchEngineUrl">
<summary> Gets the search engine URL. </summary>
<value> The search engine URL. </value>
</member>
<member name="P:Baby.WebBrowser.LoadingDuration">
<summary> Gets the duration of the current tab loading. </summary>
<value> The duration of the current tab loading. </value>
</member>
<member name="P:Baby.WebBrowser.CurrentBrowser">
<summary> Gets the current browser. </summary>
<value> The current browser. </value>
</member>
<member name="M:Baby.WebBrowser.#ctor">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.WebBrowser" />
class. </summary>
</member>
<member name="M:Baby.WebBrowser.InitializeBrowser">
<summary> this is done just once, to globally initialize CefSharp/CEF </summary>
</member>
<member name="M:Baby.WebBrowser.InitializeDownloads">
<summary> we must store download metadata in a list, since CefSharp does not </summary>
</member>
<member name="M:Baby.WebBrowser.InitializeToolStrip">
<summary> Sets the tool strip properties. </summary>
</member>
<member name="M:Baby.WebBrowser.InitializeTabControl">
<summary> Initializes the tab control. </summary>
</member>
<member name="M:Baby.WebBrowser.InitializePictureBox">
<summary> Initializes the PictureBox. </summary>
</member>
<member name="M:Baby.WebBrowser.InitializeLabels">
<summary> Sets the status label properties. </summary>
</member>
<member name="M:Baby.WebBrowser.InitializeTitle">
<summary> Sets the title label properties. </summary>
</member>
<member name="M:Baby.WebBrowser.InitializeDelegates">
<summary> Initializes the delegate. </summary>
</member>
<member name="M:Baby.WebBrowser.InitializeHotkeys">
<summary> these hot keys work when the user is focused on the .NET form and its controls, AND when
the user is focused on the browser (CefSharp portion) </summary>
</member>
<member name="M:Baby.WebBrowser.InitializeTooltips(System.Windows.Forms.Control.ControlCollection)">
<summary> we activate all the tooltips stored in the Tag property of the buttons </summary>
<param name="parent"> The parent. </param>
</member>
<member name="M:Baby.WebBrowser.RegisterCallbacks">
<summary> Initializes the callbacks. </summary>
</member>
<member name="M:Baby.WebBrowser.ConfigureBrowser(CefSharp.WinForms.ChromiumWebBrowser)">
<summary> this is done every time a new tab is opened </summary>
<param name="browser"> The browser. </param>
</member>
<member name="M:Baby.WebBrowser.FadeInAsync(System.Windows.Forms.Form,System.Int32)">
<summary> Fades the in asynchronously. </summary>
<param name="form"> The o. </param>
<param name="interval"> The interval. </param>
</member>
<member name="M:Baby.WebBrowser.FadeOutAsync(System.Windows.Forms.Form,System.Int32)">
<summary> Fades the out asynchronously. </summary>
<param name="form"> The o. </param>
<param name="interval"> The interval. </param>
</member>
<member name="M:Baby.WebBrowser.SetTabText(CefSharp.WinForms.ChromiumWebBrowser,System.String)">
<summary> Sets the tab title. </summary>
<param name="browser"> The browser. </param>
<param name="text"> The text. </param>
</member>
<member name="M:Baby.WebBrowser.SetTitleText(System.String)">
<summary> Sets the form title. </summary>
<param name="title"> Name of the tab. </param>
</member>
<member name="M:Baby.WebBrowser.SetUrl(System.String)">
<summary> Called by LoadURL to set the form URL. </summary>
<param name="url"> The URL. </param>
</member>
<member name="M:Baby.WebBrowser.SendMessage(System.String)">
<summary> Sends the message. </summary>
<param name="message"> The message. </param>
</member>
<member name="M:Baby.WebBrowser.SendNotification">
<summary> Notifies this instance. </summary>
</member>
<member name="M:Baby.WebBrowser.FindTextOnPage(System.Boolean)">
<summary> Finds the text on page. </summary>
<param name="next"> if set to
<c> true </c>
[next]. </param>
</member>
<member name="M:Baby.WebBrowser.GetControls">
<summary> Gets the controls. </summary>
<returns> </returns>
</member>
<member name="M:Baby.WebBrowser.GetDownloadPath(CefSharp.DownloadItem)">
<summary> Calculates the download path. </summary>
<param name="item"> The item. </param>
<returns> </returns>
</member>
<member name="M:Baby.WebBrowser.GetTabs">
<summary> Gets all tabs. </summary>
<returns> </returns>
</member>
<member name="M:Baby.WebBrowser.GetTabByBrowser(CefSharp.IWebBrowser)">
<summary> Gets the tab by browser. </summary>
<param name="browser"> The browser. </param>
<returns> </returns>
</member>
<member name="M:Baby.WebBrowser.GetApplicationDirectory(System.String)">
<summary> Gets the application directory. </summary>
<param name="name"> The name. </param>
<returns> </returns>
</member>
<member name="M:Baby.WebBrowser.GetResourceStream(System.String,System.Boolean)">
<summary> Gets the resource stream. </summary>
<param name="fileName"> The fileName. </param>
<param name="nameSpace"> if set to
<c> true </c>
[with nameSpace]. </param>
<returns> </returns>
</member>
<member name="M:Baby.WebBrowser.GetBrowserAsync(System.String,System.Boolean)">
<summary> Gets the browser asynchronous. </summary>
<param name="url"> The URL. </param>
<param name="focused"> if set to
<c> true </c>
[focused]. </param>
<returns> </returns>
</member>
<member name="M:Baby.WebBrowser.CloseOtherTabs">
<summary> Closes the other tabs. </summary>
</member>
<member name="M:Baby.WebBrowser.LoadUrl(System.String)">
<summary> Loads the URL. </summary>
<param name="url"> The URL. </param>
</member>
<member name="M:Baby.WebBrowser.WaitForBrowserToInitialize(CefSharp.WinForms.ChromiumWebBrowser)">
<summary> Waits for browser to initialize. </summary>
<param name="browser"> The browser. </param>
</member>
<member name="M:Baby.WebBrowser.EnableBackButton(System.Boolean)">
<summary> Enables the back button. </summary>
<param name="canGoBack"> if set to
<c> true </c>
[can go back]. </param>
</member>
<member name="M:Baby.WebBrowser.EnableForwardButton(System.Boolean)">
<summary> Enables the forward button. </summary>
<param name="canGoForward"> if set to
<c> true </c>
[can go forward]. </param>
</member>
<member name="M:Baby.WebBrowser.CleanUrl(System.String)">
<summary> Called by SetURL to clean up the URL </summary>
<param name="url"> The URL. </param>
<returns> </returns>
</member>
<member name="M:Baby.WebBrowser.InvokeIf(System.Action)">
<summary> Invokes if needed. </summary>
<param name="action"> The action. </param>
</member>
<member name="M:Baby.WebBrowser.IsBlank(System.String)">
<summary> Determines whether the specified URL is blank. </summary>
<param name="url"> The URL. </param>
<returns>
<c> true </c>
if the specified URL is blank; otherwise,
<c> false </c>
. </returns>
</member>
<member name="M:Baby.WebBrowser.IsBlankOrSystem(System.String)">
<summary> Determines whether [is blank or system] [the specified URL]. </summary>
<param name="url"> The URL. </param>
<returns>
<c> true </c>
if [is blank or system] [the specified URL]; otherwise,
<c> false </c>
. </returns>
</member>
<member name="M:Baby.WebBrowser.IsFirstTab">
<summary> Determines whether [is on first tab]. </summary>
<returns>
<c> true </c>
if [is on first tab]; otherwise,
<c> false </c>
. </returns>
</member>
<member name="M:Baby.WebBrowser.IsLastTab">
<summary> Determines whether [is on last tab]. </summary>
<returns>
<c> true </c>
if [is on last tab]; otherwise,
<c> false </c>
. </returns>
</member>
<member name="M:Baby.WebBrowser.StopActiveTab">
<summary> Stops the active tab. </summary>
</member>
<member name="M:Baby.WebBrowser.NextTab">
<summary> Nexts the tab. </summary>
</member>
<member name="M:Baby.WebBrowser.PreviousTab">
<summary> Previous tab. </summary>
</member>
<member name="M:Baby.WebBrowser.AddBlankWindow">
<summary> Adds the blank window. </summary>
</member>
<member name="M:Baby.WebBrowser.AddBlankTab">
<summary> Adds the blank tab. </summary>
</member>
<member name="M:Baby.WebBrowser.AddNewBrowserTab(System.String,System.Boolean,System.String)">
<summary> Adds the new browser tab. </summary>
<param name="url"> The URL. </param>
<param name="focusNewTab"> if set to
<c> true </c>
[focus new tab]. </param>
<param name="referringUrl"> The referring URL. </param>
<returns> </returns>
</member>
<member name="M:Baby.WebBrowser.AddNewBrowser(Baby.BrowserTabStripItem,System.String)">
<summary> Adds the new browser. </summary>
<param name="tabStrip"> The tab strip. </param>
<param name="url"> The URL. </param>
<returns> </returns>
</member>
<member name="M:Baby.WebBrowser.SearchGovernmentDomains(System.String)">
<summary> Executes the multi search. </summary>
</member>
<member name="M:Baby.WebBrowser.UpdateDownloadItem(CefSharp.DownloadItem)">
<summary> Updates the download item. </summary>
<param name="item"> The item. </param>
</member>
<member name="M:Baby.WebBrowser.DownloadsInProgress">
<summary> DownloadItems the in progress. </summary>
<returns> </returns>
</member>
<member name="M:Baby.WebBrowser.RefreshActiveTab">
<summary> Refreshes the active tab. </summary>
</member>
<member name="M:Baby.WebBrowser.CloseActiveTab">
<summary> Closes the active tab. </summary>
</member>
<member name="M:Baby.WebBrowser.OpenDownloadsTab">
<summary> Opens the downloads tab. </summary>
</member>
<member name="M:Baby.WebBrowser.OpenDeveloperTools">
<summary> Opens the developer tools. </summary>
</member>
<member name="M:Baby.WebBrowser.OpenChromeBrowser(System.String)">
<summary> Opens the chrome browser. </summary>
<param name="args"> The arguments. </param>
</member>
<member name="M:Baby.WebBrowser.OpenChromeBrowser">
<summary> Opens the chrome browser. </summary>
</member>
<member name="M:Baby.WebBrowser.OpenEdgeBrowser(System.String)">
<summary> Opens the edge browser. </summary>
<param name="args"> The arguments. </param>
</member>
<member name="M:Baby.WebBrowser.OpenEdgeBrowser">
<summary> Opens the edge browser. </summary>
</member>
<member name="M:Baby.WebBrowser.OpenFireFoxBrowser(System.String)">
<summary> Opens the fire fox browser. </summary>
<param name="args"> The arguments. </param>
</member>
<member name="M:Baby.WebBrowser.OpenFireFoxBrowser">
<summary> Opens the fire fox browser. </summary>
</member>
<member name="M:Baby.WebBrowser.OpenSearch">
<summary> Opens the search. </summary>
</member>
<member name="M:Baby.WebBrowser.CloseSearch">
<summary> Closes the search. </summary>
</member>
<member name="M:Baby.WebBrowser.ToggleFullscreen">
<summary> Toggles the fullscreen. </summary>
</member>
<member name="M:Baby.WebBrowser.UpdateStatus">
<summary> Updates the status label. </summary>
</member>
<member name="M:Baby.WebBrowser.UpdateStatus(System.DateTime)">
<summary> Updates the status label. </summary>
<param name="dateTime"> The date time. </param>
</member>
<member name="M:Baby.WebBrowser.OnLoad(System.Object,System.EventArgs)">
<summary> Called when [load]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnUrlChanged(System.Object,CefSharp.AddressChangedEventArgs)">
<summary> Called when [URL changed]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:CefSharp.AddressChangedEventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnLoadError(System.Object,CefSharp.LoadErrorEventArgs)">
<summary> Called when [load error]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:CefSharp.LoadErrorEventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnTitleChanged(System.Object,CefSharp.TitleChangedEventArgs)">
<summary> Called when [title changed]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:CefSharp.TitleChangedEventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnDeveloperToolsButtonClick(System.Object,System.EventArgs)">
<summary> Called when [develop tools button clicked]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member
  name="M:Baby.WebBrowser.OnLoadingStateChanged(System.Object,CefSharp.LoadingStateChangedEventArgs)">
<summary> Called when [loading state changed]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:CefSharp.LoadingStateChangedEventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnTabClosed(System.Object,System.EventArgs)">
<summary> Called when [tab closed]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnStatusUpdated(System.Object,CefSharp.StatusMessageEventArgs)">
<summary> Called when [status updated]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:CefSharp.StatusMessageEventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnTabClosing(Baby.TabClosingEventArgs)">
<summary> Raises the
<see cref="E:TabClosing" />
event. </summary>
<param name="e"> The
<see cref="T:Baby.TabClosingEventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnTabsChanged(Baby.TabItemChangedEventArgs)">
<summary> Raises the
<see cref="E:TabsChanged" />
event. </summary>
<param name="e"> The
<see cref="T:Baby.TabItemChangedEventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnSelectedDomainChanged(System.Object,System.EventArgs)">
<summary> Called when [search engine selected]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnTimerTick(System.Object,System.EventArgs)">
<summary> Called when [timer tick]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnMenuCloseClick(System.Object,System.EventArgs)">
<summary> Called when [menu close clicked]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnCloseOtherTabsClick(System.Object,System.EventArgs)">
<summary> Called when [close other tabs clicked]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnBackButtonClick(System.Object,System.EventArgs)">
<summary> Called when [back button click]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnForwardButtonClick(System.Object,System.EventArgs)">
<summary> Called when [forward button click]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnDownloadsButtonClick(System.Object,System.EventArgs)">
<summary> Called when [downloads button clicked]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnRefreshButtonClick(System.Object,System.EventArgs)">
<summary> Called when [refresh button clicked]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnStopButtonClick(System.Object,System.EventArgs)">
<summary> Called when [stop button clicked]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member
  name="M:Baby.WebBrowser.OnSearchButtonClick(System.Object,System.Windows.Forms.MouseEventArgs)">
<summary> Called when [menu lable mouse hover]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.Windows.Forms.MouseEventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnSearchDialogClosing(System.Object,System.EventArgs)">
<summary> Called when [URL text box text changed]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnSourceButtonClick(System.Object,System.EventArgs)">
<summary> Called when [source button click]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member
  name="M:Baby.WebBrowser.OnUrlTextBoxKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
<summary> Called when [URL text box key down]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.Windows.Forms.KeyEventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnUrlTextBoxClick(System.Object,System.EventArgs)">
<summary> Called when [URL text box clicked]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnTabPagesClick(System.Object,System.Windows.Forms.MouseEventArgs)">
<summary> Called when [tab pages clicked]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.Windows.Forms.MouseEventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
<summary> Called when [closing]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.Windows.Forms.FormClosingEventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnSearchPanelClearButtonClick(System.Object,System.EventArgs)">
<summary> Called when [close search button click]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnSearchPreviousButtonClick(System.Object,System.EventArgs)">
<summary> Called when [previous search button click]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnSearchForwardButtonClick(System.Object,System.EventArgs)">
<summary> Called when [next search button click]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnSearchPanelTextChanged(System.Object,System.EventArgs)">
<summary> Called when [search text changed]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnSearchKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
<summary> Called when [search key down]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.Windows.Forms.KeyEventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnHomeButtonClick(System.Object,System.EventArgs)">
<summary> Called when [home button click]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnGoButtonClick(System.Object,System.EventArgs)">
<summary> Called when [go button clicked]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnCloseButtonClick(System.Object,System.EventArgs)">
<summary> Called when [close button clicked]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnFireFoxButtonClick(System.Object,System.EventArgs)">
<summary> Called when [fire fox button click]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnEdgeButtonClick(System.Object,System.EventArgs)">
<summary> Called when [close button clicked]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnChromeButtonClick(System.Object,System.EventArgs)">
<summary> Called when [close button clicked]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnRightClick(System.Object,System.Windows.Forms.MouseEventArgs)">
<summary> Called when [right click]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.Windows.Forms.MouseEventArgs" />
instance containing the event data. </param>
</member>
<member
  name="M:Baby.WebBrowser.OnContextMenuItemClick(System.Object,System.Windows.Forms.MouseEventArgs)">
<summary> Called when [context menu item click]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.Windows.Forms.MouseEventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnContextMenuMouseLeave(System.Object,System.EventArgs)">
<summary> Called when [context menu mouse leave]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.Windows.Forms.MouseEventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnSharepointButtonClicked(System.Object,System.EventArgs)">
<summary> Called when [refresh button clicked]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnFormClosing(System.Object,System.EventArgs)">
<summary> Called when [form closing]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.OnActivated(System.Object,System.EventArgs)">
<summary> Called when [shown]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.WebBrowser.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="F:Baby.WebBrowser.components">
<summary> Required designer variable. </summary>
</member>
<member name="M:Baby.WebBrowser.Dispose(System.Boolean)">
<summary> Clean up any resources being used. </summary>
<param name="disposing"> true if managed resources should be disposed; otherwise, false. </param>
</member>
<member name="M:Baby.WebBrowser.InitializeComponent">
<summary> Required method for Designer support - do not modify the contents of this method with the
code editor. </summary>
</member>
<member name="T:Baby.Button">
<summary> </summary>
<seealso cref="T:MetroSet_UI.Controls.MetroSetButton" />
</member>
<member name="P:Baby.Button.ToolTip">
<summary> Gets or sets the tool tip. </summary>
<value> The tool tip. </value>
</member>
<member name="P:Baby.Button.HoverText">
<summary> Gets or sets the hover text. </summary>
<value> The hover text. </value>
</member>
<member name="M:Baby.Button.#ctor">
<summary> Initializes a new instance of the
<see cref="T:Baby.Button" />
class. </summary>
</member>
<member name="M:Baby.Button.SetForeColor(System.Drawing.Color)">
<summary> Sets the color of the fore. Required Attributes: ForeColor </summary>
<param name="foreColor"> </param>
</member>
<member name="M:Baby.Button.OnMouseOver(System.Object,System.EventArgs)">
<summary> Called when [mouse over]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.Button.OnClick(System.Object,System.EventArgs)">
<summary> Called when [click]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.Button.ReSize(System.Int32,System.Int32)">
<summary> Res the size. </summary>
<param name="width"> The width. </param>
<param name="height"> The height. </param>
</member>
<member name="M:Baby.Button.SetText(System.String)">
<summary> Sets the text. </summary>
<param name="text"> The text. </param>
</member>
<member name="M:Baby.Button.ReLocate(System.Int32,System.Int32)">
<summary> Res the locate. </summary>
<param name="x"> The x. </param>
<param name="y"> The y. </param>
</member>
<member name="M:Baby.Button.OnMouseLeave(System.Object,System.EventArgs)">
<summary> Called when [mouse leave]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.Button.SetBackColor(System.Drawing.Color)">
<summary> Sets the color of the back. </summary>
<param name="normal"> The normal. </param>
</member>
<member name="M:Baby.Button.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.ComboBox">
<summary> </summary>
<seealso cref="T:MetroSet_UI.Controls.MetroSetComboBox" />
</member>
<member name="P:Baby.ComboBox.ToolTip">
<summary> Gets or sets the tool tip. </summary>
<value> The tool tip. </value>
</member>
<member name="P:Baby.ComboBox.HoverText">
<summary> Gets or sets the hover text. </summary>
<value> The hover text. </value>
</member>
<member name="M:Baby.ComboBox.#ctor">
<summary> Initializes a new instance of the
<see cref="T:Baby.ComboBox" />
class. </summary>
</member>
<member name="M:Baby.ComboBox.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.BasicDialog">
<summary> </summary>
<seealso cref="T:Syncfusion.Windows.Forms.MetroForm" />
</member>
<member name="F:Baby.BasicDialog._path">
<summary> The locked object </summary>
</member>
<member name="F:Baby.BasicDialog._busy">
<summary> The busy </summary>
</member>
<member name="F:Baby.BasicDialog._statusUpdate">
<summary> The status update </summary>
</member>
<member name="F:Baby.BasicDialog._time">
<summary> The time </summary>
</member>
<member name="F:Baby.BasicDialog._count">
<summary> The count </summary>
</member>
<member name="F:Baby.BasicDialog._seconds">
<summary> The seconds </summary>
</member>
<member name="F:Baby.BasicDialog._data">
<summary> The data </summary>
</member>
<member name="F:Baby.BasicDialog._selectedPath">
<summary> The selected path </summary>
</member>
<member name="F:Baby.BasicDialog._selectedFile">
<summary> The selected file </summary>
</member>
<member name="F:Baby.BasicDialog._initialDirectory">
<summary> The initial directory </summary>
</member>
<member name="F:Baby.BasicDialog._fileExtension">
<summary> The file extension </summary>
</member>
<member name="F:Baby.BasicDialog._extension">
<summary> The extension </summary>
</member>
<member name="F:Baby.BasicDialog._filePaths">
<summary> The file paths </summary>
</member>
<member name="F:Baby.BasicDialog._searchPaths">
<summary> The initial dir paths </summary>
</member>
<member name="F:Baby.BasicDialog._radioButtons">
<summary> The radio buttons </summary>
</member>
<member name="F:Baby.BasicDialog._image">
<summary> The image </summary>
</member>
<member name="M:Baby.BasicDialog.#ctor">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.DialogBase" />
class. </summary>
</member>
<member name="M:Baby.BasicDialog.GetExtensionImage">
<summary> Gets the image. </summary>
<returns> </returns>
</member>
<member name="M:Baby.BasicDialog.ClearRadioButtons">
<summary> Clears the radio buttons. </summary>
</member>
<member name="M:Baby.BasicDialog.InvokeIf(System.Action)">
<summary> Invokes if needed. </summary>
<param name="action"> The action. </param>
</member>
<member name="M:Baby.BasicDialog.GetControls">
<summary> Gets the controls. </summary>
<returns> </returns>
</member>
<member name="M:Baby.BasicDialog.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="F:Baby.BasicDialog.components">
<summary> Required designer variable. </summary>
</member>
<member name="M:Baby.BasicDialog.Dispose(System.Boolean)">
<summary> Clean up any resources being used. </summary>
<param name="disposing"> true if managed resources should be disposed; otherwise, false. </param>
</member>
<member name="M:Baby.BasicDialog.InitializeComponent">
<summary> Required method for Designer support - do not modify the contents of this method with the
code editor. </summary>
</member>
<member name="T:Baby.ErrorDialog">
<summary> </summary>
<seealso cref="T:Syncfusion.Windows.Forms.MetroForm" />
</member>
<member name="P:Baby.ErrorDialog.HoverText">
<summary> Gets or sets the hover text. </summary>
<value> The hover text. </value>
</member>
<member name="P:Baby.ErrorDialog.Exception">
<summary> Gets or sets the exception. </summary>
<value> The exception. </value>
</member>
<member name="P:Baby.ErrorDialog.IconPath">
<summary> Gets or sets the icon path. </summary>
<value> The icon path. </value>
</member>
<member name="M:Baby.ErrorDialog.#ctor">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.ErrorDialog" />
class. </summary>
</member>
<member name="M:Baby.ErrorDialog.#ctor(System.Exception)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.ErrorDialog" />
class. </summary>
<param name="ext"> The ext. </param>
</member>
<member name="M:Baby.ErrorDialog.#ctor(System.String)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.ErrorDialog" />
class. </summary>
<param name="message"> The message. </param>
</member>
<member name="M:Baby.ErrorDialog.OnLoad(System.Object,System.EventArgs)">
<summary> Called when [load]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.ErrorDialog.SetText">
<summary> Sets the text. </summary>
</member>
<member name="M:Baby.ErrorDialog.SetText(System.Exception)">
<summary> Sets the text. </summary>
<param name="exc"> The exc. </param>
</member>
<member name="M:Baby.ErrorDialog.SetText(System.String)">
<summary> Sets the text. </summary>
<param name="msg"> The MSG. </param>
</member>
<member name="M:Baby.ErrorDialog.OnCloseButtonClick(System.Object,System.EventArgs)">
<summary> Called when [close button click]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.ErrorDialog.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="F:Baby.ErrorDialog.components">
<summary> Required designer variable. </summary>
</member>
<member name="M:Baby.ErrorDialog.Dispose(System.Boolean)">
<summary> Clean up any resources being used. </summary>
<param name="disposing"> true if managed resources should be disposed; otherwise, false. </param>
</member>
<member name="M:Baby.ErrorDialog.InitializeComponent">
<summary> Required method for Designer support - do not modify the contents of this method with the
code editor. </summary>
</member>
<member name="T:Baby.FileBrowser">
<inheritdoc />
<summary> </summary>
<seealso cref="T:Syncfusion.Windows.Forms.MetroForm" />
</member>
<member name="P:Baby.FileBrowser.FileExtension">
<summary> Gets or sets the file extension. </summary>
<value> The file extension. </value>
</member>
<member name="P:Baby.FileBrowser.FilePaths">
<summary> Gets or sets the file paths. </summary>
<value> The file paths. </value>
</member>
<member name="P:Baby.FileBrowser.RadioButtons">
<summary> Gets or sets the radio buttons. </summary>
<value> The radio buttons. </value>
</member>
<member name="P:Baby.FileBrowser.SelectedPath">
<summary> Gets or sets the selected path. </summary>
<value> The selected path. </value>
</member>
<member name="P:Baby.FileBrowser.SelectedFile">
<summary> Gets or sets the selected file. </summary>
<value> The selected file. </value>
</member>
<member name="P:Baby.FileBrowser.IsBusy">
<summary> Gets a value indicating whether this instance is busy. </summary>
<value>
<c> true </c>
if this instance is busy; otherwise,
<c> false </c>
</value>
</member>
<member name="M:Baby.FileBrowser.#ctor">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.FileBrowser" />
class. </summary>
</member>
<member name="M:Baby.FileBrowser.#ctor(Baby.EXT)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.FileBrowser" />
class. </summary>
<param name="extension"> The extension. </param>
</member>
<member name="M:Baby.FileBrowser.RegisterCallbacks">
<summary> Registers the callbacks. </summary>
</member>
<member name="M:Baby.FileBrowser.RegisterRadioButtonEvents">
<summary> Sets the RadioButton events. </summary>
</member>
<member name="M:Baby.FileBrowser.GetRadioButtons">
<summary> Gets the radio buttons. </summary>
<returns> </returns>
</member>
<member name="M:Baby.FileBrowser.GetListViewPaths">
<summary> Gets the ListView paths. </summary>
<returns> </returns>
</member>
<member name="M:Baby.FileBrowser.GetInitialDirPaths">
<summary> Gets the initial dir paths. </summary>
<returns> </returns>
</member>
<member name="M:Baby.FileBrowser.PopulateListBox">
<summary> Populates the ListBox. </summary>
</member>
<member
  name="M:Baby.FileBrowser.PopulateListBox(System.Collections.Generic.IEnumerable{System.String})">
<summary> Populates the ListBox. </summary>
<param name="filePaths"> The file paths. </param>
</member>
<member name="M:Baby.FileBrowser.OnLoad(System.Object,System.EventArgs)">
<summary> Called when [load]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.FileBrowser.OnRadioButtonSelected(System.Object,System.EventArgs)">
<summary> Called when [RadioButton selected]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> </param>
</member>
<member name="M:Baby.FileBrowser.OnPathSelected(System.Object)">
<summary> Called when [path selected]. </summary>
<param name="sender"> The sender. </param>
</member>
<member name="M:Baby.FileBrowser.OnBrowseButtonClicked(System.Object,System.EventArgs)">
<summary> Called when [find button clicked]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.FileBrowser.OnCloseButtonClicked(System.Object,System.EventArgs)">
<summary> Called when [close button clicked]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="F:Baby.FileBrowser.components">
<summary> Required designer variable. </summary>
</member>
<member name="M:Baby.FileBrowser.Dispose(System.Boolean)">
<summary> Clean up any resources being used. </summary>
<param name="disposing"> true if managed resources should be disposed; otherwise, false. </param>
</member>
<member name="M:Baby.FileBrowser.InitializeComponent">
<summary> Required method for Designer support - do not modify the contents of this method with the
code editor. </summary>
</member>
<member name="T:Baby.GuidanceDialog">
<summary> </summary>
<seealso cref="T:Syncfusion.Windows.Forms.MetroForm" />
</member>
<member name="P:Baby.GuidanceDialog.FormFilter">
<summary> Gets or sets the form filter. </summary>
<value> The form filter. </value>
</member>
<member name="P:Baby.GuidanceDialog.SelectedColumns">
<summary> Gets or sets the selected columns. </summary>
<value> The selected columns. </value>
</member>
<member name="P:Baby.GuidanceDialog.Numerics">
<summary> Gets or sets the numerics. </summary>
<value> The numerics. </value>
</member>
<member name="P:Baby.GuidanceDialog.Fields">
<summary> Gets or sets the fields. </summary>
<value> The fields. </value>
</member>
<member name="P:Baby.GuidanceDialog.SelectedPath">
<summary> Gets or sets the selected path. </summary>
<value> The selected path. </value>
</member>
<member name="P:Baby.GuidanceDialog.SelectedItem">
<summary> Gets or sets the selected item. </summary>
<value> The selected item. </value>
</member>
<member name="M:Baby.GuidanceDialog.#ctor">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.GuidanceDialog" />
class. </summary>
</member>
<member name="M:Baby.GuidanceDialog.#ctor(System.Windows.Forms.BindingSource)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.GuidanceDialog" />
class. </summary>
<param name="bindingSource"> The binding source. </param>
</member>
<member name="M:Baby.GuidanceDialog.OnBrowseButtonClicked(System.Object,System.EventArgs)">
<summary> Called when [browse button clicked]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.GuidanceDialog.OnClearButtonClicked(System.Object,System.EventArgs)">
<summary> Called when [clear button clicked]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.GuidanceDialog.OnSelectButtonClicked(System.Object,System.EventArgs)">
<summary> Called when [select button clicked]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.GuidanceDialog.OnLoad(System.Object,System.EventArgs)">
<summary> Called when [load]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.GuidanceDialog.SetLabelText">
<summary> Sets the label text. </summary>
</member>
<member name="M:Baby.GuidanceDialog.PopulateListBox">
<summary> Populates the ListBox. </summary>
</member>
<member name="M:Baby.GuidanceDialog.PopulateSecondTabListBox">
<summary> Populates the second tab ListBox. </summary>
</member>
<member name="M:Baby.GuidanceDialog.UpdateHeaderText">
<summary> Updates the header text. </summary>
</member>
<member name="M:Baby.GuidanceDialog.OnListViewSelectedValueChanged(System.Object)">
<summary> Called when [ListView selected value changed]. </summary>
<param name="sender"> The sender. </param>
</member>
<member name="M:Baby.GuidanceDialog.OnCloseButtonClicked(System.Object,System.EventArgs)">
<summary> Called when [close button clicked]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.GuidanceDialog.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="F:Baby.GuidanceDialog.components">
<summary> Required designer variable. </summary>
</member>
<member name="M:Baby.GuidanceDialog.Dispose(System.Boolean)">
<summary> Clean up any resources being used. </summary>
<param name="disposing"> true if managed resources should be disposed; otherwise, false. </param>
</member>
<member name="M:Baby.GuidanceDialog.InitializeComponent">
<summary> Required method for Designer support - do not modify the contents of this method with the
code editor. </summary>
</member>
<member name="T:Baby.MessageDialog">
<summary> </summary>
</member>
<member name="M:Baby.MessageDialog.#ctor">
<inheritdoc />
<summary> </summary>
</member>
<member name="M:Baby.MessageDialog.#ctor(System.String)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.MessageDialog" />
class. </summary>
<param name="text"> The text displayed by the control. </param>
</member>
<member name="M:Baby.MessageDialog.#ctor(System.String,System.String)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.MessageDialog" />
class. </summary>
<param name="text"> The text. </param>
<param name="caption"> The caption. </param>
</member>
<member name="M:Baby.MessageDialog.OnLoad(System.Object,System.EventArgs)">
<summary> Called when [load]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> instance containing the event data. </param>
</member>
<member name="M:Baby.MessageDialog.OnCloseButtonClick(System.Object,System.EventArgs)">
<summary> Called when [close button clicked]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.MessageDialog.OnSelectButtonClick(System.Object,System.EventArgs)">
<summary> Called when [select button click]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.MessageDialog.OnCancelButtonClick(System.Object,System.EventArgs)">
<summary> Called when [cancel button click]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.MessageDialog.Fail(System.Exception)">
<summary> Get ErrorDialog Dialog. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="F:Baby.MessageDialog.components">
<summary> Required designer variable. </summary>
</member>
<member name="M:Baby.MessageDialog.Dispose(System.Boolean)">
<summary> Clean up any resources being used. </summary>
<param name="disposing"> true if managed resources should be disposed; otherwise, false. </param>
</member>
<member name="M:Baby.MessageDialog.InitializeComponent">
<summary> Required method for Designer support - do not modify the contents of this method with the
code editor. </summary>
</member>
<member name="T:Baby.SearchDialog">
<summary> </summary>
</member>
<member name="F:Baby.SearchDialog._queryPrefix">
<summary> The domain </summary>
</member>
<member name="F:Baby.SearchDialog._results">
<summary> The results </summary>
</member>
<member name="F:Baby.SearchDialog._keywordInput">
<summary> The input </summary>
</member>
<member name="F:Baby.SearchDialog._keywordLabelPrefix">
<summary> The keyword prefix </summary>
</member>
<member name="F:Baby.SearchDialog._domainLabelPrefix">
<summary> The domain prefix </summary>
</member>
<member name="P:Baby.SearchDialog.Results">
<summary> Gets or sets the results. </summary>
<value> The results. </value>
</member>
<member name="M:Baby.SearchDialog.#ctor">
<inheritdoc />
<summary> </summary>
</member>
<member name="M:Baby.SearchDialog.RegisterCallbacks">
<summary> Registers the callbacks. </summary>
</member>
<member name="M:Baby.SearchDialog.InitializeTextBox">
<summary> Initializes the buttons. </summary>
</member>
<member name="M:Baby.SearchDialog.InitializeLabels">
<summary> Initializes the labels. </summary>
</member>
<member name="M:Baby.SearchDialog.InitializeButtons">
<summary> Initializes the buttons. </summary>
</member>
<member name="M:Baby.SearchDialog.InitializeComboBox">
<summary> Initializes the ComboBox. </summary>
</member>
<member name="M:Baby.SearchDialog.FadeInAsync(System.Windows.Forms.Form,System.Int32)">
<summary> Fades the in asynchronous. </summary>
<param name="form"> The o. </param>
<param name="interval"> The interval. </param>
</member>
<member name="M:Baby.SearchDialog.FadeOutAsync(System.Windows.Forms.Form,System.Int32)">
<summary> Fades the out asynchronous. </summary>
<param name="form"> The o. </param>
<param name="interval"> The interval. </param>
</member>
<member name="M:Baby.SearchDialog.OnLoad(System.Object,System.EventArgs)">
<summary> Called when [load]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> instance containing the event data. </param>
</member>
<member name="M:Baby.SearchDialog.OnCloseButtonClick(System.Object,System.EventArgs)">
<summary> Called when [close button clicked]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.SearchDialog.OnLookupButtonClick(System.Object,System.EventArgs)">
<summary> Called when [okay button click]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.SearchDialog.OnClearButtonClick(System.Object,System.EventArgs)">
<summary> Called when [clear button click]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.SearchDialog.OnInputTextChanged(System.Object,System.EventArgs)">
<summary> Called when [input text changed]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.SearchDialog.OnSelectedDomainChanged(System.Object,System.EventArgs)">
<summary> Called when [search engine selected]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.SearchDialog.Fail(System.Exception)">
<summary> Get ErrorDialog Dialog. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="F:Baby.SearchDialog.components">
<summary> Required designer variable. </summary>
</member>
<member name="M:Baby.SearchDialog.Dispose(System.Boolean)">
<summary> Clean up any resources being used. </summary>
<param name="disposing"> true if managed resources should be disposed; otherwise, false. </param>
</member>
<member name="M:Baby.SearchDialog.InitializeComponent">
<summary> Required method for Designer support - do not modify the contents of this method with the
code editor. </summary>
</member>
<member name="T:Baby.ImageBox">
<inheritdoc />
<summary> </summary>
<seealso cref="T:System.Windows.Forms.PictureBox" />
</member>
<member name="P:Baby.ImageBox.ToolTip">
<summary> Gets or sets the tool tip. </summary>
<value> The tool tip. </value>
</member>
<member name="M:Baby.ImageBox.#ctor">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.ImageBox" />
class. </summary>
</member>
<member name="T:Baby.Label">
<summary> </summary>
<seealso cref="T:MetroSet_UI.Controls.MetroSetLabel" />
</member>
<member name="P:Baby.Label.ToolTip">
<summary> Gets or sets the tool tip. </summary>
<value> The tool tip. </value>
</member>
<member name="P:Baby.Label.HoverText">
<summary> Gets or sets the hover text. </summary>
<value> The hover text. </value>
</member>
<member name="M:Baby.Label.#ctor">
<summary> Initializes a new instance of the
<see cref="T:Baby.Label" />
class. </summary>
</member>
<member name="M:Baby.Label.#ctor(System.Drawing.Size,System.Drawing.Point)">
<summary> Initializes a new instance of the
<see cref="T:System.Windows.Forms.Label" />
class. </summary>
<param name="size"> The size. </param>
<param name="location"> The location. </param>
</member>
<member name="M:Baby.Label.#ctor(MetroSet_UI.Controls.MetroSetLabel)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:System.Windows.Forms.Label" />
class. </summary>
<param name="label"> The label. </param>
</member>
<member
  name="M:Baby.Label.#ctor(System.Drawing.Size,System.Drawing.Point,System.Windows.Forms.Control)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:System.Windows.Forms.Label" />
class. </summary>
<param name="size"> The size. </param>
<param name="location"> The location. </param>
<param name="parent"> The parent. </param>
</member>
<member
  name="M:Baby.Label.#ctor(System.Drawing.Size,System.Drawing.Point,System.Windows.Forms.Control,System.String)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:System.Windows.Forms.Label" />
class. </summary>
<param name="size"> The size. </param>
<param name="location"> The location. </param>
<param name="parent"> The parent. </param>
<param name="text"> The text. </param>
</member>
<member name="M:Baby.Label.SetText(System.String)">
<summary> Sets the text. </summary>
<param name="text"> The text. </param>
</member>
<member name="M:Baby.Label.SetTag(System.Object)">
<summary> Sets the tag. </summary>
<param name="tag"> The tag. </param>
</member>
<member name="M:Baby.Label.OnMouseOver(System.Object,System.EventArgs)">
<summary> Called when [mouse over]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.Label.OnMouseLeave(System.Object,System.EventArgs)">
<summary> Called when [mouse leave]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.Label.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.Layout">
<summary> </summary>
<seealso cref="T:MetroSet_UI.Controls.MetroSetPanel" />
</member>
<member name="P:Baby.Layout.ToolTip">
<summary> Gets or sets the tool tip. </summary>
<value> The tool tip. </value>
</member>
<member name="P:Baby.Layout.HoverText">
<summary> Gets or sets the hover text. </summary>
<value> The hover text. </value>
</member>
<member name="P:Baby.Layout.DataFilter">
<summary> Gets or sets the data filter. </summary>
<value> The data filter. </value>
</member>
<member name="P:Baby.Layout.Children">
<summary> Gets or sets the children. </summary>
<value> The children. </value>
</member>
<member name="M:Baby.Layout.#ctor">
<summary> Initializes a new instance of the
<see cref="T:Baby.Layout" />
class. </summary>
</member>
<member name="M:Baby.Layout.#ctor(System.Drawing.Size,System.Drawing.Point)">
<summary> Initializes a new instance of the
<see cref="T:Baby.Layout" />
class. </summary>
<param name="size"> The size. </param>
<param name="location"> The location. </param>
</member>
<member
  name="M:Baby.Layout.#ctor(System.Drawing.Size,System.Drawing.Point,System.Windows.Forms.Control)">
<summary> Initializes a new instance of the
<see cref="T:Baby.Layout" />
class. </summary>
<param name="size"> The size. </param>
<param name="location"> The location. </param>
<param name="parent"> The parent. </param>
</member>
<member name="M:Baby.Layout.#ctor(System.Windows.Forms.Control)">
<summary> Initializes a new instance of the
<see cref="T:Baby.Layout" />
class. </summary>
<param name="parent"> The parent. </param>
</member>
<member name="M:Baby.Layout.SetBorderColor(System.Drawing.Color)">
<summary> Sets the color of the border. </summary>
<param name="color"> The color. </param>
</member>
<member name="M:Baby.Layout.SetBackColor(System.Drawing.Color)">
<summary> Sets the color of the back. </summary>
<param name="color"> The color. </param>
</member>
<member name="M:Baby.Layout.AddChild(System.Windows.Forms.Control)">
<summary> Adds the child. </summary>
<param name="item"> The item. </param>
<returns> </returns>
</member>
<member name="M:Baby.Layout.GetChildren">
<summary> Gets the children. </summary>
<returns> </returns>
</member>
<member name="M:Baby.Layout.OnLoad(System.Object,System.EventArgs)">
<summary> Called when [load]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.Layout.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.SplashLayout">
<summary> </summary>
<seealso cref="T:MetroSet_UI.Controls.MetroSetPanel" />
</member>
<member name="P:Baby.SplashLayout.ToolTip">
<summary> Gets or sets the tool tip. </summary>
<value> The tool tip. </value>
</member>
<member name="P:Baby.SplashLayout.HoverText">
<summary> Gets or sets the hover text. </summary>
<value> The hover text. </value>
</member>
<member name="P:Baby.SplashLayout.DataFilter">
<summary> Gets or sets the data filter. </summary>
<value> The data filter. </value>
</member>
<member name="P:Baby.SplashLayout.Children">
<summary> Gets or sets the children. </summary>
<value> The children. </value>
</member>
<member name="M:Baby.SplashLayout.#ctor">
<summary> Initializes a new instance of the
<see cref="T:Baby.SplashLayout" />
class. </summary>
</member>
<member name="M:Baby.SplashLayout.#ctor(System.Drawing.Size,System.Drawing.Point)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.SplashLayout" />
class. </summary>
<param name="size"> The size. </param>
<param name="location"> The location. </param>
</member>
<member
  name="M:Baby.SplashLayout.#ctor(System.Drawing.Size,System.Drawing.Point,System.Windows.Forms.Control)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.SplashLayout" />
class. </summary>
<param name="size"> The size. </param>
<param name="location"> The location. </param>
<param name="parent"> The parent. </param>
</member>
<member name="M:Baby.SplashLayout.#ctor(System.Windows.Forms.Control)">
<summary> Initializes a new instance of the
<see cref="T:Baby.SplashLayout" />
class. </summary>
<param name="parent"> The parent. </param>
</member>
<member name="M:Baby.SplashLayout.SetBorderColor(System.Drawing.Color)">
<summary> Sets the color of the border. </summary>
<param name="color"> The color. </param>
</member>
<member name="M:Baby.SplashLayout.SetBackColor(System.Drawing.Color)">
<summary> Sets the color of the back. </summary>
<param name="color"> The color. </param>
</member>
<member name="M:Baby.SplashLayout.AddChild(System.Windows.Forms.Control)">
<summary> Adds the child. </summary>
<param name="item"> The item. </param>
<returns> </returns>
</member>
<member name="M:Baby.SplashLayout.GetChildren">
<summary> Gets the children. </summary>
<returns> </returns>
</member>
<member name="M:Baby.SplashLayout.OnLoad(System.Object,System.EventArgs)">
<summary> Called when [load]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.SplashLayout.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.ListBox">
<summary> </summary>
<seealso cref="T:MetroSet_UI.Controls.MetroSetListBox" />
</member>
<member name="P:Baby.ListBox.BindingSource">
<summary> Gets or sets the binding source. </summary>
<value> The binding source. </value>
</member>
<member name="P:Baby.ListBox.ToolTip">
<summary> Gets or sets the tool tip. </summary>
<value> The tool tip. </value>
</member>
<member name="P:Baby.ListBox.HoverText">
<summary> Gets or sets the hover text. </summary>
<value> The hover text. </value>
</member>
<member name="P:Baby.ListBox.DataFilter">
<summary> Gets or sets the data filter. </summary>
<value> The data filter. </value>
</member>
<member name="M:Baby.ListBox.#ctor">
<summary> Initializes a new instance of the
<see cref="T:Baby.ListBox" />
class. </summary>
</member>
<member name="M:Baby.ListBox.#ctor(System.Drawing.Size,System.Drawing.Point)">
<summary> Initializes a new instance of the
<see cref="T:Baby.ListBox" />
class. </summary>
<param name="size"> The size. </param>
<param name="location"> The location. </param>
</member>
<member name="M:Baby.ListBox.#ctor(System.Drawing.Point,System.Windows.Forms.Control)">
<summary> Initializes a new instance of the
<see cref="T:Baby.ListBox" />
class. </summary>
<param name="location"> The location. </param>
<param name="parent"> The parent. </param>
</member>
<member name="M:Baby.ListBox.#ctor(System.Drawing.Size,System.Windows.Forms.Control)">
<summary> Initializes a new instance of the
<see cref="T:Baby.ListBox" />
class. </summary>
<param name="size"> The size. </param>
<param name="parent"> The parent. </param>
</member>
<member
  name="M:Baby.ListBox.#ctor(System.Drawing.Size,System.Drawing.Point,System.Windows.Forms.Control)">
<summary> Initializes a new instance of the
<see cref="T:Baby.ListBox" />
class. </summary>
<param name="size"> The size. </param>
<param name="location"> The location. </param>
<param name="parent"> The parent. </param>
</member>
<member name="M:Baby.ListBox.#ctor(System.String)">
<summary> Initializes a new instance of the
<see cref="T:Baby.ListBox" />
class. </summary>
<param name="title"> The title. </param>
</member>
<member name="M:Baby.ListBox.SetBorderColor(System.Drawing.Color)">
<summary> Sets the color of the border. </summary>
<param name="color"> The color. </param>
</member>
<member name="M:Baby.ListBox.OnVisible(System.Object,System.EventArgs)">
<summary> Called when [visible]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.ListBox.AddItems(System.Collections.Generic.IEnumerable{System.Object})">
<summary> Adds the items. </summary>
<param name="items"> The items. </param>
</member>
<member name="M:Baby.ListBox.AddItem(System.Object)">
<summary> Adds the item. </summary>
<param name="item"> The item. </param>
</member>
<member name="M:Baby.ListBox.SetHoverText(System.String)">
<summary> Sets the hover text. </summary>
<param name="text"> The text. </param>
</member>
<member name="M:Baby.ListBox.SetText(System.String)">
<summary> Sets the text. </summary>
<param name="text"> The text. </param>
</member>
<member name="M:Baby.ListBox.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.ContextBase">
<inheritdoc />
<summary> </summary>
</member>
<member name="M:Baby.ContextBase.#ctor">
<summary> Initializes a new instance of the
<see cref="T:Baby.ContextBase" />
class. </summary>
</member>
<member name="M:Baby.ContextBase.CreateChromeOption">
<summary> Creates the chrome option. </summary>
<returns> </returns>
</member>
<member name="M:Baby.ContextBase.CreateSourceOption">
<summary> Creates the close others option. </summary>
<returns> </returns>
</member>
<member name="M:Baby.ContextBase.CreateCalculatorItem">
<summary> Creates the calculator option. </summary>
<returns> ToolStripMenuItemExt </returns>
</member>
<member name="M:Baby.ContextBase.CreateTaskManagerItem">
<summary> Creates the task manager item. </summary>
<returns> </returns>
</member>
<member name="M:Baby.ContextBase.CreateControlPanelItem">
<summary> Creates the control panel item. </summary>
<returns> </returns>
</member>
<member name="M:Baby.ContextBase.CreateExitOption">
<summary> Creates the exit option. </summary>
<returns> MetroSetToolStripMenuItem </returns>
</member>
<member name="M:Baby.ContextBase.CreateEdgeOption">
<summary> Creates the edge option. </summary>
<returns> </returns>
</member>
<member name="M:Baby.ContextBase.CreateFirefoxOption">
<summary> Creates the firefox option. </summary>
<returns> </returns>
</member>
<member name="T:Baby.ContextMenu">
<inheritdoc />
<summary> </summary>
<seealso cref="T:Baby.MenuBase" />
</member>
<member name="P:Baby.ContextMenu.CloseItem">
<summary> Gets or sets the close option. </summary>
<value> The close option. </value>
</member>
<member name="P:Baby.ContextMenu.Other">
<summary> Gets or sets the exit option. </summary>
<value> The exit option. </value>
</member>
<member name="P:Baby.ContextMenu.Developer">
<summary> Gets or sets the calculator option. </summary>
<value> The calculator option. </value>
</member>
<member name="P:Baby.ContextMenu.Source">
<summary> Gets or sets the calculator option. </summary>
<value> The calculator option. </value>
</member>
<member name="P:Baby.ContextMenu.RefreshItem">
<summary> Gets or sets the refresh option. </summary>
<value> The refresh option. </value>
</member>
<member name="P:Baby.ContextMenu.SaveAs">
<summary> Gets or sets the Save As Pdf option. </summary>
<value> The calculator option. </value>
</member>
<member name="P:Baby.ContextMenu.Print">
<summary> Gets or sets the calculator option. </summary>
<value> The calculator option. </value>
</member>
<member name="P:Baby.ContextMenu.Exit">
<summary> Gets or sets the exit option. </summary>
<value> The exit option. </value>
</member>
<member name="P:Baby.ContextMenu.Chrome">
<summary> Gets or sets the chrome option. </summary>
<value> The chrome option. </value>
</member>
<member name="P:Baby.ContextMenu.Edge">
<summary> Gets or sets the edge option. </summary>
<value> The edge option. </value>
</member>
<member name="P:Baby.ContextMenu.Firefox">
<summary> Gets or sets the firefox option. </summary>
<value> The firefox option. </value>
</member>
<member name="P:Baby.ContextMenu.Calculator">
<summary> Gets the calculator. </summary>
<value> The calculator. </value>
</member>
<member name="P:Baby.ContextMenu.ControlPanel">
<summary> Gets the control panel. </summary>
<value> The control panel. </value>
</member>
<member name="P:Baby.ContextMenu.Taskmanager">
<summary> Gets the taskmanager. </summary>
<value> The taskmanager. </value>
</member>
<member name="M:Baby.ContextMenu.#ctor">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.ContextMenu" />
class. </summary>
</member>
<member name="T:Baby.MenuBase">
<summary> </summary>
<seealso cref="T:MetroSet_UI.Controls.MetroSetContextMenuStrip" />
</member>
<member name="F:Baby.MenuBase._close">
<summary> Gets or sets the close option. </summary>
<value> The close option. </value>
</member>
<member name="F:Baby.MenuBase._other">
<summary> Gets or sets the exit option. </summary>
<value> The exit option. </value>
</member>
<member name="F:Baby.MenuBase._developer">
<summary> Gets or sets the calculator option. </summary>
<value> The calculator option. </value>
</member>
<member name="F:Baby.MenuBase._source">
<summary> Gets or sets the calculator option. </summary>
<value> The calculator option. </value>
</member>
<member name="F:Baby.MenuBase._refresh">
<summary> Gets or sets the refresh option. </summary>
<value> The refresh option. </value>
</member>
<member name="F:Baby.MenuBase._saveAs">
<summary> Gets or sets the Save As Pdf option. </summary>
<value> The calculator option. </value>
</member>
<member name="F:Baby.MenuBase._print">
<summary> Gets or sets the calculator option. </summary>
<value> The calculator option. </value>
</member>
<member name="F:Baby.MenuBase._exit">
<summary> Gets or sets the exit option. </summary>
<value> The exit option. </value>
</member>
<member name="F:Baby.MenuBase._chrome">
<summary> Gets or sets the chrome option. </summary>
<value> The chrome option. </value>
</member>
<member name="F:Baby.MenuBase._edge">
<summary> Gets or sets the edge option. </summary>
<value> The edge option. </value>
</member>
<member name="F:Baby.MenuBase._firefox">
<summary> Gets or sets the firefox option. </summary>
<value> The firefox option. </value>
</member>
<member name="F:Baby.MenuBase._calculator">
<summary> The calculator </summary>
</member>
<member name="F:Baby.MenuBase._taskManager">
<summary> The task manager </summary>
</member>
<member name="F:Baby.MenuBase._controlPanel">
<summary> The task manager </summary>
</member>
<member name="M:Baby.MenuBase.CreateCloseOption">
<summary> Creates the close option. </summary>
<returns> MetroSetToolStripMenuItem </returns>
</member>
<member name="M:Baby.MenuBase.CreateOtherOption">
<summary> Creates the close option. </summary>
<returns> MetroSetToolStripMenuItem </returns>
</member>
<member name="M:Baby.MenuBase.CreateRefreshOption">
<summary> Creates the close option. </summary>
<returns> MetroSetToolStripMenuItem </returns>
</member>
<member name="M:Baby.MenuBase.CreateSaveAsOption">
<summary> Creates the file option. </summary>
<returns> MetroSetToolStripMenuItem </returns>
</member>
<member name="M:Baby.MenuBase.CreatePrintOption">
<summary> Creates the file browse option. </summary>
<returns> </returns>
</member>
<member name="M:Baby.MenuBase.CreateDeveloperOption">
<summary> Creates the developer toools option. </summary>
<returns> </returns>
</member>
<member name="M:Baby.MenuBase.OnMouseEnter(System.Object,System.EventArgs)">
<summary> Called when [mouse enter]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.MenuBase.OnMouseLeave(System.Object,System.EventArgs)">
<summary> Called when [mouse leave]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.MenuBase.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.Animator">
<summary> </summary>
</member>
<member name="F:Baby.Animator._AW_HIDE">
<summary> The aw hide </summary>
</member>
<member name="F:Baby.Animator._AW_ACTIVATE">
<summary> The aw activate </summary>
</member>
<member name="F:Baby.Animator._DEFAULT_DURATION">
<summary> The default duration </summary>
</member>
<member name="P:Baby.Animator.Method">
<summary> Gets or sets the method. </summary>
<value> The method. </value>
</member>
<member name="P:Baby.Animator.Direction">
<summary> Gets or sets the direction. </summary>
<value> The direction. </value>
</member>
<member name="P:Baby.Animator.Duration">
<summary> Gets or sets the duration. </summary>
<value> The duration. </value>
</member>
<member name="P:Baby.Animator.Form">
<summary> Gets or sets the form. </summary>
<value> The form. </value>
</member>
<member name="M:Baby.Animator.#ctor(System.Windows.Forms.Form)">
<summary> Initializes a new instance of the
<see cref="T:Baby.Animator" />
class. </summary>
<param name="form"> The form. </param>
</member>
<member
  name="M:Baby.Animator.#ctor(System.Windows.Forms.Form,Baby.Animator.AnimationMethod,System.Int32)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.Animator" />
class. </summary>
<param name="form"> The form. </param>
<param name="method"> The method. </param>
<param name="duration"> The duration. </param>
</member>
<member
  name="M:Baby.Animator.#ctor(System.Windows.Forms.Form,Baby.Animator.AnimationMethod,Baby.Animator.AnimationDirection,System.Int32)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.Animator" />
class. </summary>
<param name="form"> The form. </param>
<param name="method"> The method. </param>
<param name="direction"> The direction. </param>
<param name="duration"> The duration. </param>
</member>
<member name="M:Baby.Animator.Form_Load(System.Object,System.EventArgs)">
<summary> Handles the Load event of the Form control. </summary>
<param name="sender"> The source of the event. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.Animator.Form_VisibleChanged(System.Object,System.EventArgs)">
<summary> Handles the VisibleChanged event of the Form control. </summary>
<param name="sender"> The source of the event. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.Animator.Form_Closing(System.Object,System.ComponentModel.CancelEventArgs)">
<summary> Handles the Closing event of the Form control. </summary>
<param name="sender"> The source of the event. </param>
<param name="e"> The
<see cref="T:System.ComponentModel.CancelEventArgs" />
instance containing the event data. </param>
</member>
<member name="T:Baby.Animator.AnimationMethod">
<summary> </summary>
</member>
<member name="F:Baby.Animator.AnimationMethod.Roll">
<summary> The roll </summary>
</member>
<member name="F:Baby.Animator.AnimationMethod.Center">
<summary> The center </summary>
</member>
<member name="F:Baby.Animator.AnimationMethod.Slide">
<summary> The slide </summary>
</member>
<member name="F:Baby.Animator.AnimationMethod.Fade">
<summary> The fade </summary>
</member>
<member name="T:Baby.Animator.AnimationDirection">
<summary> </summary>
</member>
<member name="F:Baby.Animator.AnimationDirection.Right">
<summary> The right </summary>
</member>
<member name="F:Baby.Animator.AnimationDirection.Left">
<summary> The left </summary>
</member>
<member name="F:Baby.Animator.AnimationDirection.Down">
<summary> Down </summary>
</member>
<member name="F:Baby.Animator.AnimationDirection.Up">
<summary> Up </summary>
</member>
<member name="T:Baby.NativeMethods">
<summary> </summary>
</member>
<member name="M:Baby.NativeMethods.GetForegroundWindow">
<summary> Gets the handle of the window that currently has focus. </summary>
<returns> The handle of the window that currently has focus. </returns>
</member>
<member name="M:Baby.NativeMethods.SetForegroundWindow(System.IntPtr)">
<summary> Activates the specified window. </summary>
<param name="hWnd"> The handle of the window to be focused. </param>
<returns> True if the window was focused; False otherwise. </returns>
</member>
<member name="M:Baby.NativeMethods.AnimateWindow(System.IntPtr,System.Int32,System.Int32)">
<summary> Windows API function to animate a window. </summary>
</member>
<member name="T:Baby.Notification">
<summary> </summary>
<seealso cref="T:Syncfusion.Windows.Forms.MetroForm" />
</member>
<member name="P:Baby.Notification.Time">
<summary> Gets or sets the time. </summary>
<value> The time. </value>
</member>
<member name="P:Baby.Notification.Seconds">
<summary> Gets or sets the seconds. </summary>
<value> The seconds. </value>
</member>
<member name="P:Baby.Notification.AllowFocus">
<summary> Gets or sets a value indicating whether [allow focus]. </summary>
<value>
<c> true </c>
if [allow focus]; otherwise,
<c> false </c>
. </value>
</member>
<member name="P:Baby.Notification.ShownWithoutActivation">
<summary> Gets a value indicating whether [shown without activation]. </summary>
<value>
<c> true </c>
if [shown without activation]; otherwise,
<c> false </c>
. </value>
</member>
<member name="M:Baby.Notification.#ctor">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.Notification" />
class. </summary>
</member>
<member
  name="M:Baby.Notification.#ctor(System.String,System.Int32,Baby.Animator.AnimationMethod,Baby.Animator.AnimationDirection)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.Notification" />
class. </summary>
<param name="body"> The body. </param>
<param name="duration"> The duration. </param>
<param name="animation"> The animation. </param>
<param name="direction"> The direction. </param>
</member>
<member
  name="M:Baby.Notification.#ctor(System.String,System.String,System.Int32,Baby.Animator.AnimationMethod,Baby.Animator.AnimationDirection)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.Notification" />
class. </summary>
<param name="title"> The title. </param>
<param name="body"> The body. </param>
<param name="duration"> The duration. </param>
<param name="animation"> The animation. </param>
<param name="direction"> The direction. </param>
</member>
<member name="M:Baby.Notification.InitializeTitle">
<summary> Initializes the title. </summary>
</member>
<member name="M:Baby.Notification.InitializePanel">
<summary> Initializes the panel. </summary>
</member>
<member name="M:Baby.Notification.InitializeLabels">
<summary> Initializes the labels. </summary>
</member>
<member name="M:Baby.Notification.FadeInAsync(System.Windows.Forms.Form,System.Int32)">
<summary> Fades the in asynchronous. </summary>
<param name="form"> The o. </param>
<param name="interval"> The interval. </param>
</member>
<member name="M:Baby.Notification.FadeOutAsync(System.Windows.Forms.Form,System.Int32)">
<summary> Fades the out asynchronous. </summary>
<param name="form"> The o. </param>
<param name="interval"> The interval. </param>
</member>
<member name="M:Baby.Notification.OnClick(System.Object,System.Windows.Forms.MouseEventArgs)">
<summary> Called when [click]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.Windows.Forms.MouseEventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.Notification.OnLoad(System.Object,System.EventArgs)">
<summary> Called when [load]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.Notification.OnFormClosing(System.Object,System.EventArgs)">
<summary> Raises the Close event. </summary>
</member>
<member name="M:Baby.Notification.OnActivated(System.Object,System.EventArgs)">
<summary> Called when [activated]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.Notification.OnResized(System.Object,System.EventArgs)">
<summary> Called when [resized]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.Notification.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="F:Baby.Notification.components">
<summary> Required designer variable. </summary>
</member>
<member name="M:Baby.Notification.Dispose(System.Boolean)">
<summary> Clean up any resources being used. </summary>
<param name="disposing"> true if managed resources should be disposed; otherwise, false. </param>
</member>
<member name="M:Baby.Notification.InitializeComponent">
<summary> Required method for Designer support - do not modify the contents of this method with the
code editor. </summary>
</member>
<member name="T:Baby.RadioButton">
<summary> </summary>
<seealso cref="T:MetroSet_UI.Controls.MetroSetRadioButton" />
</member>
<member name="P:Baby.RadioButton.ToolTip">
<summary> Gets or sets the tool tip. </summary>
<value> The tool tip. </value>
</member>
<member name="P:Baby.RadioButton.Result">
<summary> Gets or sets the result. </summary>
<value> The result. </value>
</member>
<member name="P:Baby.RadioButton.HoverText">
<summary> Gets or sets the hover text. </summary>
<value> The hover text. </value>
</member>
<member name="M:Baby.RadioButton.#ctor">
<summary> Initializes a new instance of the
<see cref="T:Baby.RadioButton" />
class. </summary>
</member>
<member name="M:Baby.RadioButton.#ctor(System.String)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.RadioButton" />
class. </summary>
<param name="text"> The text displayed by the control. </param>
</member>
<member name="M:Baby.RadioButton.OnCheckStateChanged(System.Object)">
<summary> Called when [check state changed]. </summary>
<param name="sender"> The sender. </param>
</member>
<member name="M:Baby.RadioButton.OnMouseHover(System.Object,System.EventArgs)">
<summary> Called when [mouse hover]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.RadioButton.OnMouseLeave(System.Object,System.EventArgs)">
<summary> Called when [mouse leave]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.RadioButton.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.RichTextBox">
<summary> </summary>
<seealso cref="T:MetroSet_UI.Controls.MetroSetRichTextBox" />
</member>
<member name="P:Baby.RichTextBox.ToolTip">
<summary> Gets or sets the tool tip. </summary>
<value> The tool tip. </value>
</member>
<member name="P:Baby.RichTextBox.HoverText">
<summary> Gets or sets the hover text. </summary>
<value> The hover text. </value>
</member>
<member name="M:Baby.RichTextBox.#ctor">
<summary> Initializes a new instance of the
<see cref="T:Baby.RichTextBox" />
class. </summary>
</member>
<member name="M:Baby.RichTextBox.#ctor(System.Drawing.Size,System.Drawing.Point)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.RichTextBox" />
class. </summary>
<param name="size"> The size. </param>
<param name="location"> The location. </param>
</member>
<member name="M:Baby.RichTextBox.#ctor(System.Drawing.Point,System.Windows.Forms.Control)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.RichTextBox" />
class. </summary>
<param name="location"> The location. </param>
<param name="parent"> The parent. </param>
</member>
<member name="M:Baby.RichTextBox.#ctor(System.Drawing.Size,System.Windows.Forms.Control)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.RichTextBox" />
class. </summary>
<param name="size"> The size. </param>
<param name="parent"> The parent. </param>
</member>
<member
  name="M:Baby.RichTextBox.#ctor(System.Drawing.Size,System.Drawing.Point,System.Windows.Forms.Control)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.RichTextBox" />
class. </summary>
<param name="size"> The size. </param>
<param name="location"> The location. </param>
<param name="parent"> The parent. </param>
</member>
<member name="M:Baby.RichTextBox.#ctor(System.String)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.RichTextBox" />
class. </summary>
<param name="title"> The title. </param>
</member>
<member name="M:Baby.RichTextBox.SetText(System.String)">
<summary> Sets the text. </summary>
<param name="text"> The text. </param>
</member>
<member name="M:Baby.RichTextBox.SetFontStyle(System.String,System.Drawing.Color,System.Int32)">
<summary> Sets the font style. </summary>
<param name="fontFamily"> The font family. </param>
<param name="fontColor"> Color of the font. </param>
<param name="fontSize"> Size of the font. </param>
</member>
<member name="M:Baby.RichTextBox.SetBackColor(System.Drawing.Color)">
<summary> Sets the color of the back. </summary>
<param name="backColor"> Color of the back. </param>
</member>
<member name="M:Baby.RichTextBox.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.SplashTextBox">
<summary> </summary>
<seealso cref="T:MetroSet_UI.Controls.MetroSetRichTextBox" />
</member>
<member name="P:Baby.SplashTextBox.ToolTip">
<summary> Gets or sets the tool tip. </summary>
<value> The tool tip. </value>
</member>
<member name="P:Baby.SplashTextBox.HoverText">
<summary> Gets or sets the hover text. </summary>
<value> The hover text. </value>
</member>
<member name="M:Baby.SplashTextBox.#ctor">
<summary> Initializes a new instance of the
<see cref="T:Baby.SplashTextBox" />
class. </summary>
</member>
<member name="M:Baby.SplashTextBox.#ctor(System.Drawing.Size,System.Drawing.Point)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.SplashTextBox" />
class. </summary>
<param name="size"> The size. </param>
<param name="location"> The location. </param>
</member>
<member name="M:Baby.SplashTextBox.#ctor(System.Drawing.Point,System.Windows.Forms.Control)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.SplashTextBox" />
class. </summary>
<param name="location"> The location. </param>
<param name="parent"> The parent. </param>
</member>
<member name="M:Baby.SplashTextBox.#ctor(System.Drawing.Size,System.Windows.Forms.Control)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.SplashTextBox" />
class. </summary>
<param name="size"> The size. </param>
<param name="parent"> The parent. </param>
</member>
<member
  name="M:Baby.SplashTextBox.#ctor(System.Drawing.Size,System.Drawing.Point,System.Windows.Forms.Control)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.SplashTextBox" />
class. </summary>
<param name="size"> The size. </param>
<param name="location"> The location. </param>
<param name="parent"> The parent. </param>
</member>
<member name="M:Baby.SplashTextBox.#ctor(System.String)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.SplashTextBox" />
class. </summary>
<param name="title"> The title. </param>
</member>
<member name="M:Baby.SplashTextBox.SetText(System.String)">
<summary> Sets the text. </summary>
<param name="text"> The text. </param>
</member>
<member name="M:Baby.SplashTextBox.SetFontStyle(System.String,System.Drawing.Color,System.Int32)">
<summary> Sets the font style. </summary>
<param name="fontFamily"> The font family. </param>
<param name="fontColor"> Color of the font. </param>
<param name="fontSize"> Size of the font. </param>
</member>
<member name="M:Baby.SplashTextBox.SetBackColor(System.Drawing.Color)">
<summary> Sets the color of the back. </summary>
<param name="backColor"> Color of the back. </param>
</member>
<member name="M:Baby.SplashTextBox.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.SplashMessage">
<summary> </summary>
<seealso cref="T:Syncfusion.Windows.Forms.MetroForm" />
</member>
<member name="F:Baby.SplashMessage._busy">
<summary> The busy </summary>
</member>
<member name="F:Baby.SplashMessage._time">
<summary> The time </summary>
</member>
<member name="F:Baby.SplashMessage._seconds">
<summary> The seconds </summary>
</member>
<member name="F:Baby.SplashMessage._allowFocus">
<summary> The allow focus </summary>
</member>
<member name="F:Baby.SplashMessage._withoutActivation">
<summary> The without activation </summary>
</member>
<member name="F:Baby.SplashMessage._lines">
<summary> The lines </summary>
</member>
<member name="P:Baby.SplashMessage.AllowFocus">
<summary> Gets or sets a value indicating whether [allow focus]. </summary>
<value>
<c> true </c>
if [allow focus]; otherwise,
<c> false </c>
. </value>
</member>
<member name="P:Baby.SplashMessage.ShownWithoutActivation">
<summary> Gets or sets a value indicating whether [shown without activation]. </summary>
<value>
<c> true </c>
if [shown without activation]; otherwise,
<c> false </c>
. </value>
</member>
<member name="P:Baby.SplashMessage.Lines">
<summary> Gets or sets the lines. </summary>
<value> The lines. </value>
</member>
<member name="P:Baby.SplashMessage.IsBusy">
<summary> Gets a value indicating whether this instance is busy. </summary>
<value>
<c> true </c>
if this instance is busy; otherwise,
<c> false </c>
</value>
</member>
<member name="M:Baby.SplashMessage.#ctor">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.SplashMessage" />
class. </summary>
</member>
<member
  name="M:Baby.SplashMessage.#ctor(System.String,System.Int32,Baby.Animator.AnimationMethod,Baby.Animator.AnimationDirection)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.SplashMessage" />
class. </summary>
<param name="message"> The message. </param>
<param name="duration"> The duration. </param>
<param name="animation"> The animation. </param>
<param name="direction"> The direction. </param>
</member>
<member
  name="M:Baby.SplashMessage.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Int32,Baby.Animator.AnimationMethod,Baby.Animator.AnimationDirection)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.SplashMessage" />
class. </summary>
<param name="lines"> The lines. </param>
<param name="duration"> The duration. </param>
<param name="animation"> The animation. </param>
<param name="direction"> The direction. </param>
</member>
<member name="M:Baby.SplashMessage.InitializeTitle">
<summary> Initializes the title. </summary>
</member>
<member name="M:Baby.SplashMessage.InitializePanel">
<summary> Initializes the panel. </summary>
</member>
<member name="M:Baby.SplashMessage.InitializeLabels">
<summary> Initializes the labels. </summary>
</member>
<member name="M:Baby.SplashMessage.RegisterCallbacks">
<summary> Registers the callbacks. </summary>
</member>
<member name="M:Baby.SplashMessage.FadeInAsync(System.Windows.Forms.Form,System.Int32)">
<summary> Fades the in asynchronous. </summary>
<param name="form"> The o. </param>
<param name="interval"> The interval. </param>
</member>
<member name="M:Baby.SplashMessage.FadeOutAsync(System.Windows.Forms.Form,System.Int32)">
<summary> Fades the out asynchronous. </summary>
<param name="form"> The o. </param>
<param name="interval"> The interval. </param>
</member>
<member name="M:Baby.SplashMessage.OnLoad(System.Object,System.EventArgs)">
<summary> Called when [load]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.SplashMessage.OnCloseButtonClick(System.Object,System.EventArgs)">
<summary> Raises the Close event. </summary>
</member>
<member name="M:Baby.SplashMessage.OnClick(System.Object,System.Windows.Forms.MouseEventArgs)">
<summary> Called when [click]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.Windows.Forms.MouseEventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.SplashMessage.OnFormClosing(System.Object,System.EventArgs)">
<summary> Called when [form closing]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.SplashMessage.OnActivated(System.Object,System.EventArgs)">
<summary> Called when [activated]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.SplashMessage.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="F:Baby.SplashMessage.components">
<summary> Required designer variable. </summary>
</member>
<member name="M:Baby.SplashMessage.Dispose(System.Boolean)">
<summary> Clean up any resources being used. </summary>
<param name="disposing"> true if managed resources should be disposed; otherwise, false. </param>
</member>
<member name="M:Baby.SplashMessage.InitializeComponent">
<summary> Required method for Designer support - do not modify the contents of this method with the
code editor. </summary>
</member>
<member name="T:Baby.ColorCache">
<summary> </summary>
</member>
<member name="F:Baby.ColorCache._darkGreen">
<summary> The dark green </summary>
</member>
<member name="F:Baby.ColorCache._lightGreen">
<summary> The light green </summary>
</member>
<member name="F:Baby.ColorCache._blue">
<summary> The blue </summary>
</member>
<member name="F:Baby.ColorCache._red">
<summary> The red </summary>
</member>
<member name="F:Baby.ColorCache._gray">
<summary> The gray </summary>
</member>
<member name="F:Baby.ColorCache._white">
<summary> The white </summary>
</member>
<member name="F:Baby.ColorCache._black">
<summary> The black </summary>
</member>
<member name="F:Baby.ColorCache._transparent">
<summary> The transparent </summary>
</member>
<member name="F:Baby.ColorCache._hoverGray">
<summary> The hover gray </summary>
</member>
<member name="F:Baby.ColorCache._hoverBlue">
<summary> The hover blue </summary>
</member>
<member name="F:Baby.ColorCache._steelBlue">
<summary> The steel blue </summary>
</member>
<member name="F:Baby.ColorCache._maroon">
<summary> The maroon </summary>
</member>
<member name="F:Baby.ColorCache._lightBlue">
<summary> The light blue </summary>
</member>
<member name="F:Baby.ColorCache._darkInterior">
<summary> The dark interior </summary>
</member>
<member name="F:Baby.ColorCache._darkBorder">
<summary> The dark border </summary>
</member>
<member name="F:Baby.ColorCache._darkBackground">
<summary> The dark background </summary>
</member>
<member name="F:Baby.ColorCache._hoverDarkBlue">
<summary> The hover dark blue </summary>
</member>
<member name="F:Baby.ColorCache._dodgerBlue">
<summary> The dodger blue </summary>
</member>
<member name="F:Baby.ColorCache._metroBlue">
<summary> The metro blue </summary>
</member>
<member name="F:Baby.ColorCache._blueForeColor">
<summary> The blue highlight </summary>
</member>
<member name="F:Baby.ColorCache._notificationBackColor">
<summary> The notification color </summary>
</member>
<member name="F:Baby.ColorCache._palette">
<summary> The palette </summary>
</member>
<member name="M:Baby.ColorCache.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.ColorConfig">
<summary> </summary>
</member>
<member name="P:Baby.ColorConfig.Blue">
<summary> Gets the blue. </summary>
<value> The blue. </value>
</member>
<member name="P:Baby.ColorConfig.Red">
<summary> Gets the red. </summary>
<value> The red. </value>
</member>
<member name="P:Baby.ColorConfig.Gray">
<summary> Gets the gray. </summary>
<value> The gray. </value>
</member>
<member name="P:Baby.ColorConfig.White">
<summary> Gets the white. </summary>
<value> The white. </value>
</member>
<member name="P:Baby.ColorConfig.Black">
<summary> Gets the black. </summary>
<value> The black. </value>
</member>
<member name="P:Baby.ColorConfig.Transparent">
<summary> Gets the transparent. </summary>
<value> The transparent. </value>
</member>
<member name="P:Baby.ColorConfig.HoverGray">
<summary> Gets the hover gray. </summary>
<value> The hover gray. </value>
</member>
<member name="P:Baby.ColorConfig.HoverBlue">
<summary> Gets the hover blue. </summary>
<value> The hover blue. </value>
</member>
<member name="P:Baby.ColorConfig.SteelBlue">
<summary> Gets the steel blue. </summary>
<value> The steel blue. </value>
</member>
<member name="P:Baby.ColorConfig.Maroon">
<summary> Gets the maroon. </summary>
<value> The maroon. </value>
</member>
<member name="P:Baby.ColorConfig.LightBlue">
<summary> Gets the light steel blue. </summary>
<value> The light steel blue. </value>
</member>
<member name="P:Baby.ColorConfig.DarkInterior">
<summary> Gets the dark interior. </summary>
<value> The dark interior. </value>
</member>
<member name="P:Baby.ColorConfig.DarkBorder">
<summary> Gets the dark border. </summary>
<value> The dark border. </value>
</member>
<member name="P:Baby.ColorConfig.DarkBackground">
<summary> Gets the dark background. </summary>
<value> The dark background. </value>
</member>
<member name="P:Baby.ColorConfig.HoverDarkBlue">
<summary> Gets the dark blue. </summary>
<value> The dark blue. </value>
</member>
<member name="P:Baby.ColorConfig.DodgerBlue">
<summary> Gets the dodger blue. </summary>
<value> The dodger blue. </value>
</member>
<member name="P:Baby.ColorConfig.BlueHighlight">
<summary> Gets the blue text. </summary>
<value> The blue text. </value>
</member>
<member name="P:Baby.ColorConfig.NotificationColor">
<summary> Gets the color of the notification. </summary>
<value> The color of the notification. </value>
</member>
<member name="M:Baby.ColorConfig.#ctor">
<summary> Initializes a new instance of the
<see cref="T:Baby.ColorConfig" />
class. </summary>
</member>
<member name="M:Baby.ColorConfig.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.Palette">
<inheritdoc />
</member>
<member name="P:Baby.Palette.DarkGreen">
<summary> Gets the dark green. </summary>
<value> The dark green. </value>
</member>
<member name="P:Baby.Palette.ChartColors">
<summary> Gets the chart colors. </summary>
<value> The chart colors. </value>
</member>
<member name="P:Baby.Palette.LightGreen">
<summary> Gets the light green. </summary>
<value> The light green. </value>
</member>
<member name="P:Baby.Palette.Blue">
<summary> Gets the blue. </summary>
<value> The blue. </value>
</member>
<member name="P:Baby.Palette.Red">
<summary> Gets the red. </summary>
<value> The red. </value>
</member>
<member name="P:Baby.Palette.Gray">
<summary> Gets or sets the gray. </summary>
<value> The gray. </value>
</member>
<member name="P:Baby.Palette.White">
<summary> Gets or sets the white. </summary>
<value> The white. </value>
</member>
<member name="P:Baby.Palette.Black">
<summary> Gets or sets the black. </summary>
<value> The black. </value>
</member>
<member name="P:Baby.Palette.Transparent">
<summary> Gets or sets the transparent. </summary>
<value> The transparent. </value>
</member>
<member name="P:Baby.Palette.HoverGray">
<summary> Gets or sets the hover gray. </summary>
<value> The hover gray. </value>
</member>
<member name="P:Baby.Palette.HoverBlue">
<summary> Gets or sets the hover blue. </summary>
<value> The hover blue. </value>
</member>
<member name="P:Baby.Palette.SteelBlue">
<summary> Gets or sets the steel blue. </summary>
<value> The steel blue. </value>
</member>
<member name="P:Baby.Palette.Maroon">
<summary> Gets or sets the maroon. </summary>
<value> The maroon. </value>
</member>
<member name="P:Baby.Palette.LightBlue">
<summary> Gets or sets the light blue. </summary>
<value> The light blue. </value>
</member>
<member name="P:Baby.Palette.DarkInterior">
<summary> Gets or sets the dark interior. </summary>
<value> The dark interior. </value>
</member>
<member name="P:Baby.Palette.DarkBorder">
<summary> Gets or sets the dark border. </summary>
<value> The dark border. </value>
</member>
<member name="P:Baby.Palette.DarkBackground">
<summary> Gets or sets the dark background. </summary>
<value> The dark background. </value>
</member>
<member name="P:Baby.Palette.HoverDarkBlue">
<summary> Gets or sets the hover dark blue. </summary>
<value> The hover dark blue. </value>
</member>
<member name="P:Baby.Palette.DodgerBlue">
<summary> Gets or sets the dodger blue. </summary>
<value> The dodger blue. </value>
</member>
<member name="P:Baby.Palette.MetroBlue">
<summary> Gets or sets the metro blue. </summary>
<value> The metro blue. </value>
</member>
<member name="P:Baby.Palette.BlueHighlight">
<summary> Gets or sets the blue highlight. </summary>
<value> The blue highlight. </value>
</member>
<member name="P:Baby.Palette.NotificationColor">
<summary> Gets or sets the color of the notification. </summary>
<value> The color of the notification. </value>
</member>
<member name="M:Baby.Palette.#ctor">
<summary> Initializes a new instance of the
<see cref="T:Baby.Palette" />
class. </summary>
</member>
<member name="T:Baby.Scale">
<summary> </summary>
</member>
<member name="M:Baby.Scale.#ctor">
<summary> Initializes a new instance of the
<see cref="T:Baby.Scale" />
class. </summary>
</member>
<member name="F:Baby.Scale.FormNormal">
<summary> The form normal </summary>
</member>
<member name="F:Baby.Scale.FormMaximum">
<summary> The form maximum </summary>
</member>
<member name="F:Baby.Scale.FormMinimum">
<summary> The form minimum </summary>
</member>
<member name="F:Baby.Scale.PageNormal">
<summary> The dialog normal </summary>
</member>
<member name="F:Baby.Scale.PageMinimum">
<summary> The dialog minimum </summary>
</member>
<member name="F:Baby.Scale.PageMaximum">
<summary> The dialog maximum </summary>
</member>
<member name="F:Baby.Scale.ContextMenuNormal">
<summary> The context menu normal </summary>
</member>
<member name="F:Baby.Scale.ContextMenuSmall">
<summary> The context menu small </summary>
</member>
<member name="F:Baby.Scale.Icon">
<summary> The image small </summary>
</member>
<member name="F:Baby.Scale.ImageSmall">
<summary> The image medium </summary>
</member>
<member name="F:Baby.Scale.ImageMedium">
<summary> The image large </summary>
</member>
<member name="F:Baby.Scale.ImageLarge">
<summary> The image huge </summary>
</member>
<member name="F:Baby.Scale.GuidanceDialog">
<summary> The guidance dialog </summary>
</member>
<member name="F:Baby.Scale.ProgramProjectDialog">
<summary> The program project dialog </summary>
</member>
<member name="F:Baby.Scale.MessageDialog">
<summary> The message dialog </summary>
</member>
<member name="F:Baby.Scale.ErrorDialog">
<summary> The error dialog </summary>
</member>
<member name="F:Baby.Scale.TextDialog">
<summary> The text dialog </summary>
</member>
<member name="F:Baby.Scale.EmailDialog">
<summary> The email dialog </summary>
</member>
<member name="F:Baby.Scale.Calculator">
<summary> The calculator dialog </summary>
</member>
<member name="F:Baby.Scale.CalendarDialog">
<summary> The calendar dialog </summary>
</member>
<member name="M:Baby.Scale.Create(System.Int32,System.Int32)">
<summary> Gets the size. </summary>
<param name="width"> The width. </param>
<param name="height"> The height. </param>
<returns> </returns>
</member>
<member name="M:Baby.Scale.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.StyleManager">
<summary> </summary>
<seealso cref="T:MetroSet_UI.Components.StyleManager" />
</member>
<member name="M:Baby.StyleManager.#ctor">
<summary> Initializes a new instance of the
<see cref="T:Baby.StyleManager" />
class. </summary>
</member>
<member name="M:Baby.StyleManager.#ctor(System.Windows.Forms.Form)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:BudgetExecution.StyleManager" />
class. </summary>
<param name="form"> The form. </param>
</member>
<member name="M:Baby.StyleManager.Fail(System.Exception)">
<summary> Get Error Dialog for exceptions. </summary>
<param name="ex"> The exception. </param>
</member>
<member name="T:Baby.TabControl">
<inheritdoc />
<summary> </summary>
<seealso cref="T:Syncfusion.Windows.Forms.Tools.TabControlAdv" />
</member>
<member name="P:Baby.TabControl.ToolTip">
<summary> Gets or sets the tool tip. </summary>
<value> The tool tip. </value>
</member>
<member name="P:Baby.TabControl.HoverText">
<summary> Gets or sets the hover text. </summary>
<value> The hover text. </value>
</member>
<member name="M:Baby.TabControl.#ctor">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.TabControl" />
class. </summary>
<example> The following example creates a TabControlAdv with one TabPageAdv object. The constructor
instantiates tabControl1. Use the Syncfusion.Windows.Forms.Tools namespace for this example.
<code lang="C#"> public Form1() { this.tabPage1 = new TabPageAdv(); // Invokes the TabControlAdv()
constructor to create the tabControl1 object. this.tabControl1 = new TabControlAdv();
this.tabControl1.Controls.Add(tabPage1); this.Controls.Add(tabControl1); } </code>
<code lang="VB"> Public Sub New() Me.tabPage1 = New TabPageAdv() ' Invokes the TabControlAdv()
constructor to create the tabControl1 object. Me.tabControl1 = New TabControlAdv()
Me.tabControl1.Controls.Add(tabPage1) Me.Controls.Add(tabControl1) End Sub 'New </code>
</example>
</member>
<member name="T:Baby.BaseStyledPanel">
<inheritdoc />
<summary> </summary>
<seealso cref="T:System.Windows.Forms.ContainerControl" />
</member>
<member name="P:Baby.BaseStyledPanel.ToolStripRenderer">
<summary> Gets the tool strip renderer. </summary>
<value> The tool strip renderer. </value>
</member>
<member name="P:Baby.BaseStyledPanel.UseThemes">
<summary> Gets a value indicating whether [use themes]. </summary>
<value>
<c> true </c>
if [use themes]; otherwise,
<c> false </c>
. </value>
</member>
<member name="F:Baby.BaseStyledPanel.Renderer">
<summary> The renderer </summary>
</member>
<member name="E:Baby.BaseStyledPanel.ThemeChanged">
<summary> Occurs when [theme changed]. </summary>
</member>
<member name="M:Baby.BaseStyledPanel.#cctor">
<inheritdoc />
<summary> Initializes the
<see cref="T:BaseStyledPanel" />
class. </summary>
</member>
<member name="M:Baby.BaseStyledPanel.#ctor">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:BaseStyledPanel" />
class. </summary>
</member>
<member name="M:Baby.BaseStyledPanel.UpdateRenderer">
<summary> Updates the renderer. </summary>
</member>
<member name="M:Baby.BaseStyledPanel.OnSystemColorsChanged(System.EventArgs)">
<inheritdoc />
<summary> Raises the
<see cref="E:System.Windows.Forms.Control.SystemColorsChanged" />
event. </summary>
<param name="e"> An
<see cref="T:System.EventArgs" />
that contains the event data. </param>
</member>
<member name="M:Baby.BaseStyledPanel.OnThemeChanged(System.EventArgs)">
<summary> Raises the
<see cref="E:ThemeChanged" />
event. </summary>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.BaseStyledPanel.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.BrowserTabStrip">
<inheritdoc />
<summary> </summary>
<seealso cref="T:BaseStyledPanel" />
<seealso cref="T:System.ComponentModel.ISupportInitialize" />
<seealso cref="T:System.IDisposable" />
</member>
<member name="F:Baby.BrowserTabStrip._TEXT_LEFT_MARGIN">
<summary> The text left margin </summary>
</member>
<member name="F:Baby.BrowserTabStrip._TEXT_RIGHT_MARGIN">
<summary> The text right margin </summary>
</member>
<member name="F:Baby.BrowserTabStrip._DEF_HEADER_HEIGHT">
<summary> The definition header height </summary>
</member>
<member name="F:Baby.BrowserTabStrip._DEF_BUTTON_HEIGHT">
<summary> The definition button height </summary>
</member>
<member name="F:Baby.BrowserTabStrip._DEF_GLYPH_WIDTH">
<summary> The definition glyph width </summary>
</member>
<member name="F:Baby.BrowserTabStrip._closeButton">
<summary> The close button </summary>
</member>
<member name="F:Baby.BrowserTabStrip._startPosition">
<summary> The definition start position </summary>
</member>
<member name="F:Baby.BrowserTabStrip._formatString">
<summary> The format </summary>
</member>
<member name="F:Baby.BrowserTabStrip._initializing">
<summary> The is initializing </summary>
</member>
<member name="F:Baby.BrowserTabStrip._menu">
<summary> The menu </summary>
</member>
<member name="F:Baby.BrowserTabStrip._open">
<summary> The is open </summary>
</member>
<member name="F:Baby.BrowserTabStrip._selectedItem">
<summary> The selected item </summary>
</member>
<member name="F:Baby.BrowserTabStrip._rectangle">
<summary> The strip button rect </summary>
</member>
<member name="F:Baby.BrowserTabStrip.AddButtonWidth">
<summary> The add button width </summary>
</member>
<member name="F:Baby.BrowserTabStrip.MaxTabSize">
<summary> The maximum tab size </summary>
</member>
<member name="F:Baby.BrowserTabStrip._font">
<summary> The font </summary>
</member>
<member name="F:Baby.BrowserTabStrip._dark">
<summary> The dark background </summary>
</member>
<member name="P:Baby.BrowserTabStrip.SelectedItem">
<summary> Gets or sets the selected item. </summary>
<value> The selected item. </value>
</member>
<member name="P:Baby.BrowserTabStrip.Items">
<summary> Gets the items. </summary>
<value> The items. </value>
</member>
<member name="P:Baby.BrowserTabStrip.Size">
<summary> Gets or sets the height and width of the control. </summary>
</member>
<member name="P:Baby.BrowserTabStrip.Controls">
<summary> Gets the collection of controls contained within the control. </summary>
</member>
<member name="E:Baby.BrowserTabStrip.TabStripItemClosing">
<summary> Occurs when [tab strip item closing]. </summary>
</member>
<member name="E:Baby.BrowserTabStrip.TabStripItemSelectionChanged">
<summary> Occurs when [tab strip item selection changed]. </summary>
</member>
<member name="E:Baby.BrowserTabStrip.MenuItemsLoading">
<summary> Occurs when [menu items loading]. </summary>
</member>
<member name="E:Baby.BrowserTabStrip.MenuItemsLoaded">
<summary> Occurs when [menu items loaded]. </summary>
</member>
<member name="E:Baby.BrowserTabStrip.TabStripItemClosed">
<summary> Occurs when [tab strip item closed]. </summary>
</member>
<member name="M:Baby.BrowserTabStrip.#ctor">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:BrowserTabStrip" />
class. </summary>
</member>
<member name="M:Baby.BrowserTabStrip.HitTest(System.Drawing.Point)">
<summary> Hits the test. </summary>
<param name="point"> The pt. </param>
<returns> </returns>
</member>
<member name="M:Baby.BrowserTabStrip.AddTab(Baby.BrowserTabStripItem)">
<summary> Adds the tab. </summary>
<param name="tabItem"> The tab item. </param>
</member>
<member name="M:Baby.BrowserTabStrip.AddTab(Baby.BrowserTabStripItem,System.Boolean)">
<summary> Adds the tab. </summary>
<param name="tabItem"> The tab item. </param>
<param name="autoSelect"> if set to
<c> true </c>
[automatic select]. </param>
</member>
<member name="M:Baby.BrowserTabStrip.RemoveTab(Baby.BrowserTabStripItem)">
<summary> Removes the tab. </summary>
<param name="tabItem"> The tab item. </param>
</member>
<member name="M:Baby.BrowserTabStrip.GetTabItemByPoint(System.Drawing.Point)">
<summary> Gets the tab item by point. </summary>
<param name="pt"> The pt. </param>
<returns> </returns>
</member>
<member name="M:Baby.BrowserTabStrip.ShouldSerializeFont">
<summary> Should serialize font. </summary>
<returns> </returns>
</member>
<member name="M:Baby.BrowserTabStrip.ShouldSerializeSelectedItem">
<summary> Should serialize selected item. </summary>
<returns> </returns>
</member>
<member name="M:Baby.BrowserTabStrip.ShouldSerializeItems">
<summary> Should serialize items. </summary>
<returns> </returns>
</member>
<member
  name="M:Baby.BrowserTabStrip.MeasureTabWidth(System.Drawing.Graphics,Baby.BrowserTabStripItem,System.Drawing.Font)">
<summary> Measures the width of the tab. </summary>
<param name="g"> The g. </param>
<param name="currentItem"> The current item. </param>
<param name="currentFont"> The current font. </param>
<returns> </returns>
</member>
<member name="M:Baby.BrowserTabStrip.ResetFont">
<summary> Resets the
<see cref="P:System.Windows.Forms.Control.Font" />
property to its default value. </summary>
</member>
<member name="M:Baby.BrowserTabStrip.BeginInit">
<inheritdoc />
<summary> Signals the object that initialization is starting. </summary>
</member>
<member name="M:Baby.BrowserTabStrip.EndInit">
<inheritdoc />
<summary> Signals the object that initialization is complete. </summary>
</member>
<member name="M:Baby.BrowserTabStrip.UpdateLayout">
<summary> Updates the layout. </summary>
</member>
<member name="M:Baby.BrowserTabStrip.UnDrawAll">
<summary> Uns the draw all. </summary>
</member>
<member name="M:Baby.BrowserTabStrip.SelectItem(Baby.BrowserTabStripItem)">
<summary> Selects the item. </summary>
<param name="tabItem"> The tab item. </param>
</member>
<member name="M:Baby.BrowserTabStrip.UnSelectItem(Baby.BrowserTabStripItem)">
<summary> Uns the select item. </summary>
<param name="tabItem"> The tab item. </param>
</member>
<member name="M:Baby.BrowserTabStrip.SetDefaultSelection">
<summary> Sets the default selected. </summary>
</member>
<member name="M:Baby.BrowserTabStrip.OnTabStripItemClosing(Baby.TabClosingEventArgs)">
<summary> Raises the
<see cref="E:TabStripItemClosing" />
event. </summary>
<param name="e"> The
<see cref="T:Baby.TabClosingEventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.BrowserTabStrip.OnTabStripItemClosed(System.EventArgs)">
<summary> Raises the
<see cref="E:TabStripItemClosed" />
event. </summary>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.BrowserTabStrip.OnMenuItemsLoading(System.ComponentModel.HandledEventArgs)">
<summary> Raises the
<see cref="E:MenuItemsLoading" />
event. </summary>
<param name="e"> The
<see cref="T:System.ComponentModel.HandledEventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.BrowserTabStrip.OnMenuItemsLoaded(System.EventArgs)">
<summary> Raises the
<see cref="E:MenuItemsLoaded" />
event. </summary>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.BrowserTabStrip.OnTabStripItemChanged(Baby.TabItemChangedEventArgs)">
<summary> Raises the
<see cref="E:TabStripItemChanged" />
event. </summary>
<param name="e"> The
<see cref="T:Baby.TabItemChangedEventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.BrowserTabStrip.OnMenuItemsLoad(System.EventArgs)">
<summary> Raises the
<see cref="E:MenuItemsLoad" />
event. </summary>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.BrowserTabStrip.OnRightToLeftChanged(System.EventArgs)">
<inheritdoc />
<summary> Raises the
<see cref="E:System.Windows.Forms.Control.RightToLeftChanged" />
event. </summary>
<param name="e"> An
<see cref="T:System.EventArgs" />
that contains the event data. </param>
</member>
<member name="M:Baby.BrowserTabStrip.OnPaint(System.Windows.Forms.PaintEventArgs)">
<inheritdoc />
<summary> Raises the
<see cref="E:System.Windows.Forms.Control.Paint" />
event. </summary>
<param name="e"> A
<see cref="T:System.Windows.Forms.PaintEventArgs" />
that contains the event data. </param>
</member>
<member name="M:Baby.BrowserTabStrip.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
<inheritdoc />
<summary> Raises the
<see cref="E:System.Windows.Forms.Control.MouseDown" />
event. </summary>
<param name="e"> A
<see cref="T:System.Windows.Forms.MouseEventArgs" />
that contains the event data. </param>
</member>
<member name="M:Baby.BrowserTabStrip.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
<inheritdoc />
<summary> Raises the
<see cref="E:System.Windows.Forms.Control.MouseMove" />
event. </summary>
<param name="e"> A
<see cref="T:System.Windows.Forms.MouseEventArgs" />
that contains the event data. </param>
</member>
<member name="M:Baby.BrowserTabStrip.OnMouseLeave(System.EventArgs)">
<inheritdoc />
<summary> Raises the
<see cref="E:System.Windows.Forms.Control.MouseLeave" />
event. </summary>
<param name="e"> An
<see cref="T:System.EventArgs" />
that contains the event data. </param>
</member>
<member name="M:Baby.BrowserTabStrip.OnSizeChanged(System.EventArgs)">
<inheritdoc />
<summary> Raises the
<see cref="E:System.Windows.Forms.Control.SizeChanged" />
event. </summary>
<param name="e"> An
<see cref="T:System.EventArgs" />
that contains the event data. </param>
</member>
<member
  name="M:Baby.BrowserTabStrip.OnMenuItemClicked(System.Object,System.Windows.Forms.ToolStripItemClickedEventArgs)">
<summary> Called when [menu item clicked]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.Windows.Forms.ToolStripItemClickedEventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.BrowserTabStrip.OnMenuVisibleChanged(System.Object,System.EventArgs)">
<summary> Called when [menu visible changed]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member
  name="M:Baby.BrowserTabStrip.OnCalculateTabPage(System.Drawing.Graphics,Baby.BrowserTabStripItem)">
<summary> Called when [calculate tab page]. </summary>
<param name="g"> The g. </param>
<param name="currentItem"> The current item. </param>
</member>
<member
  name="M:Baby.BrowserTabStrip.OnDrawTabButton(System.Drawing.Graphics,Baby.BrowserTabStripItem)">
<summary> Called when [draw tab button]. </summary>
<param name="g"> The g. </param>
<param name="currentItem"> The current item. </param>
</member>
<member
  name="M:Baby.BrowserTabStrip.OnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
<summary> Called when [collection changed]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.ComponentModel.CollectionChangeEventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.BrowserTabStrip.Dispose(System.Boolean)">
<inheritdoc />
<summary> Releases the unmanaged resources used by the
<see cref="T:System.Windows.Forms.Control" />
and its child controls and optionally releases the managed resources. </summary>
<param name="disposing">
<see langword="true" />
to release both managed and unmanaged resources;
<see langword="false" />
to release only unmanaged resources. </param>
</member>
<member name="T:Baby.BrowserTabStripCloseButton">
<summary> </summary>
</member>
<member name="F:Baby.BrowserTabStripCloseButton.IsMouseOver">
<summary> The is mouse over </summary>
</member>
<member name="F:Baby.BrowserTabStripCloseButton.IsVisible">
<summary> The is visible </summary>
</member>
<member name="F:Baby.BrowserTabStripCloseButton.ButtonRectangle">
<summary> The rect </summary>
</member>
<member name="F:Baby.BrowserTabStripCloseButton.RedrawRectangle">
<summary> The redraw rect </summary>
</member>
<member name="F:Baby.BrowserTabStripCloseButton.Renderer">
<summary> The renderer </summary>
</member>
<member
  name="M:Baby.BrowserTabStripCloseButton.#ctor(System.Windows.Forms.ToolStripProfessionalRenderer)">
<summary> Initializes a new instance of the
<see cref="T:Baby.BrowserTabStripCloseButton" />
class. </summary>
<param name="renderer"> The renderer. </param>
</member>
<member name="M:Baby.BrowserTabStripCloseButton.CalculateBounds(Baby.BrowserTabStripItem)">
<summary> Calculates the bounds. </summary>
<param name="tab"> The tab. </param>
</member>
<member name="M:Baby.BrowserTabStripCloseButton.Draw(System.Drawing.Graphics)">
<summary> Draws the specified g. </summary>
<param name="g"> The g. </param>
</member>
<member name="T:Baby.BrowserTabStripItem">
<inheritdoc />
<summary> </summary>
<seealso cref="T:System.Windows.Forms.Panel" />
</member>
<member name="F:Baby.BrowserTabStripItem._drawn">
<summary> The is drawn </summary>
</member>
<member name="F:Baby.BrowserTabStripItem._selected">
<summary> The is selected </summary>
</member>
<member name="F:Baby.BrowserTabStripItem._title">
<summary> The title </summary>
</member>
<member name="F:Baby.BrowserTabStripItem._visible">
<summary> The is visible </summary>
</member>
<member name="P:Baby.BrowserTabStripItem.StripRectangle">
<summary> Gets or sets the strip rect. </summary>
<value> The strip rect. </value>
</member>
<member name="P:Baby.BrowserTabStripItem.Image">
<summary> Gets or sets the image. </summary>
<value> The image. </value>
</member>
<member name="P:Baby.BrowserTabStripItem.CanClose">
<summary> Gets or sets a value indicating whether this instance can close. </summary>
<value>
<c> true </c>
if this instance can close; otherwise,
<c> false </c>
. </value>
</member>
<member name="P:Baby.BrowserTabStripItem.Size">
<summary> Gets or sets the height and width of the control. </summary>
</member>
<member name="P:Baby.BrowserTabStripItem.Visible">
<summary> Gets or sets a value indicating whether the control and all its child controls are
displayed. </summary>
</member>
<member name="P:Baby.BrowserTabStripItem.Drawn">
<summary> Gets or sets a value indicating whether this instance is drawn. </summary>
<value>
<c> true </c>
if this instance is drawn; otherwise,
<c> false </c>
. </value>
</member>
<member name="P:Baby.BrowserTabStripItem.Title">
<summary> Gets or sets the title. </summary>
<value> The title. </value>
</member>
<member name="P:Baby.BrowserTabStripItem.Selected">
<summary> Gets or sets a value indicating whether this instance is selected. </summary>
<value>
<c> true </c>
if this instance is selected; otherwise,
<c> false </c>
. </value>
</member>
<member name="P:Baby.BrowserTabStripItem.Caption">
<summary> Gets the caption. </summary>
<value> The caption. </value>
</member>
<member name="E:Baby.BrowserTabStripItem.Changed">
<summary> Occurs when [changed]. </summary>
</member>
<member name="M:Baby.BrowserTabStripItem.#ctor">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.BrowserTabStripItem" />
class. </summary>
</member>
<member name="M:Baby.BrowserTabStripItem.#ctor(System.Windows.Forms.Control)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.BrowserTabStripItem" />
class. </summary>
<param name="displayControl"> The display control. </param>
</member>
<member name="M:Baby.BrowserTabStripItem.#ctor(System.String,System.Windows.Forms.Control)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.BrowserTabStripItem" />
class. </summary>
<param name="caption"> The caption. </param>
<param name="displayControl"> The display control. </param>
</member>
<member name="M:Baby.BrowserTabStripItem.ShouldSerializeIsDrawn">
<summary> Should serialize is drawn. </summary>
<returns> </returns>
</member>
<member name="M:Baby.BrowserTabStripItem.ShouldSerializeDock">
<summary> Should serialize dock. </summary>
<returns> </returns>
</member>
<member name="M:Baby.BrowserTabStripItem.ShouldSerializeControls">
<summary> Should the serialize controls. </summary>
<returns> </returns>
</member>
<member name="M:Baby.BrowserTabStripItem.ShouldSerializeVisible">
<summary> Should the serialize visible. </summary>
<returns> </returns>
</member>
<member name="M:Baby.BrowserTabStripItem.Assign(Baby.BrowserTabStripItem)">
<summary> Assigns the specified item. </summary>
<param name="item"> The item. </param>
</member>
<member name="M:Baby.BrowserTabStripItem.ToString">
<inheritdoc />
<summary> Converts to string. </summary>
<returns> A
<see cref="T:System.String" />
that represents this instance. </returns>
</member>
<member name="M:Baby.BrowserTabStripItem.UpdateText(System.String,System.Windows.Forms.Control)">
<summary> Updates the text. </summary>
<param name="caption"> The caption. </param>
<param name="displayControl"> The display control. </param>
</member>
<member name="M:Baby.BrowserTabStripItem.OnChanged">
<summary> Called when [changed]. </summary>
</member>
<member name="M:Baby.BrowserTabStripItem.Dispose(System.Boolean)">
<inheritdoc />
<summary> Releases the unmanaged resources used by the
<see cref="T:System.Windows.Forms.Control" />
and its child controls and optionally releases the managed resources. </summary>
<param name="disposing">
<see langword="true" />
to release both managed and unmanaged resources;
<see langword="false" />
to release only unmanaged resources. </param>
</member>
<member
  name="M:Baby.BrowserTabStripItem.OnRightClick(System.Object,System.Windows.Forms.MouseEventArgs)">
<summary> Called when [right click]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.Windows.Forms.MouseEventArgs" />
instance containing the event data. </param>
</member>
<member name="T:Baby.BrowserTabStripItemCollection">
<inheritdoc />
<summary> </summary>
<seealso cref="T:Baby.CollectionWithEvents" />
</member>
<member name="F:Baby.BrowserTabStripItemCollection._lockUpdate">
<summary> The lock update </summary>
</member>
<member name="P:Baby.BrowserTabStripItemCollection.Item(System.Int32)">
<summary> Gets or sets the
<see cref="T:Baby.BrowserTabStripItem" />
at the specified index. </summary>
<value> The
<see cref="T:Baby.BrowserTabStripItem" />
. </value>
<param name="index"> The index. </param>
<returns> </returns>
</member>
<member name="P:Baby.BrowserTabStripItemCollection.DrawnCount">
<summary> Gets the drawn count. </summary>
<value> The drawn count. </value>
</member>
<member name="P:Baby.BrowserTabStripItemCollection.LastVisible">
<summary> Gets the last visible. </summary>
<value> The last visible. </value>
</member>
<member name="P:Baby.BrowserTabStripItemCollection.FirstVisible">
<summary> Gets the first visible. </summary>
<value> The first visible. </value>
</member>
<member name="P:Baby.BrowserTabStripItemCollection.VisibleCount">
<summary> Gets the visible count. </summary>
<value> The visible count. </value>
</member>
<member name="E:Baby.BrowserTabStripItemCollection.CollectionChanged">
<summary> Occurs when [collection changed]. </summary>
</member>
<member name="M:Baby.BrowserTabStripItemCollection.#ctor">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.BrowserTabStripItemCollection" />
class. </summary>
</member>
<member name="M:Baby.BrowserTabStripItemCollection.AddRange(Baby.BrowserTabStripItem[])">
<summary> Adds the range. </summary>
<param name="items"> The items. </param>
</member>
<member name="M:Baby.BrowserTabStripItemCollection.Assign(Baby.BrowserTabStripItemCollection)">
<summary> Assigns the specified collection. </summary>
<param name="collection"> The collection. </param>
</member>
<member name="M:Baby.BrowserTabStripItemCollection.Add(Baby.BrowserTabStripItem)">
<summary> Adds the specified item. </summary>
<param name="item"> The item. </param>
<returns> </returns>
</member>
<member name="M:Baby.BrowserTabStripItemCollection.Remove(Baby.BrowserTabStripItem)">
<summary> Removes the specified item. </summary>
<param name="item"> The item. </param>
</member>
<member name="M:Baby.BrowserTabStripItemCollection.MoveTo(System.Int32,Baby.BrowserTabStripItem)">
<summary> Moves to. </summary>
<param name="newIndex"> The new index. </param>
<param name="item"> The item. </param>
<returns> </returns>
</member>
<member name="M:Baby.BrowserTabStripItemCollection.IndexOf(Baby.BrowserTabStripItem)">
<summary> Indexes the of. </summary>
<param name="item"> The item. </param>
<returns> </returns>
</member>
<member name="M:Baby.BrowserTabStripItemCollection.Contains(Baby.BrowserTabStripItem)">
<summary> Determines whether this instance contains the object. </summary>
<param name="item"> The item. </param>
<returns>
<c> true </c>
if [contains] [the specified item]; otherwise,
<c> false </c>
. </returns>
</member>
<member name="M:Baby.BrowserTabStripItemCollection.Insert(System.Int32,Baby.BrowserTabStripItem)">
<summary> Inserts the specified index. </summary>
<param name="index"> The index. </param>
<param name="item"> The item. </param>
</member>
<member
  name="M:Baby.BrowserTabStripItemCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
<summary> Raises the
<see cref="E:CollectionChanged" />
event. </summary>
<param name="e"> The
<see cref="T:System.ComponentModel.CollectionChangeEventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.BrowserTabStripItemCollection.BeginUpdate">
<summary> Begins the update. </summary>
</member>
<member name="M:Baby.BrowserTabStripItemCollection.EndUpdate">
<summary> Ends the update. </summary>
</member>
<member name="M:Baby.BrowserTabStripItemCollection.OnInsertComplete(System.Int32,System.Object)">
<inheritdoc />
<summary> Called when [insert complete]. </summary>
<param name="index"> The index. </param>
<param name="item"> The item. </param>
</member>
<member name="M:Baby.BrowserTabStripItemCollection.OnRemove(System.Int32,System.Object)">
<inheritdoc />
<summary> Called when [remove]. </summary>
<param name="index"> The index. </param>
<param name="item"> The item. </param>
</member>
<member name="M:Baby.BrowserTabStripItemCollection.OnClear">
<inheritdoc />
<summary> Called when [clear]. </summary>
</member>
<member name="M:Baby.BrowserTabStripItemCollection.OnItemChanged(System.Object,System.EventArgs)">
<summary> Called when [item changed]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="T:Baby.TextBox">
<summary> </summary>
<seealso cref="T:MetroSet_UI.Controls.MetroSetTextBox" />
</member>
<member name="P:Baby.TextBox.SelectionLength">
<summary> Gets or sets the length of the selection. </summary>
<value> The length of the selection. </value>
</member>
<member name="P:Baby.TextBox.ToolTip">
<summary> Gets or sets the tool tip. </summary>
<value> The tool tip. </value>
</member>
<member name="P:Baby.TextBox.HoverText">
<summary> Gets or sets the hover text. </summary>
<value> The hover text. </value>
</member>
<member name="M:Baby.TextBox.#ctor">
<summary> Initializes a new instance of the
<see cref="T:Baby.TextBox" />
class. </summary>
</member>
<member name="M:Baby.TextBox.Fail(System.Exception)">
<summary> Get ErrorDialog Dialog. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.ToolButtonBase">
<inheritdoc />
<summary> </summary>
</member>
<member name="P:Baby.ToolButtonBase.ToolTip">
<summary> Gets or sets the tool tip. </summary>
<value> The tool tip. </value>
</member>
<member name="P:Baby.ToolButtonBase.HoverText">
<summary> Gets or sets the hover text. </summary>
<value> The hover text. </value>
</member>
<member name="P:Baby.ToolButtonBase.ToolType">
<summary> Gets or sets the type of the tool. </summary>
<value> The type of the tool. </value>
</member>
<member name="M:Baby.ToolButtonBase.GetHoverText(Baby.ToolType)">
<summary> Gets the hover text. </summary>
<param name="tool"> The tool. </param>
<returns> </returns>
</member>
<member name="M:Baby.ToolButtonBase.SetHoverText(System.String)">
<summary> Sets the hover text. </summary>
<param name="text"> The text. </param>
</member>
<member name="M:Baby.ToolButtonBase.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.ToolSeparator">
<inheritdoc />
<summary> </summary>
<seealso cref="T:System.Windows.Forms.ToolStripSeparator" />
</member>
<member name="M:Baby.ToolSeparator.#ctor">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.ToolSeparator" />
class. </summary>
</member>
<member name="M:Baby.ToolSeparator.SetWidth(System.Int32)">
<summary> Sets the width. </summary>
<param name="width"> The width. </param>
</member>
<member name="M:Baby.ToolSeparator.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.ToolStrip">
<inheritdoc />
<summary> </summary>
<seealso cref="T:Baby.ToolStripBase" />
</member>
<member name="P:Baby.ToolStrip.Buttons">
<summary> Gets the buttons. </summary>
<value> The buttons. </value>
</member>
<member name="M:Baby.ToolStrip.#ctor">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.ToolStrip" />
class. </summary>
</member>
<member name="M:Baby.ToolStrip.GetButtons">
<summary> Gets the buttons. </summary>
<returns> </returns>
</member>
<member name="M:Baby.ToolStrip.OnVisible(System.Object,System.EventArgs)">
<summary> Called when [load]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="T:Baby.ToolStripBase">
<summary> </summary>
<seealso cref="T:Syncfusion.Windows.Forms.Tools.ToolStripEx" />
</member>
<member name="P:Baby.ToolStripBase.Separators">
<summary> Gets or sets the separators. </summary>
<value> The separators. </value>
</member>
<member name="P:Baby.ToolStripBase.NavigationLabel">
<summary> Gets or sets the label. </summary>
<value> The label. </value>
</member>
<member name="P:Baby.ToolStripBase.SearchEngineLabel">
<summary> Gets or sets the search engine label. </summary>
<value> The search engine label. </value>
</member>
<member name="P:Baby.ToolStripBase.WebsiteLabel">
<summary> Gets or sets the search criteria label. </summary>
<value> The search criteria label. </value>
</member>
<member name="P:Baby.ToolStripBase.WebsiteComboBox">
<summary> Gets or sets the drop down. </summary>
<value> The drop down. </value>
</member>
<member name="P:Baby.ToolStripBase.SearchEngineComboBox">
<summary> Gets or sets the drop down. </summary>
<value> The drop down. </value>
</member>
<member name="P:Baby.ToolStripBase.ToolBarTextBox">
<summary> Gets or sets the text box. </summary>
<value> The text box. </value>
</member>
<member name="P:Baby.ToolStripBase.FirstButton">
<summary> Gets or sets the first button. </summary>
<value> The first button. </value>
</member>
<member name="P:Baby.ToolStripBase.PreviousButton">
<summary> Gets or sets the previous button. </summary>
<value> The previous button. </value>
</member>
<member name="P:Baby.ToolStripBase.NextButton">
<summary> Gets or sets the next button. </summary>
<value> The next button. </value>
</member>
<member name="P:Baby.ToolStripBase.RefreshButton">
<summary> Gets or sets the refresh button. </summary>
<value> The refresh button. </value>
</member>
<member name="P:Baby.ToolStripBase.HomeButton">
<summary> Gets or sets the home button. </summary>
<value> The home button. </value>
</member>
<member name="M:Baby.ToolStripBase.#ctor">
<summary> Initializes a new instance of the
<see cref="T:Baby.ToolStripBase" />
class. </summary>
</member>
<member name="M:Baby.ToolStripBase.AddTextBox">
<summary> Adds the text box. </summary>
</member>
<member name="M:Baby.ToolStripBase.AddComboBox">
<summary> Adds the ComboBox. </summary>
</member>
<member name="M:Baby.ToolStripBase.AddDropDownItem(System.Object)">
<summary> Adds the drop down item. </summary>
<param name="item"> The item. </param>
</member>
<member
  name="M:Baby.ToolStripBase.ResetDropDownList(System.Collections.Generic.IEnumerable{System.Object})">
<summary> Resets the drop down list. </summary>
<param name="items"> The items. </param>
</member>
<member name="M:Baby.ToolStripBase.AddSeparator">
<summary> Adds the separator. </summary>
</member>
<member name="M:Baby.ToolStripBase.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.ToolStripButton">
<inheritdoc />
<summary> </summary>
<seealso cref="T:Baby.ToolButtonBase" />
</member>
<member name="M:Baby.ToolStripButton.#ctor">
<summary> Initializes a new instance of the
<see cref="T:Baby.ToolStripButton" />
class. </summary>
</member>
<member name="M:Baby.ToolStripButton.#ctor(Baby.ToolType)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.ToolStripButton" />
class. </summary>
<param name="toolType"> Type of the tool. </param>
</member>
<member name="M:Baby.ToolStripButton.GetImage(Baby.ToolType)">
<summary> Gets the image. </summary>
<param name="toolType"> Type of the tool. </param>
<returns> </returns>
</member>
<member name="M:Baby.ToolStripButton.OnMouseHover(System.Object,System.EventArgs)">
<summary> Called when [mouse hover]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.ToolStripButton.OnMouseLeave(System.Object,System.EventArgs)">
<summary> Called when [mouse leave]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.ToolStripButton.OnClick(System.Object,System.EventArgs)">
<summary> Called when [click]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.ToolStripButton.SetImage">
<summary> Sets the image. </summary>
</member>
<member name="T:Baby.ToolStripComboBox">
<inheritdoc />
<summary> </summary>
<seealso cref="T:Baby.ToolStripDropDown" />
</member>
<member name="P:Baby.ToolStripComboBox.ToolTip">
<summary> Gets or sets the tool tip. </summary>
<value> The tool tip. </value>
</member>
<member name="M:Baby.ToolStripComboBox.#ctor">
<summary> Initializes a new instance of the
<see cref="T:Baby.ToolStripComboBox" />
class. </summary>
</member>
<member name="M:Baby.ToolStripComboBox.OnMouseHover(System.Object,System.EventArgs)">
<summary> Called when [mouse over]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.ToolStripComboBox.OnItemSelected(System.Object,System.EventArgs)">
<summary> Called when [item selected]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.ToolStripComboBox.GetSelectedItem">
<summary> Gets the selected item. </summary>
<returns> </returns>
</member>
<member name="M:Baby.ToolStripComboBox.AddItem(System.Object)">
<summary> Gets the selected item. </summary>
<returns> </returns>
</member>
<member name="M:Baby.ToolStripComboBox.OnMouseLeave(System.Object,System.EventArgs)">
<summary> Called when [mouse leave]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="T:Baby.ToolStripDropDown">
<summary> </summary>
<seealso cref="T:Syncfusion.Windows.Forms.Tools.ToolStripComboBoxEx" />
</member>
<member name="P:Baby.ToolStripDropDown.HoverText">
<summary> Gets or sets the hover text. </summary>
<value> The hover text. </value>
</member>
<member name="M:Baby.ToolStripDropDown.SetFont(System.Drawing.Font)">
<summary> Sets the font. </summary>
<param name="font"> The font. </param>
</member>
<member name="M:Baby.ToolStripDropDown.SetForeColor(System.Drawing.Color)">
<summary> Sets the color of the fore. </summary>
<param name="color"> The color. </param>
</member>
<member name="M:Baby.ToolStripDropDown.SetBackColor(System.Drawing.Color)">
<summary> Sets the color of the back. </summary>
<param name="color"> The color. </param>
</member>
<member name="M:Baby.ToolStripDropDown.SetHoverText(System.Windows.Forms.ToolStripItem)">
<summary> Sets the hover text. </summary>
<param name="item"> The item. </param>
</member>
<member name="M:Baby.ToolStripDropDown.SetHoverText(System.String)">
<summary> Sets the hover text. </summary>
<param name="text"> The text. </param>
</member>
<member name="M:Baby.ToolStripDropDown.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.ToolStripLabel">
<inheritdoc />
<summary> </summary>
<seealso cref="T:System.Windows.Forms.ToolStripLabel" />
</member>
<member name="P:Baby.ToolStripLabel.ToolTip">
<summary> Gets or sets the tool tip. </summary>
<value> The tool tip. </value>
</member>
<member name="P:Baby.ToolStripLabel.HoverText">
<summary> Gets or sets the hover text. </summary>
<value> The hover text. </value>
</member>
<member name="M:Baby.ToolStripLabel.#ctor">
<summary> Initializes a new instance of the
<see cref="T:Baby.ToolStripLabel" />
class. </summary>
</member>
<member name="M:Baby.ToolStripLabel.#ctor(System.String)">
<summary> Initializes a new instance of the
<see cref="T:Baby.ToolStripLabel" />
class. </summary>
<param name="text"> The text to display on the
<see cref="T:System.Windows.Forms.ToolStripLabel" />
. </param>
</member>
<member name="M:Baby.ToolStripLabel.#ctor(System.String,System.String)">
<summary> Initializes a new instance of the
<see cref="T:Baby.ToolStripLabel" />
class. </summary>
<param name="text"> The text. </param>
<param name="hoverText"> The hover text. </param>
</member>
<member name="M:Baby.ToolStripLabel.SetText(System.String,System.Drawing.Color)">
<summary> Sets the text. </summary>
<param name="text"> The text. </param>
<param name="color"> The color. </param>
</member>
<member
  name="M:Baby.ToolStripLabel.SetText(System.String,System.Drawing.Color,System.Drawing.Font)">
<summary> Sets the text. </summary>
<param name="text"> The text. </param>
<param name="color"> The color. </param>
<param name="font"> The font. </param>
</member>
<member name="M:Baby.ToolStripLabel.SetHoverText(System.String)">
<summary> Sets the hover text. </summary>
<param name="text"> The text. </param>
</member>
<member name="M:Baby.ToolStripLabel.OnMouseHover(System.Object,System.EventArgs)">
<summary> Called when [mouse hover]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.ToolStripLabel.SetFont(System.Drawing.Font)">
<summary> Sets the font. </summary>
<param name="font"> The font. </param>
</member>
<member name="M:Baby.ToolStripLabel.SetForeColor(System.Drawing.Color)">
<summary> Sets the color of the fore. </summary>
<param name="color"> The color. </param>
</member>
<member name="M:Baby.ToolStripLabel.SetBackColor(System.Drawing.Color)">
<summary> Sets the color of the back. </summary>
<param name="color"> The color. </param>
</member>
<member name="M:Baby.ToolStripLabel.SetText(System.String)">
<summary> Sets the text. </summary>
<param name="text"> The text. </param>
</member>
<member name="M:Baby.ToolStripLabel.SetTag(System.Object)">
<summary> Sets the tag. </summary>
<param name="tag"> The tag. </param>
</member>
<member name="M:Baby.ToolStripLabel.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.ToolStripTextBox">
<inheritdoc />
<summary> </summary>
<seealso cref="T:System.Windows.Forms.ToolStripTextBox" />
</member>
<member name="P:Baby.ToolStripTextBox.HoverText">
<summary> Gets or sets the hover text. </summary>
<value> The hover text. </value>
</member>
<member name="P:Baby.ToolStripTextBox.ToolTip">
<summary> Gets or sets the tool tip. </summary>
<value> The tool tip. </value>
</member>
<member name="M:Baby.ToolStripTextBox.#ctor">
<summary> Initializes a new instance of the
<see cref="T:Baby.ToolStripTextBox" />
class. </summary>
</member>
<member name="M:Baby.ToolStripTextBox.#ctor(System.String)">
<summary> Initializes a new instance of the
<see cref="T:Baby.ToolStripTextBox" />
class. </summary>
<param name="text"> The text. </param>
</member>
<member name="M:Baby.ToolStripTextBox.#ctor(System.String,System.String)">
<summary> Initializes a new instance of the
<see cref="T:Baby.ToolStripTextBox" />
class. </summary>
<param name="text"> The text. </param>
<param name="hoverText"> The hover text. </param>
</member>
<member name="M:Baby.ToolStripTextBox.ResetText(System.String)">
<summary> Resets the text. </summary>
<param name="text"> The text. </param>
</member>
<member name="M:Baby.ToolStripTextBox.SetHoverText(System.Windows.Forms.ToolStripItem)">
<summary> Sets the hover text. </summary>
<param name="item"> The item. </param>
</member>
<member name="M:Baby.ToolStripTextBox.OnMouseHover(System.Object,System.EventArgs)">
<summary> Called when [mouse hover]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.ToolStripTextBox.OnMouseLeave(System.Object,System.EventArgs)">
<summary> Called when [mouse leave]. </summary>
<param name="sender"> The sender. </param>
<param name="e"> The
<see cref="T:System.EventArgs" />
instance containing the event data. </param>
</member>
<member name="M:Baby.ToolStripTextBox.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.ToolTip">
<summary> </summary>
<seealso cref="T:MetroSet_UI.Components.MetroSetSetToolTip" />
</member>
<member name="P:Baby.ToolTip.TipIcon">
<summary> Gets or sets the tip icon. </summary>
<value> The tip icon. </value>
</member>
<member name="P:Baby.ToolTip.TipTitle">
<summary> Gets or sets the tip title. </summary>
<value> The tip title. </value>
</member>
<member name="P:Baby.ToolTip.TipText">
<summary> Gets or sets the tip text. </summary>
<value> The tip text. </value>
</member>
<member name="P:Baby.ToolTip.Name">
<summary> Gets or sets the name. </summary>
<value> The name. </value>
</member>
<member name="M:Baby.ToolTip.#ctor">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.ToolTip" />
class. </summary>
</member>
<member name="M:Baby.ToolTip.#ctor(System.Windows.Forms.Control,System.String,System.String)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.ToolTip" />
class. </summary>
<param name="control"> The control. </param>
<param name="text"> The text. </param>
<param name="title"> The title. </param>
</member>
<member name="M:Baby.ToolTip.#ctor(System.ComponentModel.Component,System.String,System.String)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.ToolTip" />
class. </summary>
<param name="component"> The component. </param>
<param name="text"> The text. </param>
<param name="title"> The title. </param>
</member>
<member name="M:Baby.ToolTip.#ctor(System.Windows.Forms.ToolStripItem)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.ToolTip" />
class. </summary>
<param name="toolItem"> The tool item. </param>
</member>
<member name="M:Baby.ToolTip.#ctor(System.Windows.Forms.Control)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.ToolTip" />
class. </summary>
<param name="control"> The control. </param>
</member>
<member name="M:Baby.ToolTip.SetAnimation(System.Boolean)">
<summary> Sets the animation. </summary>
<param name="animate"> if set to
<c> true </c>
[animate]. </param>
</member>
<member name="M:Baby.ToolTip.SetAutomaticDelay(System.Int32)">
<summary> Sets the automatic delay. </summary>
<param name="delay"> The delay. </param>
</member>
<member name="M:Baby.ToolTip.ResetDuration(System.Int32)">
<summary> Resets the duration. </summary>
<param name="time"> The time. </param>
</member>
<member name="M:Baby.ToolTip.SetInitialDelay(System.Int32)">
<summary> Sets the initial delay. </summary>
<param name="delay"> The delay. </param>
</member>
<member name="M:Baby.ToolTip.ResetDelay(System.Int32)">
<summary> Resets the delay. </summary>
<param name="reshow"> The reshow. </param>
</member>
<member name="M:Baby.ToolTip.ReTag(System.Object)">
<summary> Res the tag. </summary>
<param name="tag"> The tag. </param>
</member>
<member name="M:Baby.ToolTip.SetText(System.Windows.Forms.Control)">
<summary> Sets the text. </summary>
<param name="control"> The control. </param>
</member>
<member name="M:Baby.ToolTip.SetText(System.Windows.Forms.Control,System.String)">
<summary> Sets the text. </summary>
<param name="control"> The control. </param>
<param name="caption"> The caption. </param>
</member>
<member name="M:Baby.ToolTip.SetText(System.Windows.Forms.ToolStripItem)">
<summary> Sets the text. </summary>
<param name="item"> The item. </param>
</member>
<member name="M:Baby.ToolTip.SetText(System.ComponentModel.Component)">
<summary> Sets the text. </summary>
<param name="component"> The component. </param>
</member>
<member name="M:Baby.ToolTip.SetText(System.ComponentModel.Component,System.String)">
<summary> Sets the text. </summary>
<param name="component"> The component. </param>
<param name="caption"> The caption. </param>
</member>
<member name="M:Baby.ToolTip.ClearText">
<summary> Clears the text. </summary>
</member>
<member name="M:Baby.ToolTip.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.Deserialize">
<summary> </summary>
<param name="data"> The data. </param>
<returns> </returns>
</member>
<member name="T:Baby.Serialize">
<summary> </summary>
<param name="data"> The data. </param>
<returns />
</member>
<member name="T:Baby.ChangeType">
<summary> </summary>
</member>
<member name="F:Baby.ChangeType.Added">
<summary> The added </summary>
</member>
<member name="F:Baby.ChangeType.Removed">
<summary> The removed </summary>
</member>
<member name="F:Baby.ChangeType.Changed">
<summary> The changed </summary>
</member>
<member name="F:Baby.ChangeType.SelectionChanged">
<summary> The selection changed </summary>
</member>
<member name="T:Baby.Domain">
<summary> </summary>
</member>
<member name="F:Baby.Domain.Google">
<summary> The google </summary>
</member>
<member name="F:Baby.Domain.EPA">
<summary> The epa </summary>
</member>
<member name="F:Baby.Domain.DATA">
<summary> The data.gov </summary>
</member>
<member name="F:Baby.Domain.GPO">
<summary> The gpo </summary>
</member>
<member name="F:Baby.Domain.USGI">
<summary> The gov information </summary>
</member>
<member name="F:Baby.Domain.CRS">
<summary> The CRS </summary>
</member>
<member name="F:Baby.Domain.LOC">
<summary> The loc </summary>
</member>
<member name="F:Baby.Domain.OMB">
<summary> The omb </summary>
</member>
<member name="F:Baby.Domain.UST">
<summary> The treasury </summary>
</member>
<member name="F:Baby.Domain.NASA">
<summary> The nasa </summary>
</member>
<member name="F:Baby.Domain.NOAA">
<summary> The noaa </summary>
</member>
<member name="F:Baby.Domain.DOI">
<summary> The doi </summary>
</member>
<member name="F:Baby.Domain.NPS">
<summary> The NPS </summary>
</member>
<member name="F:Baby.Domain.GSA">
<summary> The gsa </summary>
</member>
<member name="F:Baby.Domain.NARA">
<summary> The National Archives </summary>
</member>
<member name="F:Baby.Domain.DOC">
<summary> The document </summary>
</member>
<member name="F:Baby.Domain.HHS">
<summary> The HHS </summary>
</member>
<member name="F:Baby.Domain.NRC">
<summary> The NRC </summary>
</member>
<member name="F:Baby.Domain.DOE">
<summary> The doe </summary>
</member>
<member name="F:Baby.Domain.NSF">
<summary> The NSF </summary>
</member>
<member name="F:Baby.Domain.USDA">
<summary> The usda </summary>
</member>
<member name="F:Baby.Domain.CSB">
<summary> The CSB </summary>
</member>
<member name="F:Baby.Domain.IRS">
<summary> The irs </summary>
</member>
<member name="F:Baby.Domain.FDA">
<summary> The fda </summary>
</member>
<member name="F:Baby.Domain.CDC">
<summary> The CDC </summary>
</member>
<member name="F:Baby.Domain.ACE">
<summary> The ace </summary>
</member>
<member name="F:Baby.Domain.DHS">
<summary> The DHS </summary>
</member>
<member name="F:Baby.Domain.DOD">
<summary> The dod </summary>
</member>
<member name="F:Baby.Domain.USNO">
<summary> The US Naval Observatory </summary>
</member>
<member name="F:Baby.Domain.NWS">
<summary> The NWS </summary>
</member>
<member name="T:Baby.EXT">
<summary> </summary>
</member>
<member name="F:Baby.EXT.DB">
<summary> The database </summary>
</member>
<member name="F:Baby.EXT.ACCDB">
<summary> The accdb </summary>
</member>
<member name="F:Baby.EXT.MDB">
<summary> The MDB </summary>
</member>
<member name="F:Baby.EXT.SDF">
<summary> The SDF </summary>
</member>
<member name="F:Baby.EXT.MDF">
<summary> The MDF </summary>
</member>
<member name="F:Baby.EXT.XLS">
<summary> The XLS </summary>
</member>
<member name="F:Baby.EXT.XLSX">
<summary> The XLSX </summary>
</member>
<member name="F:Baby.EXT.CSV">
<summary> The CSV </summary>
</member>
<member name="F:Baby.EXT.TXT">
<summary> The text </summary>
</member>
<member name="F:Baby.EXT.PDF">
<summary> The PDF </summary>
</member>
<member name="F:Baby.EXT.DOCX">
<summary> The docx </summary>
</member>
<member name="F:Baby.EXT.DOC">
<summary> The document </summary>
</member>
<member name="F:Baby.EXT.SQL">
<summary> The SQL </summary>
</member>
<member name="F:Baby.EXT.RESX">
<summary> The RESX </summary>
</member>
<member name="F:Baby.EXT.Dll">
<summary> The DLL </summary>
</member>
<member name="F:Baby.EXT.Exe">
<summary> The executable </summary>
</member>
<member name="F:Baby.EXT.ICO">
<summary> The icon </summary>
</member>
<member name="F:Baby.EXT.PNG">
<summary> The PNG </summary>
</member>
<member name="F:Baby.EXT.GIF">
<summary> The GIF </summary>
</member>
<member name="T:Baby.HitResult">
<summary> </summary>
</member>
<member name="F:Baby.HitResult.CloseButton">
<summary> The close button </summary>
</member>
<member name="F:Baby.HitResult.TabItem">
<summary> The tab item </summary>
</member>
<member name="F:Baby.HitResult.None">
<summary> The none </summary>
</member>
<member name="T:Baby.IconSize">
<summary> Two constants extracted from the InfoFlags, the only that are meaningful for the user of
this class. </summary>
</member>
<member name="F:Baby.IconSize.Large">
<summary> The large </summary>
</member>
<member name="F:Baby.IconSize.Small">
<summary> The small </summary>
</member>
<member name="T:Baby.InfoFlags">
<summary> </summary>
</member>
<member name="F:Baby.InfoFlags.ShgfiIcon">
<summary> Retrieve the handle to the icon that represents the file and the index of the icon within
the system image list. The handle is copied to the IconHandle member of the structure specified by
psfi, and the index is copied to the IconIndex member. </summary>
</member>
<member name="F:Baby.InfoFlags.ShgfiUsefileattributes">
<summary> Indicates that the function should not attempt to access the file specified by pszPath.
Rather, it should act as if the file specified by pszPath exists with the file attributes passed in
FileAttributes. </summary>
</member>
<member name="T:Baby.MenuItem">
<summary> </summary>
</member>
<member name="F:Baby.MenuItem.Close">
<summary> The close </summary>
</member>
<member name="F:Baby.MenuItem.Other">
<summary> The other tabs </summary>
</member>
<member name="F:Baby.MenuItem.Refresh">
<summary> The refresh </summary>
</member>
<member name="F:Baby.MenuItem.SaveAs">
<summary> The search </summary>
</member>
<member name="F:Baby.MenuItem.Print">
<summary> The browse </summary>
</member>
<member name="F:Baby.MenuItem.Developer">
<summary> The developer tools </summary>
</member>
<member name="F:Baby.MenuItem.Source">
<summary> The view source </summary>
</member>
<member name="F:Baby.MenuItem.Chrome">
<summary> The chrome </summary>
</member>
<member name="F:Baby.MenuItem.Edge">
<summary> The edge </summary>
</member>
<member name="F:Baby.MenuItem.Firefox">
<summary> The firefox </summary>
</member>
<member name="F:Baby.MenuItem.Calculator">
<summary> The calculator </summary>
</member>
<member name="F:Baby.MenuItem.TaskManager">
<summary> The task manager </summary>
</member>
<member name="F:Baby.MenuItem.ControlPanel">
<summary> The control panel </summary>
</member>
<member name="F:Baby.MenuItem.OneDrive">
<summary> The one drive </summary>
</member>
<member name="F:Baby.MenuItem.Exit">
<summary> The exit </summary>
</member>
<member name="T:Baby.Token">
<summary> </summary>
</member>
<member name="F:Baby.Token.None">
<summary> The none </summary>
</member>
<member name="F:Baby.Token.CurlyOpen">
<summary> The curly open </summary>
</member>
<member name="F:Baby.Token.CurlyClose">
<summary> The curly close </summary>
</member>
<member name="F:Baby.Token.SquaredOpen">
<summary> The squared open </summary>
</member>
<member name="F:Baby.Token.SquaredClose">
<summary> The squared close </summary>
</member>
<member name="F:Baby.Token.Colon">
<summary> The colon </summary>
</member>
<member name="F:Baby.Token.Comma">
<summary> The comma </summary>
</member>
<member name="F:Baby.Token.String">
<summary> The string </summary>
</member>
<member name="F:Baby.Token.Number">
<summary> The number </summary>
</member>
<member name="F:Baby.Token.True">
<summary> The true </summary>
</member>
<member name="F:Baby.Token.False">
<summary> The false </summary>
</member>
<member name="F:Baby.Token.Null">
<summary> The null </summary>
</member>
<member name="T:Baby.ToolType">
<summary> </summary>
</member>
<member name="F:Baby.ToolType.FirstButton">
<summary> The back button </summary>
</member>
<member name="F:Baby.ToolType.CancelButton">
<summary> The cancel request button </summary>
</member>
<member name="F:Baby.ToolType.CalculatorButton">
<summary> The calculator button </summary>
</member>
<member name="F:Baby.ToolType.CalendarButton">
<summary> The calendar button </summary>
</member>
<member name="F:Baby.ToolType.CloseButton">
<summary> The close button </summary>
</member>
<member name="F:Baby.ToolType.DeleteButton">
<summary> The delete button </summary>
</member>
<member name="F:Baby.ToolType.DownloadButton">
<summary> The download button </summary>
</member>
<member name="F:Baby.ToolType.ExitButton">
<summary> The exit button </summary>
</member>
<member name="F:Baby.ToolType.EmailButton">
<summary> The email button </summary>
</member>
<member name="F:Baby.ToolType.GuidanceButton">
<summary> The guidance button </summary>
</member>
<member name="F:Baby.ToolType.GoogleButton">
<summary> The google button </summary>
</member>
<member name="F:Baby.ToolType.HomeButton">
<summary> The home button </summary>
</member>
<member name="F:Baby.ToolType.LastButton">
<summary> The last button </summary>
</member>
<member name="F:Baby.ToolType.LogoutButton">
<summary> The logout button </summary>
</member>
<member name="F:Baby.ToolType.PreviousButton">
<summary> The previous button </summary>
</member>
<member name="F:Baby.ToolType.MenuButton">
<summary> The menu button </summary>
</member>
<member name="F:Baby.ToolType.RefreshButton">
<summary> The refresh button </summary>
</member>
<member name="F:Baby.ToolType.BackButton">
<summary> The web back button </summary>
</member>
<member name="F:Baby.ToolType.NextButton">
<summary> The web next button </summary>
</member>
<member name="F:Baby.ToolType.EdgeButton">
<summary> The edge button </summary>
</member>
<member name="F:Baby.ToolType.FireFoxButton">
<summary> The fire fox button </summary>
</member>
<member name="T:Baby.CollectionChanged">
<summary> </summary>
<param name="index"> The index. </param>
<param name="value"> The value. </param>
</member>
<member name="T:Baby.CollectionClear">
<summary> </summary>
</member>
<member name="T:Baby.CollectionWithEvents">
<inheritdoc />
<summary> </summary>
<seealso cref="T:System.Collections.CollectionBase" />
</member>
<member name="F:Baby.CollectionWithEvents._suspendCount">
<summary> The suspend count </summary>
</member>
<member name="P:Baby.CollectionWithEvents.IsSuspended">
<summary> Gets a value indicating whether this instance is suspended. </summary>
<value>
<c> true </c>
if this instance is suspended; otherwise,
<c> false </c>
. </value>
</member>
<member name="M:Baby.CollectionWithEvents.#ctor">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:CollectionWithEvents" />
class. </summary>
</member>
<member name="E:Baby.CollectionWithEvents.Clearing">
<summary> Occurs when [clearing]. </summary>
</member>
<member name="E:Baby.CollectionWithEvents.Cleared">
<summary> Occurs when [cleared]. </summary>
</member>
<member name="E:Baby.CollectionWithEvents.Inserting">
<summary> Occurs when [inserting]. </summary>
</member>
<member name="E:Baby.CollectionWithEvents.Inserted">
<summary> Occurs when [inserted]. </summary>
</member>
<member name="E:Baby.CollectionWithEvents.Removing">
<summary> Occurs when [removing]. </summary>
</member>
<member name="E:Baby.CollectionWithEvents.Removed">
<summary> Occurs when [removed]. </summary>
</member>
<member name="M:Baby.CollectionWithEvents.SuspendEvents">
<summary> Suspends the events. </summary>
</member>
<member name="M:Baby.CollectionWithEvents.ResumeEvents">
<summary> Resumes the events. </summary>
</member>
<member name="M:Baby.CollectionWithEvents.OnClear">
<inheritdoc />
<summary> Performs additional custom processes when clearing the contents of the
<see cref="T:System.Collections.CollectionBase" />
instance. </summary>
</member>
<member name="M:Baby.CollectionWithEvents.OnClearComplete">
<inheritdoc />
<summary> Performs additional custom processes after clearing the contents of the
<see cref="T:System.Collections.CollectionBase" />
instance. </summary>
</member>
<member name="M:Baby.CollectionWithEvents.OnInsert(System.Int32,System.Object)">
<inheritdoc />
<summary> Performs additional custom processes before inserting a new element into the
<see cref="T:System.Collections.CollectionBase" />
instance. </summary>
<param name="index"> The zero-based index at which to insert
<paramref name="value" />
. </param>
<param name="value"> The new value of the element at
<paramref name="index" />
. </param>
</member>
<member name="M:Baby.CollectionWithEvents.OnInsertComplete(System.Int32,System.Object)">
<inheritdoc />
<summary> Performs additional custom processes after inserting a new element into the
<see cref="T:System.Collections.CollectionBase" />
instance. </summary>
<param name="index"> The zero-based index at which to insert
<paramref name="value" />
. </param>
<param name="value"> The new value of the element at
<paramref name="index" />
. </param>
</member>
<member name="M:Baby.CollectionWithEvents.OnRemove(System.Int32,System.Object)">
<inheritdoc />
<summary> Performs additional custom processes when removing an element from the
<see cref="T:System.Collections.CollectionBase" />
instance. </summary>
<param name="index"> The zero-based index at which
<paramref name="value" />
can be found. </param>
<param name="value"> The value of the element to remove from
<paramref name="index" />
. </param>
</member>
<member name="M:Baby.CollectionWithEvents.OnRemoveComplete(System.Int32,System.Object)">
<inheritdoc />
<summary> Performs additional custom processes after removing an element from the
<see cref="T:System.Collections.CollectionBase" />
instance. </summary>
<param name="index"> The zero-based index at which
<paramref name="value" />
can be found. </param>
<param name="value"> The value of the element to remove from
<paramref name="index" />
. </param>
</member>
<member name="M:Baby.CollectionWithEvents.IndexOf(System.Object)">
<summary> Determines the index of a specific item in the
<see cref="T:System.Collections.IList" />
. </summary>
<param name="value"> The object to locate in the
<see cref="T:System.Collections.IList" />
. </param>
<returns> The index of
<paramref name="value" />
if found in the list; otherwise, -1. </returns>
</member>
<member name="T:Baby.TabClosingEventArgs">
<inheritdoc />
<summary> </summary>
<seealso cref="T:System.EventArgs" />
</member>
<member name="P:Baby.TabClosingEventArgs.Item">
<summary> Gets or sets the item. </summary>
<value> The item. </value>
</member>
<member name="P:Baby.TabClosingEventArgs.Cancel">
<summary> Gets or sets a value indicating whether this
<see cref="T:Baby.TabClosingEventArgs" />
is cancel. </summary>
<value>
<c> true </c>
if cancel; otherwise,
<c> false </c>
. </value>
</member>
<member name="M:Baby.TabClosingEventArgs.#ctor(Baby.BrowserTabStripItem)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.TabStripItemClosingEventArgs" />
class. </summary>
<param name="item"> The item. </param>
</member>
<member name="T:Baby.TabItemChange">
<summary> </summary>
<param name="e"> The
<see cref="T:Baby.TabItemChangedEventArgs" />
instance containing the event data. </param>
</member>
<member name="T:Baby.TabItemChangedEventArgs">
<inheritdoc />
<summary> </summary>
<seealso cref="T:System.EventArgs" />
</member>
<member name="P:Baby.TabItemChangedEventArgs.ChangeType">
<summary> Gets the type of the change. </summary>
<value> The type of the change. </value>
</member>
<member name="P:Baby.TabItemChangedEventArgs.Item">
<summary> Gets the item. </summary>
<value> The item. </value>
</member>
<member name="M:Baby.TabItemChangedEventArgs.#ctor(Baby.BrowserTabStripItem,Baby.ChangeType)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:Baby.TabStripItemChangedEventArgs" />
class. </summary>
<param name="item"> The item. </param>
<param name="type"> The type. </param>
</member>
<member name="T:Baby.TabItemClosing">
<summary> </summary>
<param name="e"> The
<see cref="T:Baby.TabClosingEventArgs" />
instance containing the event data. </param>
</member>
<member name="T:Baby.IconNotFoundException">
<inheritdoc />
<summary> </summary>
<seealso cref="T:System.Exception" />
</member>
<member name="M:Baby.IconNotFoundException.#ctor(System.String,System.Int32)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:IconUtils.IconNotFoundException" />
class. </summary>
<param name="fileName"> Name of the file. </param>
<param name="index"> The index. </param>
</member>
<member name="T:Baby.UnableToExtractIconsException">
<inheritdoc />
<summary> </summary>
<seealso cref="T:System.Exception" />
</member>
<member name="M:Baby.UnableToExtractIconsException.#ctor(System.String,System.Int32,System.Int32)">
<inheritdoc />
<summary> Initializes a new instance of the
<see cref="T:IconUtils.UnableToExtractIconsException" />
class. </summary>
<param name="fileName"> Name of the file. </param>
<param name="firstIconIndex"> First index of the icon. </param>
<param name="iconCount"> The icon count. </param>
</member>
<member name="T:Baby.Extensions">
<summary> </summary>
</member>
<member name="M:Baby.Extensions.ToLogString(System.Exception,System.String)">
<summary> Converts to log string. </summary>
<param name="ex"> The ex. </param>
<param name="message"> The message. </param>
<returns> </returns>
</member>
<member name="M:Baby.Extensions.SplitPascal(System.String)">
<summary> The SplitPascal </summary>
<returns> The
<see cref="T:System.String" />
</returns>
<param name="text"> The text. </param>
<returns> </returns>
</member>
<member name="M:Baby.Extensions.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.Reflection">
<summary> </summary>
</member>
<member name="F:Baby.Reflection._constrcache">
<summary> The constructs cache </summary>
</member>
<member name="F:Baby.Reflection._getterscache">
<summary> The gets cache </summary>
</member>
<member name="F:Baby.Reflection._typeName">
<summary> The type name </summary>
</member>
<member name="F:Baby.Reflection._typeCache">
<summary> The type cache </summary>
</member>
<member name="F:Baby.Reflection.ShowReadOnlyProperties">
<summary> The show read only properties </summary>
</member>
<member name="F:Baby.Reflection.Instance">
<summary> The instance </summary>
</member>
<member name="M:Baby.Reflection.#ctor">
<summary> Prevents a default instance of the
<see cref="T:Baby.Reflection" />
class from being created. </summary>
</member>
<member name="M:Baby.Reflection.GetTypeAssemblyName(System.Type)">
<summary> Gets the name of the type assembly. </summary>
<param name="t"> The t. </param>
<returns> </returns>
</member>
<member name="M:Baby.Reflection.GetTypeFromCache(System.String)">
<summary> Gets the type from cache. </summary>
<param name="typename"> The typename. </param>
<returns> </returns>
</member>
<member name="M:Baby.Reflection.FastCreateInstance(System.Type)">
<summary> Fasts the create instance. </summary>
<param name="objtype"> The object type. </param>
<returns> </returns>
<exception cref="P:Baby.ErrorDialog.Exception"> </exception>
</member>
<member name="M:Baby.Reflection.CreateSetField(System.Type,System.Reflection.FieldInfo)">
<summary> Creates the set field. </summary>
<param name="type"> The type. </param>
<param name="fieldInfo"> The field information. </param>
<returns> </returns>
</member>
<member name="M:Baby.Reflection.CreateSetMethod(System.Type,System.Reflection.PropertyInfo)">
<summary> Creates the set method. </summary>
<param name="type"> The type. </param>
<param name="propertyInfo"> The property information. </param>
<returns> </returns>
</member>
<member name="M:Baby.Reflection.CreateGetField(System.Type,System.Reflection.FieldInfo)">
<summary> Creates the get field. </summary>
<param name="type"> The type. </param>
<param name="fieldInfo"> The field information. </param>
<returns> </returns>
</member>
<member name="M:Baby.Reflection.CreateGetMethod(System.Type,System.Reflection.PropertyInfo)">
<summary> Creates the get method. </summary>
<param name="type"> The type. </param>
<param name="propertyInfo"> The property information. </param>
<returns> </returns>
</member>
<member name="M:Baby.Reflection.GetGetters(System.Type)">
<summary> Gets the getters. </summary>
<param name="type"> The type. </param>
<returns> </returns>
</member>
<member name="T:Baby.Reflection.CreateObject">
<summary> </summary>
<returns> </returns>
</member>
<member name="T:Baby.SafeDictionary`2">
<summary> </summary>
<typeparam name="TKey"> The type of the key. </typeparam>
<typeparam name="TValue"> The type of the value. </typeparam>
</member>
<member name="F:Baby.SafeDictionary`2._dictionary">
<summary> The dictionary </summary>
</member>
<member name="F:Baby.SafeDictionary`2._padlock">
<summary> The padlock </summary>
</member>
<member name="P:Baby.SafeDictionary`2.Item(`0)">
<summary> Gets or sets the
<see cref="!:TValue" />
with the specified key. </summary>
<value> The
<see cref="!:TValue" />
. </value>
<param name="key"> The key. </param>
<returns> </returns>
</member>
<member name="M:Baby.SafeDictionary`2.#ctor(System.Int32)">
<summary> Initializes a new instance of the
<see cref="T:Baby.SafeDictionary`2" />
class. </summary>
<param name="capacity"> The capacity. </param>
</member>
<member name="M:Baby.SafeDictionary`2.#ctor">
<summary> Initializes a new instance of the
<see cref="T:Baby.SafeDictionary`2" />
class. </summary>
</member>
<member name="M:Baby.SafeDictionary`2.TryGetValue(`0,`1@)">
<summary> Tries the get value. </summary>
<param name="key"> The key. </param>
<param name="value"> The value. </param>
<returns> </returns>
</member>
<member name="M:Baby.SafeDictionary`2.Add(`0,`1)">
<summary> Adds the specified key. </summary>
<param name="key"> The key. </param>
<param name="value"> The value. </param>
</member>
<member name="T:Baby.ShellFileInfo">
<summary> Contains information about a file object. </summary>
</member>
<member name="F:Baby.ShellFileInfo.Attributes">
<summary> Array of values that indicates the attributes of the file object. For information about
these values, see the IShellFolder::GetAttributesOf method. </summary>
</member>
<member name="F:Baby.ShellFileInfo.IconHandle">
<summary> Handle to the icon that represents the file. You are responsible for destroying this
handle with DestroyIcon when you no longer need it. </summary>
</member>
<member name="F:Baby.ShellFileInfo.IconIndex">
<summary> Index of the icon image within the system image list. </summary>
</member>
<member name="F:Baby.ShellFileInfo.DisplayName">
<summary> String that contains the name of the file as it appears in the Microsoft Windows Shell,
or the path and file name of the file that contains the icon representing the file. </summary>
</member>
<member name="F:Baby.ShellFileInfo.TypeName">
<summary> String that describes the type of file. </summary>
</member>
<member name="T:Baby.UrlDecoder">
<summary> </summary>
</member>
<member name="F:Baby.UrlDecoder._bufferSize">
<summary> The buffer size </summary>
</member>
<member name="F:Baby.UrlDecoder._byteBuffer">
<summary> The byte buffer </summary>
</member>
<member name="F:Baby.UrlDecoder._charBuffer">
<summary> The character buffer </summary>
</member>
<member name="F:Baby.UrlDecoder._encoding">
<summary> The encoding </summary>
</member>
<member name="F:Baby.UrlDecoder._numBytes">
<summary> The number bytes </summary>
</member>
<member name="F:Baby.UrlDecoder._numChars">
<summary> The number chars </summary>
</member>
<member name="P:Baby.UrlDecoder.ForFilePaths">
<summary> Gets or sets a value indicating whether [for file paths]. </summary>
<value>
<c> true </c>
if [for file paths]; otherwise,
<c> false </c>
. </value>
</member>
<member name="M:Baby.UrlDecoder.#ctor(System.Int32,System.Text.Encoding)">
<summary> Initializes a new instance of the
<see cref="T:Baby.UrlDecoder" />
class. </summary>
<param name="bufferSize"> Size of the buffer. </param>
<param name="encoding"> The encoding. </param>
</member>
<member name="M:Baby.UrlDecoder.FlushBytes(System.Boolean)">
<summary> Flushes the bytes. </summary>
<param name="checkChar"> if set to
<c> true </c>
[check character]. </param>
</member>
<member name="M:Baby.UrlDecoder.AddByte(System.Byte)">
<summary> Adds the byte. </summary>
<param name="b"> The b. </param>
</member>
<member name="M:Baby.UrlDecoder.AddChar(System.Char,System.Boolean)">
<summary> Adds the character. </summary>
<param name="ch"> The ch. </param>
<param name="checkChar"> if set to
<c> true </c>
[check character]. </param>
</member>
<member name="M:Baby.UrlDecoder.AddString(System.String)">
<summary> Adds the string. </summary>
<param name="str"> The string. </param>
</member>
<member name="M:Baby.UrlDecoder.GetString">
<summary> Gets the string. </summary>
<returns> </returns>
</member>
<member name="T:Baby.Program">
<summary> </summary>
</member>
<member name="M:Baby.Program.Main">
<summary> The main entry point for the application. </summary>
</member>
<member name="T:Baby.Properties.Resources">
<summary> A strongly-typed resource class, for looking up localized strings, etc. </summary>
</member>
<member name="P:Baby.Properties.Resources.ResourceManager">
<summary> Returns the cached ResourceManager instance used by this class. </summary>
</member>
<member name="P:Baby.Properties.Resources.Culture">
<summary> Overrides the current thread's CurrentUICulture property for all resource lookups using
this strongly typed resource class. </summary>
</member>
<member name="P:Baby.Properties.Resources._1">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources._2">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources._3">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources._4">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources._5">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources._6">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.Baby">
<summary> Looks up a localized resource of type System.Drawing.Icon similar to (Icon). </summary>
</member>
<member name="P:Baby.Properties.Resources.BabyBrowser">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.blankpage">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.CalculatorItem">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.CalendarItem">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.ChromeItem">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.ClockItem">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.CloseItem">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.ControlPanelItem">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.DialogBackButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.DialogForwardButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.DialogHomeButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.DocumentaionItem">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.EdgeItem">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.EpaSkew">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.error1">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.error2">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.ExitItem">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.FileItem">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.FirefoxItem">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.FolderItem">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.logo3">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.MapItem">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.MediaPlayerItem">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.MenulLabel">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.MenulLabel1">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.Message">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.OneDriveItem">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.OtherItem">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.PrintItem">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.RefreshItem">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.SaveItem">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.search">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.SearchCancelButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.SearchDownloadButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.SearchHomeButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.SearchNextButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.SearchPanelHomeButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.SearchPanelLookUpButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.SearchPreviousButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.SearchRefreshButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.TaskManagerItem">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.ToolsItem">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.WebCancelButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.WebChromeButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.WebCloseButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.WebDownloadButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.WebEdgeButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.WebFirefoxButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.WebGoButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.WebHomeButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.WebLookUpButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.WebMenuButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.WebNextButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.WebPreviousButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.WebRefreshButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.WebSpfxButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.WebStopButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="P:Baby.Properties.Resources.WebToolButton">
<summary> Looks up a localized resource of type System.Drawing.Bitmap. </summary>
</member>
<member name="T:Baby.DataSchema">
<summary> </summary>
</member>
<member name="P:Baby.DataSchema.Info">
<summary> Gets or sets the information. </summary>
<value> The information. </value>
</member>
<member name="P:Baby.DataSchema.Name">
<summary> Gets or sets the name. </summary>
<value> The name. </value>
</member>
<member name="T:Baby.Formatter">
<summary> </summary>
</member>
<member name="F:Baby.Formatter.Indent">
<summary> The indent </summary>
</member>
<member name="M:Baby.Formatter.AppendIndent(System.Text.StringBuilder,System.Int32)">
<summary> Appends the indent. </summary>
<param name="sb"> The sb. </param>
<param name="count"> The count. </param>
</member>
<member name="M:Baby.Formatter.IsEscaped(System.Text.StringBuilder,System.Int32)">
<summary> Determines whether the specified sb is escaped. </summary>
<param name="sb"> The sb. </param>
<param name="index"> The index. </param>
<returns>
<c> true </c>
if the specified sb is escaped; otherwise,
<c> false </c>
. </returns>
</member>
<member name="M:Baby.Formatter.PrettyPrint(System.String)">
<summary> Pretties the print. </summary>
<param name="input"> The input. </param>
<returns> </returns>
</member>
<member name="T:Baby.Getters">
<summary> </summary>
</member>
<member name="F:Baby.Getters.GetterCallback">
<summary> The getter </summary>
</member>
<member name="F:Baby.Getters.Name">
<summary> The name </summary>
</member>
<member name="F:Baby.Getters.PropertyType">
<summary> The property type </summary>
</member>
<member name="T:Baby.Json">
<summary> </summary>
</member>
<member name="F:Baby.Json._params">
<summary> The parameters </summary>
</member>
<member name="F:Baby.Json._propertycache">
<summary> The property cache </summary>
</member>
<member name="F:Baby.Json.Parameters">
<summary> You can set these paramters globally for all calls </summary>
</member>
<member name="F:Baby.Json._usingglobals">
<summary> The using globals </summary>
</member>
<member name="F:Baby.Json.Instance">
<summary> The instance </summary>
</member>
<member name="M:Baby.Json.#ctor">
<summary> Prevents a default instance of the
<see cref="T:Baby.Json" />
class from being created. </summary>
</member>
<member name="M:Baby.Json.ToJson(System.Object)">
<summary> Converts to json. </summary>
<param name="obj"> The object. </param>
<returns> </returns>
</member>
<member name="M:Baby.Json.ToJson(System.Object,Baby.JsonParameters)">
<summary> Converts to json. </summary>
<param name="obj"> The object. </param>
<param name="param"> The parameter. </param>
<returns> </returns>
</member>
<member name="M:Baby.Json.Parse(System.String)">
<summary> Parses the specified json. </summary>
<param name="json"> The json. </param>
<returns> </returns>
</member>
<member name="M:Baby.Json.ToObject``1(System.String)">
<summary> Converts to object. </summary>
<typeparam name="T"> </typeparam>
<param name="json"> The json. </param>
<returns> </returns>
</member>
<member name="M:Baby.Json.ToObject(System.String)">
<summary> Converts to object. </summary>
<param name="json"> The json. </param>
<returns> </returns>
</member>
<member name="M:Baby.Json.ToObject(System.String,System.Type)">
<summary> Converts to object. </summary>
<param name="json"> The json. </param>
<param name="type"> The type. </param>
<returns> </returns>
</member>
<member name="M:Baby.Json.Beautify(System.String)">
<summary> Beautifies the specified input. </summary>
<param name="input"> The input. </param>
<returns> </returns>
</member>
<member name="M:Baby.Json.FillObject(System.Object,System.String)">
<summary> Fills the object. </summary>
<param name="input"> The input. </param>
<param name="json"> The json. </param>
<returns> </returns>
</member>
<member name="M:Baby.Json.DeepCopy(System.Object)">
<summary> Deeps the copy. </summary>
<param name="obj"> The object. </param>
<returns> </returns>
</member>
<member name="M:Baby.Json.DeepCopy``1(``0)">
<summary> Deeps the copy. </summary>
<typeparam name="T"> </typeparam>
<param name="obj"> The object. </param>
<returns> </returns>
</member>
<member name="M:Baby.Json.GetProperties(System.Type,System.String)">
<summary> Get properties of the specified type. </summary>
<param name="type"> The type. </param>
<param name="typename"> The typename. </param>
<returns> </returns>
</member>
<member name="M:Baby.Json.CreateMyProp(System.Type,System.String)">
<summary> Creates my property. </summary>
<param name="t"> The t. </param>
<param name="name"> The name. </param>
<returns> </returns>
</member>
<member name="M:Baby.Json.ChangeType(System.Object,System.Type)">
<summary> Changes the type. </summary>
<param name="value"> The value. </param>
<param name="conversionType"> Type of the conversion. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.Json.ParseDictionary(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object},System.Type,System.Object)">
<summary> Parses the dictionary. </summary>
<param name="d"> The d. </param>
<param name="globaltypes"> The globaltypes. </param>
<param name="type"> The type. </param>
<param name="input"> The input. </param>
<returns> </returns>
<exception cref="T:System.Exception"> Cannot determine type </exception>
</member>
<member
  name="M:Baby.Json.ProcessMap(System.Object,Baby.SafeDictionary{System.String,Baby.PropInfo},System.Collections.Generic.Dictionary{System.String,System.Object})">
<summary> Processes the map. </summary>
<param name="obj"> The object. </param>
<param name="props"> The props. </param>
<param name="dic"> The dic. </param>
</member>
<member name="M:Baby.Json.CreateLong(System.String)">
<summary> Creates the long. </summary>
<param name="s"> The s. </param>
<returns> </returns>
</member>
<member name="M:Baby.Json.CreateEnum(System.Type,System.String)">
<summary> Creates the enum. </summary>
<param name="pt"> The pt. </param>
<param name="v"> The v. </param>
<returns> </returns>
</member>
<member name="M:Baby.Json.CreateGuid(System.String)">
<summary> Creates the unique identifier. </summary>
<param name="s"> The s. </param>
<returns> </returns>
</member>
<member name="M:Baby.Json.CreateDateTime(System.String)">
<summary> Creates the date time. </summary>
<param name="value"> The value. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.Json.CreateArray(System.Collections.ArrayList,System.Type,System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
<summary> Creates the array. </summary>
<param name="data"> The data. </param>
<param name="pt"> The pt. </param>
<param name="bt"> The bt. </param>
<param name="globalTypes"> The global types. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.Json.CreateGenericList(System.Collections.ArrayList,System.Type,System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
<summary> Creates the generic list. </summary>
<param name="data"> The data. </param>
<param name="pt"> The pt. </param>
<param name="bt"> The bt. </param>
<param name="globalTypes"> The global types. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.Json.CreateStringKeyDictionary(System.Collections.Generic.Dictionary{System.String,System.Object},System.Type,System.Type[],System.Collections.Generic.Dictionary{System.String,System.Object})">
<summary> Creates the string key dictionary. </summary>
<param name="reader"> The reader. </param>
<param name="pt"> The pt. </param>
<param name="types"> The types. </param>
<param name="globalTypes"> The global types. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.Json.CreateDictionary(System.Collections.ArrayList,System.Type,System.Type[],System.Collections.Generic.Dictionary{System.String,System.Object})">
<summary> Creates the dictionary. </summary>
<param name="reader"> The reader. </param>
<param name="pt"> The pt. </param>
<param name="types"> The types. </param>
<param name="globalTypes"> The global types. </param>
<returns> </returns>
</member>
<member name="M:Baby.Json.GetChangeType(System.Type)">
<summary> Gets the type of the change. </summary>
<param name="conversionType"> Type of the conversion. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.Json.CreateDataset(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
<summary> Creates the dataset. </summary>
<param name="reader"> The reader. </param>
<param name="globalTypes"> The global types. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.Json.ReadSchema(System.Collections.Generic.Dictionary{System.String,System.Object},System.Data.DataSet,System.Collections.Generic.Dictionary{System.String,System.Object})">
<summary> Reads the schema. </summary>
<param name="reader"> The reader. </param>
<param name="ds"> The ds. </param>
<param name="globalTypes"> The global types. </param>
</member>
<member name="M:Baby.Json.ReadDataTable(System.Collections.ArrayList,System.Data.DataTable)">
<summary> Reads the data table. </summary>
<param name="rows"> The rows. </param>
<param name="dt"> The dt. </param>
</member>
<member
  name="M:Baby.Json.CreateDataTable(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
<summary> Creates the data table. </summary>
<param name="reader"> The reader. </param>
<param name="globalTypes"> The global types. </param>
<returns> </returns>
</member>
<member name="T:Baby.JsonParameters">
<summary> </summary>
</member>
<member name="F:Baby.JsonParameters.EnableAnonymousTypes">
<summary> Anonymous types have read only properties </summary>
</member>
<member name="F:Baby.JsonParameters.IgnoreCaseOnDeserialize">
<summary> </summary>
</member>
<member name="F:Baby.JsonParameters.SerializeNullValues">
<summary> Serialize null values to the output (default = True) </summary>
</member>
<member name="F:Baby.JsonParameters.ShowReadOnlyProperties">
<summary> Show the readonly properties of types in the output (default = False) </summary>
</member>
<member name="F:Baby.JsonParameters.UseExtensions">
<summary> Enable fastJSON extensions $types, $type, $map (default = True) </summary>
</member>
<member name="F:Baby.JsonParameters.UseFastGuid">
<summary> Use the fast GUID format (default = True) </summary>
</member>
<member name="F:Baby.JsonParameters.UseOptimizedDatasetSchema">
<summary> Use the optimized fast Dataset Schema format (dfault = True) </summary>
</member>
<member name="F:Baby.JsonParameters.UseUtcDateTime">
<summary> Use the UTC date format (default = True) </summary>
</member>
<member name="F:Baby.JsonParameters.UsingGlobalTypes">
<summary> Use the $types extension to optimise the output json (default = True) </summary>
</member>
<member name="T:Baby.JsonParser">
<summary> This class encodes and decodes JSON strings. Spec. details, see http://www.json.org/ JSON
uses Arrays and Objects. These correspond here to the data types ArrayList and Hashtable. All
numbers are parsed to doubles. </summary>
</member>
<member name="F:Baby.JsonParser._ignorecase">
<summary> The ignore case </summary>
</member>
<member name="F:Baby.JsonParser._index">
<summary> The index </summary>
</member>
<member name="F:Baby.JsonParser._json">
<summary> The json </summary>
</member>
<member name="F:Baby.JsonParser._lookAheadToken">
<summary> The look ahead token </summary>
</member>
<member name="F:Baby.JsonParser._s">
<summary> The s </summary>
</member>
<member name="M:Baby.JsonParser.#ctor(System.String,System.Boolean)">
<summary> Initializes a new instance of the
<see cref="T:Baby.JsonParser" />
class. </summary>
<param name="json"> The json. </param>
<param name="ignorecase"> if set to
<c> true </c>
[ignore case]. </param>
</member>
<member name="M:Baby.JsonParser.Decode">
<summary> Decodes this instance. </summary>
<returns> </returns>
</member>
<member name="M:Baby.JsonParser.ParseObject">
<summary> Parses the object. </summary>
<returns> </returns>
<exception cref="P:Baby.ErrorDialog.Exception"> Expected colon at index " + _index </exception>
</member>
<member name="M:Baby.JsonParser.ParseArray">
<summary> Parses the array. </summary>
<returns> </returns>
</member>
<member name="M:Baby.JsonParser.ParseValue">
<summary> Parses the value. </summary>
<returns> </returns>
</member>
<member name="M:Baby.JsonParser.ParseString">
<summary> Parses the string. </summary>
<returns> </returns>
</member>
<member name="M:Baby.JsonParser.ParseSingleChar(System.Char,System.UInt32)">
<summary> Parses the single character. </summary>
<param name="c1"> The c1. </param>
<param name="multiplier"> The multiplier. </param>
<returns> </returns>
</member>
<member name="M:Baby.JsonParser.ParseUnicode(System.Char,System.Char,System.Char,System.Char)">
<summary> Parses the unicode. </summary>
<param name="c1"> The c1. </param>
<param name="c2"> The c2. </param>
<param name="c3"> The c3. </param>
<param name="c4"> The c4. </param>
<returns> </returns>
</member>
<member name="M:Baby.JsonParser.ParseNumber">
<summary> Parses the number. </summary>
<returns> </returns>
</member>
<member name="M:Baby.JsonParser.LookAhead">
<summary> Looks the ahead. </summary>
<returns> </returns>
</member>
<member name="M:Baby.JsonParser.ConsumeToken">
<summary> Consumes the token. </summary>
</member>
<member name="M:Baby.JsonParser.NextToken">
<summary> Nexts the token. </summary>
<returns> </returns>
</member>
<member name="M:Baby.JsonParser.NextTokenCore">
<summary> Nexts the token core. </summary>
<returns> </returns>
<exception cref="P:Baby.ErrorDialog.Exception"> Reached end of string unexpectedly or Could not
find token at index " + --_index </exception>
</member>
<member name="T:Baby.JsonSerializer">
<summary> </summary>
</member>
<member name="F:Baby.JsonSerializer._currentDepth">
<summary> The current depth </summary>
</member>
<member name="F:Baby.JsonSerializer._globalTypes">
<summary> The global types </summary>
</member>
<member name="F:Baby.JsonSerializer._maxDepth">
<summary> The maximum depth </summary>
</member>
<member name="F:Baby.JsonSerializer._output">
<summary> The output </summary>
</member>
<member name="F:Baby.JsonSerializer._params">
<summary> The parameters </summary>
</member>
<member name="F:Baby.JsonSerializer._typesWritten">
<summary> The types written </summary>
</member>
<member name="M:Baby.JsonSerializer.#ctor(Baby.JsonParameters)">
<summary> Initializes a new instance of the
<see cref="T:Baby.JsonSerializer" />
class. </summary>
<param name="param"> The parameter. </param>
</member>
<member name="M:Baby.JsonSerializer.ConvertToJson(System.Object)">
<summary> Converts to json. </summary>
<param name="obj"> The object. </param>
<returns> </returns>
</member>
<member name="M:Baby.JsonSerializer.WriteValue(System.Object)">
<summary> Writes the value. </summary>
<param name="obj"> The object. </param>
</member>
<member name="M:Baby.JsonSerializer.WriteEnum(System.Enum)">
<summary> Writes the enum. </summary>
<param name="e"> The e. </param>
</member>
<member name="M:Baby.JsonSerializer.WriteGuid(System.Guid)">
<summary> Writes the unique identifier. </summary>
<param name="g"> The g. </param>
</member>
<member name="M:Baby.JsonSerializer.WriteBytes(System.Byte[])">
<summary> Writes the bytes. </summary>
<param name="bytes"> The bytes. </param>
</member>
<member name="M:Baby.JsonSerializer.WriteDateTime(System.DateTime)">
<summary> Writes the date time. </summary>
<param name="dateTime"> The date time. </param>
</member>
<member name="M:Baby.JsonSerializer.GetSchema(System.Data.DataTable)">
<summary> Gets the schema. </summary>
<param name="ds"> The ds. </param>
<returns> </returns>
</member>
<member name="M:Baby.JsonSerializer.GetSchema(System.Data.DataSet)">
<summary> Gets the schema. </summary>
<param name="ds"> The ds. </param>
<returns> </returns>
</member>
<member name="M:Baby.JsonSerializer.GetXmlSchema(System.Data.DataTable)">
<summary> Gets the XML schema. </summary>
<param name="dt"> The dt. </param>
<returns> </returns>
</member>
<member name="M:Baby.JsonSerializer.WriteDataset(System.Data.DataSet)">
<summary> Writes the dataset. </summary>
<param name="ds"> The ds. </param>
</member>
<member name="M:Baby.JsonSerializer.WriteDataTableData(System.Data.DataTable)">
<summary> Writes the data table data. </summary>
<param name="table"> The table. </param>
</member>
<member name="M:Baby.JsonSerializer.WriteDataTable(System.Data.DataTable)">
<summary> Writes the data table. </summary>
<param name="dt"> The dt. </param>
</member>
<member name="M:Baby.JsonSerializer.WriteObject(System.Object)">
<summary> Writes the object. </summary>
<param name="obj"> The object. </param>
<exception cref="P:Baby.ErrorDialog.Exception"> Serializer encountered maximum depth of " +
_maxDepth </exception>
</member>
<member name="M:Baby.JsonSerializer.WritePairFast(System.String,System.String)">
<summary> Writes the pair fast. </summary>
<param name="name"> The name. </param>
<param name="value"> The value. </param>
</member>
<member name="M:Baby.JsonSerializer.WritePair(System.String,System.Object)">
<summary> Writes the pair. </summary>
<param name="name"> The name. </param>
<param name="value"> The value. </param>
</member>
<member name="M:Baby.JsonSerializer.WriteArray(System.Collections.IEnumerable)">
<summary> Writes the array. </summary>
<param name="array"> The array. </param>
</member>
<member name="M:Baby.JsonSerializer.WriteStringDictionary(System.Collections.IDictionary)">
<summary> Writes the string dictionary. </summary>
<param name="dic"> The dic. </param>
</member>
<member name="M:Baby.JsonSerializer.WriteDictionary(System.Collections.IDictionary)">
<summary> Writes the dictionary. </summary>
<param name="dic"> The dic. </param>
</member>
<member name="M:Baby.JsonSerializer.WriteStringFast(System.String)">
<summary> Writes the string fast. </summary>
<param name="s"> The s. </param>
</member>
<member name="M:Baby.JsonSerializer.WriteString(System.String)">
<summary> Writes the string. </summary>
<param name="s"> The s. </param>
</member>
<member name="T:Baby.PropInfo">
<summary> </summary>
</member>
<member name="F:Baby.PropInfo.Bt">
<summary> The bt </summary>
</member>
<member name="F:Baby.PropInfo.CanWrite">
<summary> The can write </summary>
</member>
<member name="F:Baby.PropInfo.ChangeType">
<summary> The change type </summary>
</member>
<member name="F:Baby.PropInfo.Filled">
<summary> The filled </summary>
</member>
<member name="F:Baby.PropInfo.GenericTypes">
<summary> The generic types </summary>
</member>
<member name="F:Baby.PropInfo.GetterCallback">
<summary> The getter </summary>
</member>
<member name="F:Baby.PropInfo.IsArray">
<summary> The is array </summary>
</member>
<member name="F:Baby.PropInfo.IsBool">
<summary> The is bool </summary>
</member>
<member name="F:Baby.PropInfo.IsByteArray">
<summary> The is byte array </summary>
</member>
<member name="F:Baby.PropInfo.IsClass">
<summary> The is class </summary>
</member>
<member name="F:Baby.PropInfo.IsDataSet">
<summary> The is data set </summary>
</member>
<member name="F:Baby.PropInfo.IsDataTable">
<summary> The is data table </summary>
</member>
<member name="F:Baby.PropInfo.IsDateTime">
<summary> The is date time </summary>
</member>
<member name="F:Baby.PropInfo.IsDictionary">
<summary> The is dictionary </summary>
</member>
<member name="F:Baby.PropInfo.IsEnum">
<summary> The is enum </summary>
</member>
<member name="F:Baby.PropInfo.IsGenericType">
<summary> The is generic type </summary>
</member>
<member name="F:Baby.PropInfo.IsGuid">
<summary> The is unique identifier </summary>
</member>
<member name="F:Baby.PropInfo.IsHashtable">
<summary> The is hashtable </summary>
</member>
<member name="F:Baby.PropInfo.IsInt">
<summary> The is int </summary>
</member>
<member name="F:Baby.PropInfo.IsLong">
<summary> The is long </summary>
</member>
<member name="F:Baby.PropInfo.IsString">
<summary> The is string </summary>
</member>
<member name="F:Baby.PropInfo.IsStringDictionary">
<summary> The is string dictionary </summary>
</member>
<member name="F:Baby.PropInfo.IsValueType">
<summary> The is value type </summary>
</member>
<member name="F:Baby.PropInfo.Name">
<summary> The name </summary>
</member>
<member name="F:Baby.PropInfo.Pt">
<summary> The pt </summary>
</member>
<member name="F:Baby.PropInfo.SetterCallback">
<summary> The setter </summary>
</member>
<member name="T:Baby.IconUtils">
<summary> </summary>
</member>
<member name="M:Baby.IconUtils.GetFileIcon(System.String,Baby.IconSize)">
<summary> Gets the file icon. </summary>
<param name="name"> The name. </param>
<param name="size"> The size. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.IconUtils.ExtractEx(System.String,System.Collections.Generic.List{System.Drawing.Icon},System.Collections.Generic.List{System.Drawing.Icon},System.Int32,System.Int32)">
<summary> Extracts the ex. </summary>
<param name="fileName"> Name of the file. </param>
<param name="largeIcons"> The large icons. </param>
<param name="smallIcons"> The small icons. </param>
<param name="firstIconIndex"> First index of the icon. </param>
<param name="iconCount"> The icon count. </param>
<exception cref="T:Baby.UnableToExtractIconsException"> </exception>
</member>
<member name="M:Baby.IconUtils.ExtractEx(System.String,Baby.IconSize,System.Int32,System.Int32)">
<summary> Extracts the ex. </summary>
<param name="fileName"> Name of the file. </param>
<param name="size"> The size. </param>
<param name="firstIconIndex"> First index of the icon. </param>
<param name="iconCount"> The icon count. </param>
<returns> </returns>
<exception cref="T:System.ArgumentOutOfRangeException"> size </exception>
</member>
<member
  name="M:Baby.IconUtils.Extract(System.String,System.Collections.Generic.List{System.Drawing.Icon},System.Collections.Generic.List{System.Drawing.Icon})">
<summary> Extracts the specified file name. </summary>
<param name="fileName"> Name of the file. </param>
<param name="largeIcons"> The large icons. </param>
<param name="smallIcons"> The small icons. </param>
</member>
<member name="M:Baby.IconUtils.Extract(System.String,Baby.IconSize)">
<summary> Extracts the specified file name. </summary>
<param name="fileName"> Name of the file. </param>
<param name="size"> The size. </param>
<returns> </returns>
</member>
<member name="M:Baby.IconUtils.ExtractOne(System.String,System.Int32,Baby.IconSize)">
<summary> Extracts the one. </summary>
<param name="fileName"> Name of the file. </param>
<param name="index"> The index. </param>
<param name="size"> The size. </param>
<returns> </returns>
<exception cref="T:Baby.IconNotFoundException"> </exception>
</member>
<member
  name="M:Baby.IconUtils.ExtractOne(System.String,System.Int32,System.Drawing.Icon@,System.Drawing.Icon@)">
<summary> Extracts the one. </summary>
<param name="fileName"> Name of the file. </param>
<param name="index"> The index. </param>
<param name="largeIcon"> The large icon. </param>
<param name="smallIcon"> The small icon. </param>
<exception cref="T:Baby.IconNotFoundException"> </exception>
</member>
<member name="M:Baby.IconUtils.IconFromExtension(System.String,Baby.IconSize)">
<summary> Icons from extension. </summary>
<param name="extension"> The extension. </param>
<param name="size"> The size. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.IconUtils.ExtractInformationFromRegistryString(System.String,System.String@,System.Int32@)">
<summary> Parse strings in registry who contains the name of the icon and the index of the icon an
return both parts. </summary>
<param name="regString"> The full string in the form "path,index" as found in registry. </param>
<param name="fileName"> The "path" part of the string. </param>
<param name="index"> The "index" part of the string. </param>
<exception cref="T:System.ArgumentNullException"> regString </exception>
<exception cref="T:System.ArgumentException"> The string should not be empty. - regString </exception>
</member>
<member
  name="M:Baby.IconUtils.ExtractIconEx(System.String,System.Int32,System.IntPtr[],System.IntPtr[],System.Int32)">
<summary> Creates an array of handles to large or small icons extracted from the specified
executable file, dynamic-link library (DLL), or icon file. </summary>
<param name="lpszFile"> Name of an executable file, DLL, or icon file from which icons will be
extracted. </param>
<param name="nIconIndex">
<para> Specifies the zero-based index of the first icon to extract. For example, if this value is
zero, the function extracts the first icon in the specified file. </para>
<para> If this value is �1 and
<paramref name="phiconLarge" />
and
<paramref name="phiconSmall" />
are both NULL, the function returns the total number of icons in the specified file. If the file is
an executable file or DLL, the return value is the number of RT_GROUP_ICON resources. If the file
is an .ico file, the return value is 1. </para>
<para> Windows 95/98/Me, Windows NT 4.0 and later: If this value is a negative number and either
<paramref name="phiconLarge" />
or
<paramref name="phiconSmall" />
is not NULL, the function begins by extracting the icon whose resource identifier is equal to the
absolute value of
<paramref name="nIconIndex" />
. For example, use -3 to extract the icon whose resource identifier is 3. </para>
</param>
<param name="phIconLarge"> An array of icon handles that receives handles to the large icons
extracted from the file. If this parameter is NULL, no large icons are extracted from the file. </param>
<param name="phIconSmall"> An array of icon handles that receives handles to the small icons
extracted from the file. If this parameter is NULL, no small icons are extracted from the file. </param>
<param name="nIcons"> Specifies the number of icons to extract from the file. </param>
<returns> If the
<paramref name="nIconIndex" />
parameter is -1, the
<paramref name="phIconLarge" />
parameter is NULL, and the
<paramref name="phiconSmall" />
parameter is NULL, then the return value is the number of icons contained in the specified file.
Otherwise, the return value is the number of icons successfully extracted from the file. </returns>
</member>
<member
  name="M:Baby.IconUtils.SHGetFileInfo(System.String,System.Int32,Baby.ShellFileInfo@,System.Int32,Baby.InfoFlags)">
<summary> Shes the get file information. </summary>
<param name="pszPath"> The PSZ path. </param>
<param name="dwFileAttributes"> The dw file attributes. </param>
<param name="psfi"> The psfi. </param>
<param name="cbFileInfo"> The cb file information. </param>
<param name="uFlags"> The u flags. </param>
<returns> </returns>
</member>
<member name="M:Baby.IconUtils.GetIconsCountInFile(System.String)">
<summary> Get the number of icons in the specified file. </summary>
<param name="fileName"> Full path of the file to look for. </param>
<returns> </returns>
</member>
<member name="T:Baby.ThrowIf">
<summary> </summary>
</member>
<member name="M:Baby.ThrowIf.NullOrEmpty(System.String,System.String)">
<summary> Determines whether the specified string argument is null or empty. </summary>
<param name="argument"> The string argument. </param>
<param name="paramName"> The name of the string argument. </param>
<exception cref="T:System.ArgumentNullException"> </exception>
</member>
<member name="M:Baby.ThrowIf.Null(System.Object,System.String)">
<summary> Nulls the specified argument. </summary>
<param name="argument"> The argument. </param>
<param name="paramName"> Name of the parameter. </param>
<exception cref="T:System.ArgumentNullException"> </exception>
</member>
<member name="M:Baby.ThrowIf.Empty(System.Object,System.String)">
<summary> Empty throws exception if 'argument' is null. </summary>
<param name="argument"> The argument. </param>
<param name="paramName"> Name of the parameter. </param>
<exception cref="T:System.ArgumentException"> </exception>
<exception cref="T:System.ArgumentNullException"> ArgumentNullException </exception>
</member>
<member name="M:Baby.ThrowIf.NullOrEmpty(System.Drawing.Color,System.String)">
<summary> Nulls the specified argument. </summary>
<param name="argument"> The argument. </param>
<param name="paramName"> Name of the parameter. </param>
<exception cref="T:System.ArgumentNullException"> </exception>
</member>
<member
  name="M:Baby.ThrowIf.NoElements``1(System.Collections.Generic.IEnumerable{``0},System.String)">
<summary> None throws exception if 'argument' has no elements. </summary>
<typeparam name="T"> </typeparam>
<param name="argument"> The argument. </param>
<param name="paramName"> Name of the parameter. </param>
<exception cref="T:System.ArgumentNullException"> </exception>
</member>
<member name="M:Baby.ThrowIf.NoData(System.ComponentModel.IListSource,System.String)">
<summary> Noes the data. </summary>
<param name="argument"> The argument. </param>
<param name="paramName"> Name of the parameter. </param>
<exception cref="T:System.ArgumentNullException"> </exception>
</member>
<member name="M:Baby.ThrowIf.NotFile(System.String,System.String)">
<summary> Nulls the specified argument. </summary>
<param name="argument"> The argument. </param>
<param name="paramName"> Name of the parameter. </param>
<exception cref="T:System.ArgumentNullException"> </exception>
</member>
<member name="M:Baby.ThrowIf.NotEnum(System.Enum,System.String)">
<summary> Throws exception if 'argument' </summary>
<param name="argument"> The argument. </param>
<param name="paramName"> Name of the parameter. </param>
<exception cref="T:System.ArgumentNullException"> </exception>
</member>
<member name="M:Baby.ThrowIf.NotDateTime(System.DateTime,System.String)">
<summary> </summary>
<param name="argument"> </param>
<param name="paramName"> </param>
<exception cref="T:System.ArgumentNullException"> </exception>
</member>
<member name="M:Baby.ThrowIf.NotDateOnly(System.DateOnly,System.String)">
<summary> </summary>
<param name="argument"> </param>
<param name="paramName"> </param>
<exception cref="T:System.ArgumentNullException"> </exception>
</member>
<member name="M:Baby.ThrowIf.Negative(System.Int32,System.String)">
<summary> Determines whether the specified argument is negative. </summary>
<param name="argument"> The argument. </param>
<param name="paramName"> The argument's name. </param>
<exception cref="T:System.ArgumentOutOfRangeException"> </exception>
</member>
<member name="M:Baby.ThrowIf.Negative(System.Double,System.String)">
<summary> Determines whether the specified argument is negative. </summary>
<param name="argument"> The argument. </param>
<param name="paramName"> The argument's name. </param>
<exception cref="T:System.ArgumentOutOfRangeException"> </exception>
</member>
<member name="M:Baby.ThrowIf.NegativeOrZero(System.Int32,System.String)">
<summary> Throws out of range exception if argument is less than zero </summary>
<param name="argument"> The argument. </param>
<param name="paramName"> Name of the parameter. </param>
<returns> Throws Out of Range Exception </returns>
<exception cref="T:System.ArgumentOutOfRangeException"> </exception>
</member>
<member name="M:Baby.ThrowIf.NegativeOrZero(System.Double,System.String)">
<summary> Throws out of range exception if argument is less than zero </summary>
<param name="argument"> The argument. </param>
<param name="paramName"> Name of the parameter. </param>
<returns> Throws Out of Range Exception </returns>
<exception cref="T:System.ArgumentOutOfRangeException"> paramName, _message </exception>
</member>
<member name="T:Baby.UrlUtils">
<summary> </summary>
</member>
<member name="M:Baby.UrlUtils.PathToUrl(System.String,System.String)">
<summary> Paths to URL. </summary>
<param name="filePath"> The file path. </param>
<param name="removeBaseDir"> The remove base dir. </param>
<returns> </returns>
</member>
<member name="M:Baby.UrlUtils.IsFileOffline(System.String)">
<summary> Determines whether [is file offline]. </summary>
<param name="url"> The URL. </param>
<returns>
<c> true </c>
if [is file offline] [the specified URL]; otherwise,
<c> false </c>
. </returns>
</member>
<member name="M:Baby.UrlUtils.IsLocalhost(System.String)">
<summary> Determines whether this instance is localhost. </summary>
<param name="url"> The URL. </param>
<returns>
<c> true </c>
if the specified URL is localhost; otherwise,
<c> false </c>
. </returns>
</member>
<member name="M:Baby.UrlUtils.UrlDecode(System.String)">
<summary> URLs the decode. </summary>
<param name="url"> The URL. </param>
<returns> </returns>
</member>
<member name="M:Baby.UrlUtils.HexToInt(System.Char)">
<summary> Hexadecimals to int. </summary>
<param name="hex"> The hexadecimal. </param>
<returns> </returns>
</member>
<member name="M:Baby.UrlUtils.DecodeUrlForFilePath(System.String)">
<summary> Decodes the URL for filepath. </summary>
<param name="url"> The URL. </param>
<returns> </returns>
</member>
<member name="M:Baby.UrlUtils.UrlEncode(System.String)">
<summary> URLs the encode. </summary>
<param name="text"> The text. </param>
<returns> </returns>
</member>
<member name="M:Baby.UrlUtils.Fail(System.Exception)">
<summary> Get ErrorDialog Dialog. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.WebMinion">
<summary> </summary>
</member>
<member name="M:Baby.WebMinion.RunEdge">
<summary> Launches the edge. </summary>
</member>
<member name="M:Baby.WebMinion.RunEdge(System.String)">
<summary> Runs the edge. </summary>
<param name="uri"> The URI. </param>
</member>
<member name="M:Baby.WebMinion.RunChrome">
<summary> Launches the chrome. </summary>
</member>
<member name="M:Baby.WebMinion.RunChrome(System.String)">
<summary> Runs the chrome. </summary>
<param name="uri"> The URI. </param>
</member>
<member name="M:Baby.WebMinion.RunFirefox">
<summary> Runs the firefox. </summary>
</member>
<member name="M:Baby.WebMinion.RunFirefox(System.String)">
<summary> Runs the firefox. </summary>
<param name="uri"> The URI. </param>
</member>
<member name="M:Baby.WebMinion.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.WebUtils">
<summary> </summary>
</member>
<member name="M:Baby.WebUtils.IsFocused(System.Windows.Forms.TextBox)">
<summary> Determines whether the specified tb is focused. </summary>
<param name="textBox"> The tb. </param>
<returns>
<c> true </c>
if the specified tb is focused; otherwise,
<c> false </c>
. </returns>
</member>
<member name="M:Baby.WebUtils.IsFocused(Baby.TextBox)">
<summary> Determines whether the specified tb is focused. </summary>
<param name="textBox"> The tb. </param>
<returns>
<c> true </c>
if the specified tb is focused; otherwise,
<c> false </c>
. </returns>
</member>
<member
  name="M:Baby.WebUtils.AddHotKey(System.Windows.Forms.Form,System.Action,System.Windows.Forms.Keys,System.Boolean,System.Boolean,System.Boolean)">
<summary> Adds the hot key. </summary>
<param name="form"> The form. </param>
<param name="function"> The function. </param>
<param name="key"> The key. </param>
<param name="ctrl"> if set to
<c> true </c>
[control]. </param>
<param name="shift"> if set to
<c> true </c>
[shift]. </param>
<param name="alt"> if set to
<c> true </c>
[alt]. </param>
</member>
<member name="M:Baby.WebUtils.IsFullySelected(System.Windows.Forms.TextBox)">
<summary> Determines whether [is fully selected] [the specified tb]. </summary>
<param name="textBox"> The tb. </param>
<returns>
<c> true </c>
if [is fully selected] [the specified tb]; otherwise,
<c> false </c>
. </returns>
</member>
<member name="M:Baby.WebUtils.IsFullySelected(Baby.TextBox)">
<summary> Determines whether [is fully selected] [the specified tb]. </summary>
<param name="textBox"> The tb. </param>
<returns>
<c> true </c>
if [is fully selected] [the specified tb]; otherwise,
<c> false </c>
. </returns>
</member>
<member name="M:Baby.WebUtils.HasSelection(System.Windows.Forms.TextBox)">
<summary> Determines whether the specified tb has selection. </summary>
<param name="textBox"> The tb. </param>
<returns>
<c> true </c>
if the specified tb has selection; otherwise,
<c> false </c>
. </returns>
</member>
<member name="M:Baby.WebUtils.HasSelection(Baby.TextBox)">
<summary> Determines whether the specified tb has selection. </summary>
<param name="textBox"> The tb. </param>
<returns>
<c> true </c>
if the specified tb has selection; otherwise,
<c> false </c>
. </returns>
</member>
<member name="M:Baby.WebUtils.CheckIfFilePath(System.String)">
<summary> Checks if file path. </summary>
<param name="path"> The path. </param>
<returns> </returns>
</member>
<member name="M:Baby.WebUtils.CheckIfFilePath2(System.String)">
<summary> Checks if file path2. </summary>
<param name="path"> The path. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.WebUtils.GetAfter(System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
<summary> Gets the after. </summary>
<param name="text"> The text. </param>
<param name="find"> The find. </param>
<param name="startAt"> The start at. </param>
<param name="returnAll"> if set to
<c> true </c>
[return all]. </param>
<param name="forward"> if set to
<c> true </c>
[forward]. </param>
<returns> </returns>
</member>
<member name="M:Baby.WebUtils.GetAfterLast(System.String,System.String,System.Boolean)">
<summary> Gets the after last. </summary>
<param name="text"> The text. </param>
<param name="find"> The find. </param>
<param name="returnAll"> if set to
<c> true </c>
[return all]. </param>
<returns> </returns>
</member>
<member name="M:Baby.WebUtils.SupportedInFilePath(System.Char)">
<summary> Supporteds the in file path. </summary>
<param name="c"> The c. </param>
<returns> </returns>
</member>
<member name="M:Baby.WebUtils.ChangePathSlash(System.String,System.String)">
<summary> Changes the path slash. </summary>
<param name="filePath"> The file path. </param>
<param name="slash"> The slash. </param>
<returns> </returns>
</member>
<member name="M:Baby.WebUtils.FileUrlToPath(System.String)">
<summary> Files the URL to path. </summary>
<param name="url"> The URL. </param>
<returns> </returns>
</member>
<member name="M:Baby.WebUtils.FileNotExists(System.String)">
<summary> Files the not exists. </summary>
<param name="path"> The path. </param>
<returns> </returns>
</member>
<member name="M:Baby.WebUtils.ConvertToString(System.Object)">
<summary> Converts to string. </summary>
<param name="o"> The o. </param>
<returns> </returns>
</member>
<member name="M:Baby.WebUtils.CheckIfValid(System.String,System.Boolean)">
<summary> Checks if valid. </summary>
<param name="text"> The text. </param>
<param name="trimAndCheck"> if set to
<c> true </c>
[trim and check]. </param>
<returns> </returns>
</member>
<member
  name="M:Baby.WebUtils.InvokeOnParent(System.Windows.Forms.Control,System.Windows.Forms.MethodInvoker)">
<summary> Invokes the on parent. </summary>
<param name="control"> The control. </param>
<param name="method"> The method. </param>
</member>
<member
  name="M:Baby.WebUtils.IsHotKey(System.Windows.Forms.KeyEventArgs,System.Windows.Forms.Keys,System.Boolean,System.Boolean,System.Boolean)">
<summary> Determines whether [is hot key] [the specified key]. </summary>
<param name="eventData"> The
<see cref="T:System.Windows.Forms.KeyEventArgs" />
instance containing the event data. </param>
<param name="key"> The key. </param>
<param name="ctrl"> if set to
<c> true </c>
[control]. </param>
<param name="shift"> if set to
<c> true </c>
[shift]. </param>
<param name="alt"> if set to
<c> true </c>
[alt]. </param>
<returns>
<c> true </c>
if [is hot key] [the specified key]; otherwise,
<c> false </c>
. </returns>
</member>
<member name="M:Baby.WebUtils.ToCefState(System.Boolean)">
<summary> Converts to cefstate. </summary>
<param name="value"> if set to
<c> true </c>
[value]. </param>
<returns> </returns>
</member>
<member name="M:Baby.WebUtils.IsBitMaskOn(System.Int32,System.Int32)">
<summary> Determines whether [is bitMask on] [the specified bitMask]. </summary>
<param name="num"> The number. </param>
<param name="bitMask"> The bitMask. </param>
<returns>
<c> true </c>
if [is bitMask on] [the specified bitMask]; otherwise,
<c> false </c>
. </returns>
</member>
<member name="M:Baby.WebUtils.BeginsWith(System.String,System.String,System.Boolean)">
<summary> Beginses the with. </summary>
<param name="str"> The string. </param>
<param name="beginsWith"> The begins with. </param>
<param name="caseSensitive"> if set to
<c> true </c>
[case sensitive]. </param>
<returns> </returns>
</member>
<member name="M:Baby.WebUtils.RemovePrefix(System.String,System.String,System.Boolean)">
<summary> Removes the prefix. </summary>
<param name="str"> The string. </param>
<param name="prefix"> The prefix. </param>
<param name="caseSensitive"> if set to
<c> true </c>
[case sensitive]. </param>
<returns> </returns>
</member>
<member name="M:Baby.WebUtils.Fail(System.Exception)">
<summary> Get ErrorDialog Dialog. </summary>
<param name="ex"> The ex. </param>
</member>
<member name="T:Baby.WinMinion">
<summary> </summary>
</member>
<member name="M:Baby.WinMinion.LaunchCalculator">
<summary> Launches the windows calculator. </summary>
</member>
<member name="M:Baby.WinMinion.LaunchOutlook">
<summary> Launches the outlook. </summary>
</member>
<member name="M:Baby.WinMinion.LaunchMediaPlayer">
<summary> Launches the windows media player. </summary>
</member>
<member name="M:Baby.WinMinion.LaunchMaps">
<summary> Launches the windows maps. </summary>
</member>
<member name="M:Baby.WinMinion.LaunchOneDrive">
<summary> Launches the one drive. </summary>
</member>
<member name="M:Baby.WinMinion.LaunchCalendar">
<summary> Launches the calendar. </summary>
</member>
<member name="M:Baby.WinMinion.LaunchClock">
<summary> Launches the clock. </summary>
</member>
<member name="M:Baby.WinMinion.LaunchControlPanel">
<summary> Launches the control panel. </summary>
</member>
<member name="M:Baby.WinMinion.LaunchTaskManager">
<summary> Launches the task manager. </summary>
</member>
<member name="M:Baby.WinMinion.Fail(System.Exception)">
<summary> Fails the specified ex. </summary>
<param name="ex"> The ex. </param>
</member>
</members>
</doc>