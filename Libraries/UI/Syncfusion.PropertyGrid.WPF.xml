<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.PropertyGrid.Wpf</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyGridAttribute">
            <summary>
            Represents a class which is used to customize the properties in <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGridAttribute.IsNestedPropertyDisplayModeSet">
            <summary>
            Gets or sets the value whether <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGridAttribute.NestedPropertyDisplayMode"/> property is customized or not in application level.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGridAttribute.nestedPropertyDisplayMode">
            <summary>
            Gets or sets the value of <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGridAttribute.NestedPropertyDisplayMode"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGridAttribute.PropertyType">
            <summary>
            Gets or sets the property type to which <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGridAttribute.NestedPropertyDisplayMode"/> will be applied.
            </summary>
            <example>
            <para>Apply <see cref="F:Syncfusion.Windows.PropertyGrid.NestedPropertyDisplayMode.Show"/> for properties of type <see cref="T:System.DateTime" />.</para>
            <code lang="C#"> 
            [PropertyGridAttribue(NestedPropertyDisplayMode = NestedPropertyDisplayMode.Show, PropertyType = typeof(DateTime))]       
            public class Person
            {
               public Bank Bank { get; set; }
               public DateTime DateOfBirth { get; set; }
               public DateTime LastLoggedIn { get; set; }
            }
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGridAttribute.PropertyName">
            <summary>
            Gets or sets the property name to which <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGridAttribute.NestedPropertyDisplayMode"/> will be applied.
            </summary>
            <example>
            <para>Apply <see cref="F:Syncfusion.Windows.PropertyGrid.NestedPropertyDisplayMode.Show"/> for StartDate and Bank property.</para>
            <code lang="C#">
            [PropertyGridAttribue(NestedPropertyDisplayMode = NestedPropertyDisplayMode.Show, PropertyName = "StartDate, Bank")]
            public class Person
            {
               public Bank Bank { get; set; }
               public DateTime StartDate { get; set; }
            }
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGridAttribute.NestedPropertyDisplayMode">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGridAttribute.NestedPropertyDisplayMode"/> value that is used for the property.
            </summary> 
            <example>
            <para>Apply <see cref="F:Syncfusion.Windows.PropertyGrid.NestedPropertyDisplayMode.Show"/> for StartDate property.</para>
            <code lang="C#"> 
            public class Person
            {
               public Bank Bank { get; set; }
               
               [PropertyGridAttribue(NestedPropertyDisplayMode = NestedPropertyDisplayMode.Show, PropertyName = "StartDate")]
               or 
               [PropertyGridAttribue(NestedPropertyDisplayMode = NestedPropertyDisplayMode.Show)]
               public DateTime StartDate { get; set; }
            }
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGridAttribute"/> class with the NestedPropertyDisplay mode and property type.  
            </summary>
            <example>
            <para>Apply <see cref="F:Syncfusion.Windows.PropertyGrid.NestedPropertyDisplayMode.Show"/> for properties of type <see cref="T:System.DateTime" />.</para>
            <code lang="C#"> 
            [PropertyGridAttribue(NestedPropertyDisplayMode = NestedPropertyDisplayMode.Show, PropertyType= typeof (DateTime))]
            public class Person
            {
               public Bank Bank { get; set; }
               public DateTime DateOfBirth { get; set; }
               public DateTime LastLogedIn { get; set; }
            } 
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.NestedPropertyDisplayMode">
            <summary>
            Enum variable NestedPropertyDisplayMode which contains different modes for PropertyGrid
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.NestedPropertyDisplayMode.None">
            <summary>
            Does not allows to show nested properties
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.NestedPropertyDisplayMode.Show">
            <summary>
            Allowed to show nested properties
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.ClearButtonAutomationPeer">
            <property name="flag" value="Finished" />
            <summary>
            Class that provides UI Automation support.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ClearButtonAutomationPeer.#ctor(Syncfusion.Windows.PropertyGrid.ClearButton)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.ClearButtonAutomationPeer"/> class
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ClearButtonAutomationPeer.GetNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ClearButtonAutomationPeer.GetAutomationIdCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ClearButtonAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            An <see cref="F:System.String.Empty"/> string.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ClearButtonAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ClearButtonAutomationPeer.GetHelpTextCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ClearButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">A value from the enumeration.</param>
            <returns>returns the pattern</returns>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.ClearButtonAutomationPeer.MyOwner">
            <property name="flag" value="Finished" />
            <summary>
            Gets Clear button object.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.DescriptionBorderAutomationPeer">
            <property name="flag" value="Finished" />
            <summary>
            Class that provides UI Automation support.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DescriptionBorderAutomationPeer.#ctor(Syncfusion.Windows.PropertyGrid.DescriptionBorder)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.DescriptionBorderAutomationPeer"/> class
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DescriptionBorderAutomationPeer.GetNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DescriptionBorderAutomationPeer.GetAutomationIdCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DescriptionBorderAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            An <see cref="F:System.String.Empty"/> string.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DescriptionBorderAutomationPeer.GetHelpTextCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DescriptionBorderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">A value from the enumeration.</param>
            <returns>returns the pattern</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DescriptionBorderAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.DescriptionBorderAutomationPeer.MyOwner">
            <property name="flag" value="Finished" />
            <summary>
            Gets DescriptionBorder object.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.DescriptionDetailsTextBlockAutomationPeer">
            <property name="flag" value="Finished" />
            <summary>
            Class that provides UI Automation support.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DescriptionDetailsTextBlockAutomationPeer.#ctor(Syncfusion.Windows.PropertyGrid.DescriptionDetailsTextBlock)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.DescriptionDetailsTextBlock"/> class
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DescriptionDetailsTextBlockAutomationPeer.GetNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DescriptionDetailsTextBlockAutomationPeer.GetAutomationIdCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DescriptionDetailsTextBlockAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            An <see cref="F:System.String.Empty"/> string.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DescriptionDetailsTextBlockAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DescriptionDetailsTextBlockAutomationPeer.GetHelpTextCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DescriptionDetailsTextBlockAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">A value from the enumeration.</param>
            <returns>returns the pattern</returns>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.DescriptionDetailsTextBlockAutomationPeer.MyOwner">
            <property name="flag" value="Finished" />
            <summary>
            Gets Description Details TextBlock  object.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.DescriptionNameTextBlockAutomationPeer">
            <property name="flag" value="Finished" />
            <summary>
            Class that provides UI Automation support.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DescriptionNameTextBlockAutomationPeer.#ctor(Syncfusion.Windows.PropertyGrid.DescriptionNameTextBlock)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.DescriptionNameTextBlockAutomationPeer"/> class
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DescriptionNameTextBlockAutomationPeer.GetNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DescriptionNameTextBlockAutomationPeer.GetAutomationIdCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DescriptionNameTextBlockAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DescriptionNameTextBlockAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            An <see cref="F:System.String.Empty"/> string.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DescriptionNameTextBlockAutomationPeer.GetHelpTextCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DescriptionNameTextBlockAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">A value from the enumeration.</param>
            <returns>returns the pattern</returns>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.DescriptionNameTextBlockAutomationPeer.MyOwner">
            <property name="flag" value="Finished" />
            <summary>
            Gets Description Name TextBlock object.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItemAutomationPeer">
            <property name="flag" value="Finished" />
            <summary>
            Class that provides UI Automation support.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItemAutomationPeer.#ctor(Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem)">
            <summary>
            /// Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItemAutomationPeer"/> class
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItemAutomationPeer.GetClassNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItemAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItemAutomationPeer.GetNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItemAutomationPeer.GetAutomationIdCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItemAutomationPeer.GetHelpTextCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItemAutomationPeer.MyOwner">
            <property name="flag" value="Finished" />
            <summary>
            Gets PropertyCatagoryViewItem object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItemAutomationPeer.GetItemStatusCore">
            <summary>
             Gets a string that communicates the visual status of the System.Windows.UIElement
             that is associated with this System.Windows.Automation.Peers.UIElementAutomationPeer.
             This method is called by System.Windows.Automation.Peers.AutomationPeer.GetItemStatus().
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyGridAutomationPeer">
            <property name="flag" value="Finished" />
            <summary>
            Class that provides UI Automation support.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridAutomationPeer.#ctor(Syncfusion.Windows.PropertyGrid.PropertyGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGridAutomationPeer"/> class
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridAutomationPeer.GetNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridAutomationPeer.GetAutomationIdCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            An <see cref="F:System.String.Empty"/> string.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridAutomationPeer.GetHelpTextCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">A value from the enumeration.</param>
            <returns>returns the pattern</returns>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGridAutomationPeer.MyOwner">
            <property name="flag" value="Finished" />
            <summary>
            Gets PropertyGrid object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridAutomationPeer.GetItemStatusCore">
            <summary>
              Gets a string that communicates the visual status of the System.Windows.UIElement
              that is associated with this System.Windows.Automation.Peers.UIElementAutomationPeer.
              This method is called by System.Windows.Automation.Peers.AutomationPeer.GetItemStatus().
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyGridScrollViewerAutomationPeer">
            <property name="flag" value="Finished" />
            <summary>
            Class that provides UI Automation support.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridScrollViewerAutomationPeer.#ctor(Syncfusion.Windows.PropertyGrid.PropertyGridScrollViewer)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGridScrollViewerAutomationPeer"/> class
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridScrollViewerAutomationPeer.GetNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridScrollViewerAutomationPeer.GetAutomationIdCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridScrollViewerAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            An <see cref="F:System.String.Empty"/> string.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridScrollViewerAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridScrollViewerAutomationPeer.GetHelpTextCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridScrollViewerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">A value from the enumeration.</param>
            <returns>returns the pattern</returns>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGridScrollViewerAutomationPeer.MyOwner">
            <property name="flag" value="Finished" />
            <summary>
            Gets PropertyGridScrollViewer object.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyGridSplitterAutomationPeer">
            <property name="flag" value="Finished" />
            <summary>
            Class that provides UI Automation support.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridSplitterAutomationPeer.#ctor(Syncfusion.Windows.PropertyGrid.PropertyGridSplitter)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGridSplitterAutomationPeer"/> class
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridSplitterAutomationPeer.GetNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridSplitterAutomationPeer.GetAutomationIdCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridSplitterAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            An <see cref="F:System.String.Empty"/> string.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridSplitterAutomationPeer.GetHelpTextCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridSplitterAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">A value from the enumeration.</param>
            <returns>returns the pattern</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridSplitterAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGridSplitterAutomationPeer.MyOwner">
            <property name="flag" value="Finished" />
            <summary>
            Gets PropertyGridSplitter object.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyItemTextBlockAutomationPeer">
            <property name="flag" value="Finished" />
            <summary>
            Class that provides UI Automation support.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyItemTextBlockAutomationPeer.#ctor(Syncfusion.Windows.PropertyGrid.PropertyItemTextBlock)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItemTextBlockAutomationPeer"/> class
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyItemTextBlockAutomationPeer.GetNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyItemTextBlockAutomationPeer.GetAutomationIdCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyItemTextBlockAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            An <see cref="F:System.String.Empty"/> string.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyItemTextBlockAutomationPeer.GetHelpTextCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyItemTextBlockAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyItemTextBlockAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">A value from the enumeration.</param>
            <returns>returns the pattern</returns>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItemTextBlockAutomationPeer.MyOwner">
            <property name="flag" value="Finished" />
            <summary>
            Gets PropertyItemTextBlock object.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyViewAutomationPeer">
            <property name="flag" value="Finished" />
            <summary>
            Class that provides UI Automation support.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewAutomationPeer.#ctor(System.Windows.Controls.ItemsControl)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyViewAutomationPeer"/> class
            </summary>
            <param name="propertyview"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewAutomationPeer.GetClassNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewAutomationPeer.GetNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewAutomationPeer.GetHelpTextCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewAutomationPeer.GetAutomationIdCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewAutomationPeer.GetItemStatusCore">
            <summary>
            Gets a string that communicates the visual status of the System.Windows.UIElement
            that is associated with this System.Windows.Automation.Peers.UIElementAutomationPeer.
            This method is called by System.Windows.Automation.Peers.AutomationPeer.GetItemStatus().
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            
            </summary>
            <param name="patternInterface"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyViewAutomationPeer.MyOwner">
            <property name="flag" value="Finished" />
            <summary>
            Gets PropertyViewItem object.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyViewItemAutomationPeer">
            <property name="flag" value="Finished" />
            <summary>
            Class that provides UI Automation support.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItemAutomationPeer.#ctor(Syncfusion.Windows.PropertyGrid.PropertyViewItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyViewItemAutomationPeer"/> class
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItemAutomationPeer.GetClassNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItemAutomationPeer.GetNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItemAutomationPeer.GetAutomationIdCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItemAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItemAutomationPeer.GetHelpTextCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItemAutomationPeer.GetItemStatusCore">
            <summary>
            Gets a string that communicates the visual status of the System.Windows.UIElement
            that is associated with this System.Windows.Automation.Peers.UIElementAutomationPeer.
            This method is called by System.Windows.Automation.Peers.AutomationPeer.GetItemStatus().
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyViewItemAutomationPeer.MyOwner">
            <property name="flag" value="Finished" />
            <summary>
            Gets PropertyViewItem object.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.SearchTextBoxAutomationPeer">
            <property name="flag" value="Finished" />
            <summary>
            Class that provides UI Automation support.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.SearchTextBoxAutomationPeer.#ctor(Syncfusion.Windows.PropertyGrid.SearchTextBox)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.SearchTextBoxAutomationPeer"/> class
            </summary>
            <param name="searchtextbox"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.SearchTextBoxAutomationPeer.GetNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.SearchTextBoxAutomationPeer.GetAutomationIdCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.SearchTextBoxAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            An <see cref="F:System.String.Empty"/> string.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.SearchTextBoxAutomationPeer.GetHelpTextCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.SearchTextBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">A value from the enumeration.</param>
            <returns>returns the pattern</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.SearchTextBoxAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.SearchTextBoxAutomationPeer.MyOwner">
            <property name="flag" value="Finished" />
            <summary>
            Gets SearchTextBox object.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.ToggleGroupButtonAutomationPeer">
            <property name="flag" value="Finished" />
            <summary>
            Class that provides UI Automation support.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ToggleGroupButtonAutomationPeer.#ctor(Syncfusion.Windows.PropertyGrid.ToggleGroupButton)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.ToggleGroupButtonAutomationPeer"/> class
            </summary>
            <param name="togglegroupbutton"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ToggleGroupButtonAutomationPeer.GetNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ToggleGroupButtonAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ToggleGroupButtonAutomationPeer.GetAutomationIdCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ToggleGroupButtonAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            An <see cref="F:System.String.Empty"/> string.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ToggleGroupButtonAutomationPeer.GetHelpTextCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ToggleGroupButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">A value from the enumeration.</param>
            <returns>returns the pattern</returns>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.ToggleGroupButtonAutomationPeer.MyOwner">
            <property name="flag" value="Finished" />
            <summary>
            Gets ToggleGroup button object.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.ToggleSortButtonAutomationPeer">
            <property name="flag" value="Finished" />
            <summary>
            Class that provides UI Automation support.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ToggleSortButtonAutomationPeer.#ctor(Syncfusion.Windows.PropertyGrid.ToggleSortButton)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.ToggleSortButtonAutomationPeer"/> class
            </summary>
            <param name="togglesortbutton"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ToggleSortButtonAutomationPeer.GetNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ToggleSortButtonAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ToggleSortButtonAutomationPeer.GetAutomationIdCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ToggleSortButtonAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            An <see cref="F:System.String.Empty"/> string.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ToggleSortButtonAutomationPeer.GetHelpTextCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ToggleSortButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">A value from the enumeration.</param>
            <returns>returns the pattern</returns>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.ToggleSortButtonAutomationPeer.MyOwner">
            <property name="flag" value="Finished" />
            <summary>
            Gets ToggleSort button object.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.EnumHelper">
            <summary>  
            Helper class to allow users to get the values of a enumeration  
            </summary>  
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.EnumHelper.GetValues``1">
            <summary>  
            Get values of an enumeration of type T  
            </summary>  
            <typeparam name="T">Enumeration type</typeparam>  
            <returns>List of types in a enumeration</returns>  
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.EnumHelper.GetValues(System.Type)">
            <summary>  
            Get all the values of an enumeration of Type enumType  
            </summary>  
            <param name="enumType">Enumeration type</param>  
            <returns>Array of objects</returns>  
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.BooleanToSortDirectionConverter">
            <summary>
             Represent BooleanToSortDirection converter for PropertyGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BooleanToSortDirectionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding data source.</param>
            <param name="targetType">The type of the binding data target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BooleanToSortDirectionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.InvertBooleanConverter">
            <summary>
             Represent InvertBooleanConverter for the PropertyGrid
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.InvertBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding data source.</param>
            <param name="targetType">The type of the binding data target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.InvertBooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding data target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.BooleanToVisibilityConverter">
            <summary>
            Represents class for BooleanToVisibilityConverter which converts Boolean to Visibility values 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BooleanToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BooleanToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.InvertBooleanVisibilityConverter">
            <summary>
            Represent class for InvertBooleanVisibilityConverter 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.InvertBooleanVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.InvertBooleanVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.BrushConverter">
            <summary>
            Represents class for Brush converter
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding data source.</param>
            <param name="targetType">The type of the binding data target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding data target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.CustomCollectionConverter">
            <summary>
            Represents a <see cref="T:Syncfusion.Windows.PropertyGrid.CustomCollectionConverter"/> that is used to get the property descriptor collection of SelectedObject which is of IEnumerable type in PropertyGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CustomCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified destination type. 
            </summary>
            <param name="context">The descriptor context</param>
            <param name="culture">The culture</param>
            <param name="value">The value</param>
            <param name="destinationType">The target type</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CustomCollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Gets a collection of properties for the type of list specified by the value parameter.
            </summary>
            <param name="context">The descriptor context</param>
            <param name="value">The value</param>
            <param name="attributes">The attribute</param>
            <returns>The property descriptor collection</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CustomCollectionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets a value indicating whether this object supports properties. 
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.CustomCollectionConverter.ListPropertyDescriptor">
            <summary>
            Represents a <see cref="T:Syncfusion.Windows.PropertyGrid.CustomCollectionConverter"/> that is used to get the property descriptor collection for List type instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CustomCollectionConverter.ListPropertyDescriptor.#ctor(System.Type,System.Type,System.Int32)">
            <summary>
            Initializes a new instance of the ListPropertyDescriptor class with the name and attributes in the specified System.ComponentModel.MemberDescriptor.
            </summary>
            <param name="LisType">The list type</param>
            <param name="listItemType">The list item type</param>
            <param name="index">The list item index</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CustomCollectionConverter.ListPropertyDescriptor.GetValue(System.Object)">
            <summary>
            Gets the current value of the property on a component.
            </summary>
            <param name="instance">The component with the property for which to retrieve the value.</param>
            <returns>The value of a property for a given component.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CustomCollectionConverter.ListPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value of the component to a different value.
            </summary>
            <param name="instance">The component with the property value that is to be set.</param>
            <param name="value">The new value</param>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.CustomCollectionConverter.PrimitivePropertyDescriptor">
            <summary>
            Represents a <see cref="T:Syncfusion.Windows.PropertyGrid.CustomCollectionConverter.PrimitivePropertyDescriptor"/> that is used to get the property descriptor collection for primtive and built-in type instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CustomCollectionConverter.PrimitivePropertyDescriptor.#ctor(System.Type,System.String,System.Type)">
            <summary>
            Initializes a new instance of the PrimitivePropertyDescriptor class with the name and attributes in the specified System.ComponentModel.MemberDescriptor.
            </summary>
            <param name="componentType">The primitive type</param>
            <param name="name">The primitive type name</param>
            <param name="propertyType">The primitive type</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CustomCollectionConverter.PrimitivePropertyDescriptor.GetValue(System.Object)">
            <summary>
            Gets the current value of the property on a component.
            </summary>
            <param name="instance">The component with the property for which to retrieve the value.</param>
            <returns>The value of a property for a given component.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CustomCollectionConverter.PrimitivePropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value of the component to a different value.
            </summary>
            <param name="instance">The component with the property value that is to be set.</param>
            <param name="value">The new value</param>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.DictionaryPropertyGridAdapter">
            <summary>
            Instance for dynamic custom type information for an object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DictionaryPropertyGridAdapter.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the DictionaryPropertyGridAdapter class.
            </summary>
            <param name="dictionary">The dictionary</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DictionaryPropertyGridAdapter.GetComponentName">
            <summary>
            Returns the name of this instance of a component.
            </summary>
            <returns>The name of the object, or null if the object does not have a name.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DictionaryPropertyGridAdapter.GetDefaultEvent">
            <summary>
            Returns the default event for this instance of a component.
            </summary>
            <returns>An System.ComponentModel.EventDescriptor that represents the default event for this object, or null if this object does not have events.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DictionaryPropertyGridAdapter.GetClassName">
            <summary>
            Returns the class name of this instance of a component.
            </summary>
            <returns>The class name of the object, or null if the class does not have a name.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DictionaryPropertyGridAdapter.GetEvents(System.Attribute[])">
            <summary>
            Returns the events for this instance of a component using the specified attribute array as a filter.
            </summary>
            <param name="attributes">An array of type System.Attribute that is used as a filter.</param>
            <returns>An System.ComponentModel.EventDescriptorCollection that represents the filtered events for this component instance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DictionaryPropertyGridAdapter.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
            <summary>
            Returns the events for this instance of a component.
            </summary>
            <returns>An System.ComponentModel.EventDescriptorCollection that represents the events for this component instance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DictionaryPropertyGridAdapter.GetConverter">
            <summary>
            Returns a type converter for this instance of a component.
            </summary>
            <returns>A System.ComponentModel.TypeConverter that is the converter for this object, or null if there is no System.ComponentModel.TypeConverter for this object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DictionaryPropertyGridAdapter.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Returns an object that contains the property described by the specified property descriptor.
            </summary>
            <param name="pd"> A System.ComponentModel.PropertyDescriptor that represents the property whose owner is to be found.</param>
            <returns>An System.Object that represents the owner of the specified property.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DictionaryPropertyGridAdapter.GetAttributes">
            <summary>
            Returns a collection of custom attributes for this instance of a component.
            </summary>
            <returns>An System.ComponentModel.AttributeCollection containing the attributes for this object</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DictionaryPropertyGridAdapter.GetEditor(System.Type)">
            <summary>
            Returns an editor of the specified type for this instance of a component.
            </summary>
            <param name="editorBaseType">A System.Type that represents the editor for this object.</param>
            <returns>An System.Object of the specified type that is the editor for this object</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DictionaryPropertyGridAdapter.GetDefaultProperty">
            <summary>
            Returns the default property for this instance of a component.
            </summary>
            <returns>A System.ComponentModel.PropertyDescriptor that represents the default property  for this object, or null if this object does not have properties.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DictionaryPropertyGridAdapter.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
            <summary>
            Returns the properties for this instance of a component.
            </summary>
            <returns>A System.ComponentModel.PropertyDescriptorCollection that represents the properties for this component instance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DictionaryPropertyGridAdapter.GetProperties(System.Attribute[])">
            <summary>
            Returns the properties for this instance of a component using the attribute array as a filter.
            </summary>
            <param name="attributes"> An array of type System.Attribute that is used as a filter.</param>
            <returns>A System.ComponentModel.PropertyDescriptorCollection that represents the filtered properties for this component instance.</returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.DictionaryPropertyGridAdapter.DictionaryPropertyDescriptor">
            <summary>
            PropertyDescriptor instance for user defined dictionary property collection
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DictionaryPropertyGridAdapter.DictionaryPropertyDescriptor.#ctor(System.Collections.IDictionary,System.Object)">
            <summary>
            Initializes a new instance of the DictionaryPropertyDescriptor class with the name and attributes in the specified System.ComponentModel.MemberDescriptor.
            </summary>
            <param name="dictionary">The Dictionary object</param>
            <param name="key">key</param>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.DictionaryPropertyGridAdapter.DictionaryPropertyDescriptor.PropertyType">
            <summary>
            Gets the type of the property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DictionaryPropertyGridAdapter.DictionaryPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value of the component to a different value.
            </summary>
            <param name="component">The component with the property value that is to be set.</param>
            <param name="value">The new value</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DictionaryPropertyGridAdapter.DictionaryPropertyDescriptor.GetValue(System.Object)">
            <summary>
            Gets the current value of the property on a component.
            </summary>
            <param name="component">The component with the property for which to retrieve the value.</param>
            <returns>The value of a property for a given component.</returns>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.DictionaryPropertyGridAdapter.DictionaryPropertyDescriptor.IsReadOnly">
            <summary>
            Gets a value indicating whether this property is read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.DictionaryPropertyGridAdapter.DictionaryPropertyDescriptor.ComponentType">
            <summary>
            Gets the type of the component this property is bound to.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DictionaryPropertyGridAdapter.DictionaryPropertyDescriptor.CanResetValue(System.Object)">
            <summary>
            Returns whether resetting an object changes its value.
            </summary>
            <param name="component">The component to test for reset capability.</param>
            <returns>true if resetting the component changes its value; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DictionaryPropertyGridAdapter.DictionaryPropertyDescriptor.ResetValue(System.Object)">
            <summary>
            sets the value of the component to a different value.
            </summary>
            <param name="component">The component with the property value that is to be set.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DictionaryPropertyGridAdapter.DictionaryPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            Determines a value indicating whether the value of this property needs to be persisted.
            </summary>
            <param name="component">The component with the property to be examined for persistence.</param>
            <returns>true if the property should be persisted; otherwise, false.</returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyItemToNameConverter">
            <summary>
            Represents class for PropertyItemToNameConverter
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyItemToNameConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding data source.</param>
            <param name="targetType">The type of the binding data target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyItemToNameConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding data source.</param>
            <param name="targetType">The type of the binding data target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.TypeToNameConverter">
            <summary>
            Represent class for TypeToNameConverter
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.TypeToNameConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding data source.</param>
            <param name="targetType">The type of the binding data target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.TypeToNameConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding data source.</param>
            <param name="targetType">The type of the binding data target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.BooleanToTooltipConverter">
            <summary>
            Represents BooleanToToolTipConverter which represents converter for converting boolean to tooltip value
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BooleanToTooltipConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value produced by the binding source.</param><param name="targetType">The type of the binding target property.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BooleanToTooltipConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding data target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.BooleanTobrushConverter">
            <summary>
            Represents BooleanTobrushConverter which converts Boolean to brush values
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BooleanTobrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value produced by the binding source.</param><param name="targetType">The type of the binding target property.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BooleanTobrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.</param><param name="targetType">The type to convert to.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.ThicknessConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ThicknessConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ThicknessConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ThicknessConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ThicknessConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.LevelToThicknessConverter">
            <summary>
            Represents LevelToThicknessConverter which converts level to thickness
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.LevelToThicknessConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value produced by the binding source.</param><param name="targetType">The type of the binding target property.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.LevelToThicknessConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding data target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.LevelToThicknessConverterForTogglebutton">
            <summary>
            Represents Level to thickness converter 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.LevelToThicknessConverterForTogglebutton.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value produced by the binding source.</param><param name="targetType">The type of the binding target property.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.LevelToThicknessConverterForTogglebutton.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.</param><param name="targetType">The type to convert to.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.StringTrimmerConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.StringTrimmerConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.StringTrimmerConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.ValueChangedEventHandler">
            <summary>
            Represents the delegate ValueChangedEventHandler
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.MenuPopupEventHandler">
            <summary>
            Represents the delegate MenuPopupEventHandler
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.ValueChangedEventArgs">
            <summary>
            Represents the ValuechangedEventArgs class 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ValueChangedEventArgs.#ctor(Syncfusion.Windows.PropertyGrid.Property)">
            <summary>
            Represents the ValueChangedEventArgs constructor
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ValueChangedEventArgs.#ctor(Syncfusion.Windows.PropertyGrid.Property,System.Object,System.Object)">
            <summary>
            Represents ValueChangedEventrgs
            </summary>
            <param name="item"></param>
            <param name="newValue"></param>
            <param name="oldValue"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ValueChangedEventArgs.#ctor(Syncfusion.Windows.PropertyGrid.Property,System.Object,System.Object,Syncfusion.Windows.PropertyGrid.PropertyItem)">
            <summary>
            Represents ValueChangedEventrgs
            </summary>
            <param name="item"></param>
            <param name="newValue"></param>
            <param name="oldValue"></param>
            <param name="propertyItem"></param>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.ValueChangedEventArgs.Property">
            <summary>
            Get and set the Property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.ValueChangedEventArgs.PropertyItem">
            <summary>
            Get and set the PropertyItem
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.ValueChangedEventArgs.NewValue">
            <summary>
            Get the NewValue for the PropertyGrid
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.ValueChangedEventArgs.OldValue">
            <summary>
            Get and set the oldValue for the PropertyGrid
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.MenuPopupEventArgs">
            <summary>
            Represents the MenuPopupEventArgs class 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.MenuPopupEventArgs.#ctor(Syncfusion.Windows.PropertyGrid.PropertyItem)">
            <summary>
            Represents the MenuPopupEvent constructor
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.MenuPopupEventArgs.PropertyItem">
            <summary>
            Get and set the Property
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.AutoGeneratingPropertyGridItemEventArgs">
            <summary>
            Provides data to the <see cref="E:Syncfusion.Windows.PropertyGrid.PropertyGrid.AutoGeneratingPropertyGridItem"/> event of the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.AutoGeneratingPropertyGridItemEventArgs.Order">
            <summary>
            Gets or sets a value to arrange the property item into the PropertyCollection when the <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.SortDirection"/> is null. Based on the value specifed in the <see cref="P:Syncfusion.Windows.PropertyGrid.AutoGeneratingPropertyGridItemEventArgs.Order"/>, property item will get arrange. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.AutoGeneratingPropertyGridItemEventArgs.DisplayName">
            <summary>
            Gets or sets a display name to the property item. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.AutoGeneratingPropertyGridItemEventArgs.Description">
            <summary>
            Gets or sets a desciption of the property item
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.AutoGeneratingPropertyGridItemEventArgs.DescriptionTemplate">
            <summary>
            Gets or sets the template used to display the description of SelectedItem.
            </summary>
            <example>
            The following example shows how to define a Description template for property item in <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/> control.
            <code lang="Xaml"><![CDATA[
            <Grid x:Name="grid">
               <Grid.Resources>
                  <DataTemplate x:Key="template1">
                     <StackPanel>
                        <TextBlock Text = "{Binding Name}"
                                   FontSize="16" 
                                   Foreground="Red" 
                                   TextWrapping="Wrap"/>
                        <TextBlock Text = "{Binding Description}"
                                   FontSize="14" 
                                   Foreground="Green" 
                                   TextWrapping="Wrap"/>
                     </StackPanel>
                  </DataTemplate>
               </Grid.Resources>
               <syncfusion:PropertyGrid x:Name="propertyGrid"
                                        AutoGeneratingPropertyGridItem = "OnAutoGeneratingPropertyGridItem"
                                        DescriptionPanelVisibility="Visible">
                  <syncfusion:PropertyGrid.SelectedObject>
                      <local:Employee></local:Employee>
                  </syncfusion:PropertyGrid.SelectedObject>
               </syncfusion:PropertyGrid>
            </Grid>
            ]]></code>
            <code lang="C#"><![CDATA[
            private void OnAutoGeneratingPropertyGridItem(object sender, AutoGeneratingPropertyGridItemEventArgs e)
            {
               if (e.DisplayName == "Name" || e.DisplayName == "DOB")
               {
                    e.DescriptionTemplate = grid.TryFindResource("template1") as DataTemplate;
               }
            }
            
            public class Employee
            {
               [Description("Name of the employee")]
               public string Name { get; set; }
               [Description("ID of the employee")]
               public string ID { get; set; }
               [Description("Birth date of the employee")]
               public DateTime DOB { get; set; }
               [Description("Age of the employee")]
               public int Age { get; set; }
               public Employee()
               {
                  Name = "John";
                  ID = "381";
                  DOB = new DateTime(1995, 12, 24);
                  Age = 26;
               }
            } 
            ]]></code>
            ***
            </example>
            <returns>
            The template that defines the appearance of the description Panel.
            </returns>
            <remarks>
            DataContext of <b>DescriptionTemplate</b> is <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/>.
            <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/> has Name, Description and other useful properties, that can be bounded to the DescriptionTemplate.
            DescriptionTemplate can be defined in Autogenerating event, PropertyGridItem and PropertyGrid. 
            AutoGeneratingPropertyGridItemEventArgs.DescriptionTemplate takes the highest precedence, PropertyGridItem.DescriptionTemplate takes second precedence, and PropertyGrid.DescriptionTemplate takes the last precedence. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.AutoGeneratingPropertyGridItemEventArgs.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the property item is ready only or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.AutoGeneratingPropertyGridItemEventArgs.OriginalSource">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/> that is being added to the property collection of PropertyGrid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.AutoGeneratingPropertyGridItemEventArgs.Category">
            <summary>
             Gets or sets the name of the category for the property item based on the Category name proeprty items will be grouped.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.AutoGeneratingPropertyGridItemEventArgs.ExpandMode">
            <summary>
            Gets or sets whether to populate nested properties of <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/> or not.
            </summary> 
            <remarks>
            When <see cref="F:Syncfusion.Windows.PropertyGrid.PropertyExpandModes.NestedMode"/> is set, nested properties of <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/> will be populated.
            When <see cref="F:Syncfusion.Windows.PropertyGrid.PropertyExpandModes.FlatMode"/> is set, nested properties of <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/> will not be populated.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.Property">
            <summary>
            Represents the Property class
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Property.SelectedObject">
            <summary>
            Gets or sets the selected object.
            </summary>
            <value>The selected object.</value>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Property.PropertyInformation">
            <summary>
            Gets or sets the property information.
            </summary>
            <value>The property information.</value>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Property.PropertyDescriptor">
            <summary>
            Gets <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyItem.PropertyDescriptor"/> which provides abstraction of a property when <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.SelectedObject"/> is of type dynamic, ExpandoObject or ICustomTypeDescriptor.
            </summary>
            <remarks>
            Use <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyItem.PropertyInformation"/> when <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.SelectedObject"/> is not dynamic, ExpandoObject or ICustomTypeDescriptor Type.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Property.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Property.DisplayName">
            <summary>
            Gets the display name.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Property.Category">
            <summary>
            Gets the category.
            </summary>
            <value>The category.</value>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Property.Browsable">
            <summary>
            Gets a value indicating whether this <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/> is browsable.
            </summary>
            <value><c>true</c> if browsable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Property.IsReadOnly">
            <summary>
            Gets a value indicating whether this instance is read only.
            </summary>
            <value>
            	<c>true</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Property.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyGridHelper">
            <summary>
            Represents an extension class that provides helper methods for <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridHelper.GenerateItems(Syncfusion.Windows.PropertyGrid.PropertyGrid)">
            <summary>
            Helps to generate the custom property item when <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/> Items property is changed.
            </summary>
            <param name="propertyGrid">The property grid.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridHelper.GenerateNestedItems(Syncfusion.Windows.PropertyGrid.PropertyGridItem,System.Object)">
            <summary>
            Helps to generate the nested property item when <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGridItem"/> Items property is changed.
            </summary>
            <param name="propertyGridItem">The property grid item.</param>
            <param name="value">The object item.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridHelper.GenerateCustomPropertyItem(Syncfusion.Windows.PropertyGrid.PropertyGrid,Syncfusion.Windows.PropertyGrid.PropertyGridItem,Syncfusion.Windows.PropertyGrid.PropertyItem,System.Object)">
            <summary>
            Helps to generate the custom property item defined in <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGridItem"/>.
            </summary>
            <param name="propertyGrid">The PropertyGrid</param>
            <param name="propertyGridItem">The property grid item</param>
            <param name="parentPropertyItem">The parent property item</param>
            <param name="value">The selected object</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridHelper.SetToolTipBinding(Syncfusion.Windows.PropertyGrid.PropertyItem,Syncfusion.Windows.PropertyGrid.PropertyItem,Syncfusion.Windows.PropertyGrid.PropertyGrid)">
            <summary>
            Set binding for <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyItem.EnableToolTip"/> property of <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/>.
            </summary>
            <param name="propertyGrid">The PropertyGrid</param>
            <param name="propertyItem">The custom property item</param>
            <param name="parentPropertyItem">The parent property item</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridHelper.SetMenuItemBinding(Syncfusion.Windows.PropertyGrid.PropertyItem,Syncfusion.Windows.PropertyGrid.PropertyItem,Syncfusion.Windows.PropertyGrid.PropertyGrid)">
            <summary>
            Set binding for <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyItem.EnableMenuButton"/> property of <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/>.
            </summary>
            <param name="propertyGrid">The PropertyGrid</param>
            <param name="propertyItem">The custom property item</param>
            <param name="parentPropertyItem">The parent property item</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridHelper.SetVisibilityBinding(Syncfusion.Windows.PropertyGrid.PropertyItem,Syncfusion.Windows.PropertyGrid.PropertyViewItem)">
            <summary>
            Set binding for <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyItem.Visibility"/> property of <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/>.
            </summary>
            <param name="propertyItem">The custom property item</param>
            <param name="propertyViewItem">The parent property item</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridHelper.PropertyModeBinding(Syncfusion.Windows.PropertyGrid.PropertyItem,Syncfusion.Windows.PropertyGrid.PropertyGrid)">
            <summary>
            Set binding for <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyItem.Visibility"/> property of <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/>.
            </summary>
            <param name="propertyItem">The custom property item</param>
            <param name="propertyGrid">The parent property item</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridHelper.SetPropertyLevel(Syncfusion.Windows.PropertyGrid.PropertyItem,Syncfusion.Windows.PropertyGrid.PropertyItem,Syncfusion.Windows.PropertyGrid.PropertyGrid)">
            <summary>
            Set the property level for <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/>.
            </summary>
            <param name="propertyGrid">The PropertyGrid</param>
            <param name="propertyItem">The custom property item</param>
            <param name="parentPropertyItem">The parent property item</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridHelper.UpdatePropertiesCollection(Syncfusion.Windows.PropertyGrid.PropertyGrid,System.Boolean)">
            <summary>
            Update properties collection in property grid.
            </summary>
            <param name="propertyGrid">The property grid</param>
            <param name="canUpdate">True, if need to update properties collection otherwise false</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridHelper.ClearCollection(Syncfusion.Windows.PropertyGrid.PropertyGrid)">
            <summary>
            Helps to clear the properties collection.
            </summary>
            <param name="propertyGrid">The PropertyGrid</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridHelper.ClearSelection(Syncfusion.Windows.PropertyGrid.PropertyItem)">
            <summary>
            Helps to clear selection of property item when it is removed or visiblity is collapsed.
            </summary>
            <param name="propertyItem">The property item</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridHelper.RemoveItem(Syncfusion.Windows.PropertyGrid.PropertyGrid,Syncfusion.Windows.PropertyGrid.PropertyGridItem)">
            <summary>
            Helps to remove the custom property item from Items collection.
            </summary>
            <param name="propertyGrid">The property grid.</param>
            <param name="propertyGridItem">The property grid item.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridHelper.IsCategoryItemVisible(System.Windows.Data.CollectionViewGroup)">
            <summary>
            Helps to check whether cagetory items are visible.
            </summary>
            <param name="collectionViewGroup">The collection view group</param>
            <returns>True, if collection view group has visible item otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridHelper.IsNestedItemVisible(Syncfusion.Windows.PropertyGrid.PropertyGridItem)">
            <summary>
            Helps to check whether nested items are visible.
            </summary>
            <param name="propertyItem">The property item</param>
            <returns>True, if any nested item is visible otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridHelper.OnPropertyExpandModeChanged(Syncfusion.Windows.PropertyGrid.PropertyItem)">
            <summary>
            Occurs when PropertyItem PropertyExpandMode property changed.
            </summary>
            <param name="propertyItem">The property item.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridHelper.UpdatePropertyItemValue(Syncfusion.Windows.PropertyGrid.PropertyGridItem,Syncfusion.Windows.PropertyGrid.PropertyItem,System.String)">
            <summary>
            Helps to update the value changed at run-time.
            </summary>
            <param name="propertyGridItem">The property grid item</param>
            <param name="propertyItem">The property item</param>
            <param name="propertyName">The property name</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridHelper.CanRemoveCategoryPropertyItem(Syncfusion.Windows.PropertyGrid.PropertyCategoryViewItemCollection)">
            <summary>
            Helps to ensure whether to remove category view item or not.
            </summary>
            <param name="categoryViewItemCollection">The category view item</param>
            <returns>True, if need to remove category view item otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridHelper.IsItemAlreadyContain(Syncfusion.Windows.PropertyGrid.PropertyGridItem,Syncfusion.Windows.PropertyGrid.PropertyItem,Syncfusion.Windows.PropertyGrid.PropertyGrid)">
            <summary>
            Helps to check whether the property item already contained or not.
            </summary>
            <param name="propertyGridItem">The property grid item</param>
            <param name="parentPropertyItem">The parent property item</param>
            <param name="propertyGrid">The property grid</param>
            <returns>True, if property item already contained otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridHelper.GetAlreadyGeneratedItem(Syncfusion.Windows.PropertyGrid.PropertyGrid,Syncfusion.Windows.PropertyGrid.PropertyGridItem,Syncfusion.Windows.PropertyGrid.PropertyItem,System.Object)">
            <summary>
            Helps to get the already generated property item contained in PropertyGrid selected object.
            </summary>
            <param name="propertyGrid">The PropertyGrid</param>
            <param name="propertyGridItem">The property grid item</param>
            <param name="parentPropertyItem">The parent property item</param>
            <param name="value">The selectd object</param>
            <returns>The property item</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridHelper.SetSelectedPropertyItem(Syncfusion.Windows.PropertyGrid.PropertyItem)">
            <summary>
            Set SelectedItem when property expand mode of PropertyItem changed at run-time.
            </summary>
            <param name="propertyItem">The property item</param>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyGridItem">
            <summary>
            Represents the class that encapsulates the layout, group and editor setting for a property fields appearing in <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGridItem.ItemsProperty">
            <summary>
            Using a DependencyProperty as the backing store for Items. This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGridItem.DescriptionTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for DescriptionTemplate. This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGridItem"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGridItem.PropertyName">
            <summary>
            Gets or sets the name of the property.
            </summary>
            <value>
            The default value is String.Empty.
            </value>
            <remarks>
            It is mandatory to set the <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGridItem.PropertyName"/> value.
            If <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGridItem.PropertyName"/> property is null or empty, InvalidOperationException will be thrown.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGridItem.DisplayName">
            <summary>
            Gets or sets the display name of the property field.
            </summary>
            <remarks>
            By default, name of the property is displayed in property gird.
            DisplayName is used to display a more appropriate name.
            For example, if property name is ‘FullName’ and it should be displayed as ‘Full Name’.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGridItem.Editor">
            <summary>
            Gets or sets the editor type based on the PropertyGrid property item data type.
            </summary>
            <value>
            The default value is null.
            </value>
            <remarks>
            If Editor is not defined, PropertyGrid will automatically assign an editor based on <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGridItem.PropertyType"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGridItem.CategoryName">
            <summary>
            Gets or sets the category name of data field that is used to group properties in view.
            </summary>
            <value>
            The default value is Misc.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGridItem.Description">
            <summary>
            Gets or sets the description of the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGridItem"/>.
            </summary>
            <value>
            The default value is String.Empty.
            </value>
            <remarks>
            This information will be shown in description panel and tooltip of a property.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGridItem.PropertyType">
            <summary>
            Gets or sets a data type of the<see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGridItem"/>.
            </summary>
            <value>
            The default value is null.
            </value>
            <remarks>
            If a value is not set, PropertyGrid will automatically detect based on property type of <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGridItem.PropertyName"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGridItem.Visibility">
            <summary>
            Gets or sets a value indicating whether to show the data field for editing in <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/>.
            </summary>
            <value>
            The default value is Visibility.Visible.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGridItem.IsReadOnly">
            <summary>
            Gets or sets the value that indicates whether to allow user to edit the property value or not.
            </summary>
            <value>
            The default value is null.
            </value>
            <remarks>
            If PropertyItem only has get accessor, we don't modify the read only value.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGridItem.NestedPropertyDisplayMode">
            <summary>
            Gets or sets whether to populate nested properties of <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGridItem"/> or not.
            </summary>
            <remarks>
            When <see cref="F:Syncfusion.Windows.PropertyGrid.NestedPropertyDisplayMode.None"/> is set, nested properties of <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGridItem"/> will not be populated.
            When <see cref="F:Syncfusion.Windows.PropertyGrid.NestedPropertyDisplayMode.Show"/> is set, nested properties of <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGridItem"/> will be populated.
            If <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGridItem.NestedPropertyDisplayMode"/> is not set, expand mode will be updated based on <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGridAttribute"/> if we defined for respective property item.
            Otherwise the property expand mode will be updated based on PropertyGrid expand mode.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGridItem.DescriptionTemplate">
            <summary>
            Gets or sets the template used to display the description of SelectedItem.
            </summary>
            <example>
            The following example shows how to define a DescriptionTemplate of PropertyGridItem in XAML.
            <code><![CDATA[
            <Window x:Class="PropertyGridConfigurationDemo.MainWindow" Icon="App.ico"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
            xmlns:local="clr-namespace:PropertyGridConfigurationDemo" 
            WindowStartupLocation="CenterScreen"
            Title="Getting Started"  Height="550" Width="750" 
            xmlns:syncfusion="clr-namespace:Syncfusion.Windows.PropertyGrid;assembly=Syncfusion.PropertyGrid.Wpf">
            <Window.DataContext>
            <local:ViewModel/>
            </Window.DataContext>
             <Grid>
              <syncfusion:PropertyGrid x:Name="pgrid" 
                                       DescriptionPanelVisibility="Visible"
                                       SelectedObject="{Binding EmployeeDetails}" 
                                       AutoGenerateItems="false">
                <syncfusion:PropertyGrid.Items>
                    <syncfusion:PropertyGridItem PropertyName = "Age" >
                      <syncfusion:PropertyGridItem.DescriptionTemplate> 
                         <DataTemplate>  
                           <StackPanel>   
                              <TextBlock Text="{Binding Name}"/>
                              <TextBlock Text="{Binding Description}"/>
                           </StackPanel>
                         </DataTemplate>
                      </syncfusion:PropertyGridItem.DescriptionTemplate>
                    </syncfusion:PropertyGridItem>
                    <syncfusion:PropertyGridItem PropertyName = "FavoriteColor" NestedPropertyDisplayMode="None"/>
                </syncfusion:PropertyGrid.Items>
              </syncfusion:PropertyGrid>
             </Grid>
            </Window>
            ]]></code>
            </example>
            <remarks>
            DataContext of <b>DescriptionTemplate</b> is <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/>.
            <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/> has Name, Description and other useful properties, that can be bounded to the DescriptionTemplate.
            DescriptionTemplate can be defined in Autogenerating event, PropertyGridItem and PropertyGrid.
            AutoGeneratingPropertyGridItemEventArgs.DescriptionTemplate takes the highest precedence, PropertyGridItem.DescriptionTemplate takes second precedence, and PropertyGrid.DescriptionTemplate takes the last precedence.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGridItem.Items">
            <summary>
            Gets or sets the nested <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGridItem"/> collection.
            </summary>
            <example>
             The following example shows how to set the Items collection of PropertyGrid in XAML.
            <code><![CDATA[
            <Window x:Class="PropertyGridConfigurationDemo.MainWindow" Icon="App.ico"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
            xmlns:local="clr-namespace:PropertyGridConfigurationDemo" 
            WindowStartupLocation="CenterScreen"
            Title="Getting Started"  Height="550" Width="750" 
            xmlns:syncfusion="clr-namespace:Syncfusion.Windows.PropertyGrid;assembly=Syncfusion.PropertyGrid.Wpf">
            <Window.DataContext>
            <local:ViewModel/>
            </Window.DataContext>
             <Grid>
              <syncfusion:PropertyGrid x:Name="pgrid" SelectedObject="{Binding EmployeeDetails}" AutoGenerateItems="false">
                <syncfusion:PropertyGrid.Items>
                    <syncfusion:PropertyGridItem PropertyName = "FirstName" DisplayName="Name"/>
                    <syncfusion:PropertyGridItem PropertyName = "Age" >
                        <syncfusion:PropertyGridItem.Editor>
                           <local:IntegerTextBoxEditor/>
                        </syncfusion:PropertyGridItem.Editor>
                    </syncfusion:PropertyGridItem>
                    <syncfusion:PropertyGridItem PropertyName = "DOB" DisplayName="Birth Date" Description="Birth date of the actual person.">
                       <syncfusion:PropertyGridItem.Items>
                           <syncfusion:PropertyGridItem PropertyName = "Day" />
                           <syncfusion:PropertyGridItem PropertyName = "Month" />
                            <syncfusion:PropertyGridItem PropertyName = "Year" />
                       </syncfusion:PropertyGridItem.Items>
                    </syncfusion:PropertyGridItem>
                    <syncfusion:PropertyGridItem PropertyName = "FavoriteColor" NestedPropertyDisplayMode="None"/>
                </syncfusion:PropertyGrid.Items>
              </syncfusion:PropertyGrid>
             </Grid>
            </Window>
            ]]></code>
            </example>
            <remarks>
            Populates only the nested properties which was defined in <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGridItem.Items"/> collection of <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGridItem"/>.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.PropertyGrid.PropertyGridItem.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridItem.RaisePropertyChanged(System.String)">
            <summary>
            Invoked whenever the effective value of any dependency property on this DependencyObject has been updated. The specific dependency property that changed is reported in the event data.
            </summary>
            <param name="propertyName">
            The Dependency Property Name.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridItem.OnItemsChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Items collection changed.
            </summary>
            <param name="obj">The PropertyGrid</param>
            <param name="args">The DependencyPropertyChangedEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridItem.Items_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Gets or sets the custom nested <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGridItem.PropertyItem"/> collection in <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGridItem.PropertyItem"/>.
            </summary>
            <param name="sender">The PropertyItem Collection</param>
            <param name="e">The NotifyCollectionChangedEventArgs</param>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.BooleanComboEditor">
            <summary>
            Represents the BooleanComboEditor class which inherits from ITypeEditor
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.BooleanComboEditor.propertyViewItem">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyViewItem"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BooleanComboEditor.#ctor">
            <summary>
            Represents the BooleanComboEditor constructor
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BooleanComboEditor.Attach(Syncfusion.Windows.PropertyGrid.PropertyViewItem,Syncfusion.Windows.PropertyGrid.PropertyItem)">
            <summary>
            Represents the Attach method
            </summary>
            <param name="property"></param>
            <param name="info"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BooleanComboEditor.Create(System.Reflection.PropertyInfo)">
            <summary>
            Creates and initializes a new instance of the built-in editor.  
            </summary>
            <param name="propertyInfo">The PropertyInformation</param>
            <returns>The BooleanComboEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BooleanComboEditor.Create(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates and initializes a new instance of the custom editor. This method will be called for properties of type dynamic, ExpandoObject  or ICustomTypeDescriptor. 
            </summary>
            <param name="PropertyDescriptor">The PropertyDescriptor</param>
            <returns>The BooleanComboEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BooleanComboEditor.CreateEditor">
            <summary>
            Creates and initializes a new instance of the ComboBox editor.
            </summary>
            <returns>The BooleanComboEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BooleanComboEditor.Control_PreviewKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs when a key is pressed while focus is on <see cref="T:Syncfusion.Windows.PropertyGrid.BooleanComboEditor"/>
            </summary>
            <param name="sender">The BooleanComboEditor</param>
            <param name="e">The event data</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BooleanComboEditor.ShouldPropertyGridTryToHandleKeyDown(System.Windows.Input.Key)">
            <summary>
            Overrides the handling of keydown event. If the method returns true, PropertyGrid handles the KeyDown event and focus will be moved to next focusable editor, otherwise the event will not handle by the PropertyGrid.
            </summary>
            <param name="key">A <see cref="T:System.Windows.Input.KeyEventArgs" /> object.</param>
            <returns>True if the property grid should be allowed to handle keys; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BooleanComboEditor.Detach(Syncfusion.Windows.PropertyGrid.PropertyViewItem)">
            <summary>
            Represents the Detach method
            </summary>
            <param name="property"></param>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.BoolMembers">
            <summary>
            Represents the BoolMembers class
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.BoolMembers.DispalyName">
            <summary>
            Represent the DispalyName property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.BoolMembers.Value">
            <summary>
            Represents the Value Porperty
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.BrushSelectorEditor">
            <summary>
            Represents the BrushSelectorEditor class
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.BrushSelectorEditor.propertyViewItem">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyViewItem"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BrushSelectorEditor.Attach(Syncfusion.Windows.PropertyGrid.PropertyViewItem,Syncfusion.Windows.PropertyGrid.PropertyItem)">
            <summary>
            Represents the Attach method
            </summary>
            <param name="property"></param>
            <param name="info"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BrushSelectorEditor.Create(System.Reflection.PropertyInfo)">
            <summary>
            Creates and initializes a new instance of the built-in editor.
            </summary>
            <param name="propertyInfo">The PropertyInformation</param>
            <returns>The ColorPickerEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BrushSelectorEditor.Create(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates and initializes a new instance of the custom editor. This method will be called for properties of type dynamic, ExpandoObject  or ICustomTypeDescriptor. 
            </summary>
            <param name="PropertyDescriptor">The PropertyDescriptor</param>
            <returns>The ColorPickerEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BrushSelectorEditor.CreateEditor">
            <summary>
            Creates and initializes a new instance of the ColorPicker editor.
            </summary>
            <returns>The ColorPickerEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BrushSelectorEditor.Control_PreviewKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs when a key is pressed while focus is on <see cref="T:Syncfusion.Windows.PropertyGrid.BrushSelectorEditor"/>
            </summary>
            <param name="sender">The BrushSelectorEditor</param>
            <param name="e">The event data</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BrushSelectorEditor.ShouldPropertyGridTryToHandleKeyDown(System.Windows.Input.Key)">
            <summary>
            Overrides the handling of keydown event. If the method returns true, PropertyGrid handles the KeyDown event and focus will be moved to next focusable editor, otherwise the event will not handle by the PropertyGrid.
            </summary>
            <param name="key">A <see cref="T:System.Windows.Input.KeyEventArgs" /> object.</param>
            <returns>True if the property grid should be allowed to handle keys; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BrushSelectorEditor.Detach(Syncfusion.Windows.PropertyGrid.PropertyViewItem)">
            <summary>
            Represents the Detach method
            </summary>
            <param name="property"></param>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.CheckBoxEditor">
            <summary>
            Represents the CheckBoxEditor
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.CheckBoxEditor.propertyViewItem">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyViewItem"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CheckBoxEditor.Attach(Syncfusion.Windows.PropertyGrid.PropertyViewItem,Syncfusion.Windows.PropertyGrid.PropertyItem)">
            <summary>
            Represents the Attach method
            </summary>
            <param name="property"></param>
            <param name="info"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CheckBoxEditor.Create(System.Reflection.PropertyInfo)">
            <summary>
            Creates and initializes a new instance of the built-in editor.  
            </summary>
            <param name="propertyInfo">The PropertyInformation</param>
            <returns>The CheckBoxEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CheckBoxEditor.Create(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates and initializes a new instance of the custom editor. This method will be called for properties of type dynamic, ExpandoObject  or ICustomTypeDescriptor. 
            </summary>
            <param name="PropertyDescriptor">The PropertyDescriptor</param>
            <returns>The CheckBoxEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CheckBoxEditor.CreateEditor">
            <summary>
            Creates and initializes a new instance of the CheckBox editor.
            </summary>
            <returns>The CheckBoxEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CheckBoxEditor.Control_PreviewKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs when a key is pressed while focus is on <see cref="T:Syncfusion.Windows.PropertyGrid.CheckBoxEditor"/>
            </summary>
            <param name="sender">The CheckBoxEditor</param>
            <param name="e">The event data</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CheckBoxEditor.ShouldPropertyGridTryToHandleKeyDown(System.Windows.Input.Key)">
            <summary>
            Overrides the handling of keydown event. If the method returns true, PropertyGrid handles the KeyDown event and focus will be moved to next focusable editor, otherwise the event will not handle by the PropertyGrid.
            </summary>
            <param name="key">A <see cref="T:System.Windows.Input.KeyEventArgs" /> object.</param>
            <returns>True if the property grid should be allowed to handle keys; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CheckBoxEditor.Detach(Syncfusion.Windows.PropertyGrid.PropertyViewItem)">
            <summary>
            Represents the Detach method
            </summary>
            <param name="property"></param>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.DateTimeEditor">
            <summary>
            Represents the DateTimeEditor class
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.DateTimeEditor.propertyViewItem">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyViewItem"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DateTimeEditor.Attach(Syncfusion.Windows.PropertyGrid.PropertyViewItem,Syncfusion.Windows.PropertyGrid.PropertyItem)">
            <summary>
            Represents the Attach method
            </summary>
            <param name="property"></param>
            <param name="info"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DateTimeEditor.Create(System.Reflection.PropertyInfo)">
            <summary>
            Creates and initializes a new instance of the built-in editor.  
            </summary>
            <param name="propertyInfo">The PropertyInformation</param>
            <returns>The DateTimeEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DateTimeEditor.Create(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates and initializes a new instance of the custom editor. This method will be called for properties of type dynamic, ExpandoObject  or ICustomTypeDescriptor. 
            </summary>
            <param name="PropertyDescriptor">The PropertyDescriptor</param>
            <returns>The DateTimeEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DateTimeEditor.CreateEditor">
            <summary>
            Creates and initializes a new instance of the DateTime editor.
            </summary>
            <returns>The DateTimeEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DateTimeEditor.Control_PreviewKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs when a key is pressed while focus is on <see cref="T:Syncfusion.Windows.PropertyGrid.DateTimeEditor"/>
            </summary>
            <param name="sender">The DateTimeEditor</param>
            <param name="e">The event data</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DateTimeEditor.ShouldPropertyGridTryToHandleKeyDown(System.Windows.Input.Key)">
            <summary>
            Overrides the handling of keydown event. If the method returns true, PropertyGrid handles the KeyDown event and focus will be moved to next focusable editor, otherwise the event will not handle by the PropertyGrid.
            </summary>
            <param name="key">A <see cref="T:System.Windows.Input.KeyEventArgs" /> object.</param>
            <returns>True if the property grid should be allowed to handle keys; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DateTimeEditor.Detach(Syncfusion.Windows.PropertyGrid.PropertyViewItem)">
            <summary>
            Represents the Detach method
            </summary>
            <param name="property"></param>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.DoubleTextBoxEditor">
            <summary>
            Represents the DoubleTextBoxEditor
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.DoubleTextBoxEditor.propertyViewItem">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyViewItem"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DoubleTextBoxEditor.Attach(Syncfusion.Windows.PropertyGrid.PropertyViewItem,Syncfusion.Windows.PropertyGrid.PropertyItem)">
            <summary>
            Represents the Attach method
            </summary>
            <param name="property"></param>
            <param name="info"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DoubleTextBoxEditor.Create(System.Reflection.PropertyInfo)">
            <summary>
            Creates and initializes a new instance of the built-in editor.  
            </summary>
            <param name="propertyInfo">The PropertyInformation</param>
            <returns>The DoubleTextBoxEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DoubleTextBoxEditor.Create(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates and initializes a new instance of the custom editor. This method will be called for properties of type dynamic, ExpandoObject  or ICustomTypeDescriptor. 
            </summary>
            <param name="PropertyDescriptor">The PropertyDescriptor</param>
            <returns>The DoubleTextBoxEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DoubleTextBoxEditor.CreateEditor">
            <summary>
            Creates and initializes a new instance of the DoubleTextBox editor.
            </summary>
            <returns>The DoubleTextBoxEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DoubleTextBoxEditor.SetDoubleTextBoxValue(System.Type,System.String)">
            <summary>
            Set the properties of DoubleTextBox based on <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/> type.
            </summary>
            <param name="propertyType">The PropertyType</param>
            <param name="name">The PropertyName</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DoubleTextBoxEditor.Control_PreviewKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs when a key is pressed while focus is on <see cref="T:Syncfusion.Windows.PropertyGrid.DoubleTextBoxEditor"/>
            </summary>
            <param name="sender">The DoubleTextBoxEditor</param>
            <param name="e">The event data</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DoubleTextBoxEditor.ShouldPropertyGridTryToHandleKeyDown(System.Windows.Input.Key)">
            <summary>
            Overrides the handling of keydown event. If the method returns true, PropertyGrid handles the KeyDown event and focus will be moved to next focusable editor, otherwise the event will not handle by the PropertyGrid.
            </summary>
            <param name="key">A <see cref="T:System.Windows.Input.KeyEventArgs" /> object.</param>
            <returns>True if the property grid should be allowed to handle keys; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DoubleTextBoxEditor.Detach(Syncfusion.Windows.PropertyGrid.PropertyViewItem)">
            <summary>
            Represents the Detach method
            </summary>
            <param name="property"></param>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.TimeSpanEditor">
            <summary>
            Represents the DateTimeEditor class
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.TimeSpanEditor.propertyViewItem">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyViewItem"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.TimeSpanEditor.Attach(Syncfusion.Windows.PropertyGrid.PropertyViewItem,Syncfusion.Windows.PropertyGrid.PropertyItem)">
            <summary>
            Represents the Attach method
            </summary>
            <param name="property"></param>
            <param name="info"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.TimeSpanEditor.Create(System.Reflection.PropertyInfo)">
            <summary>
            Creates and initializes a new instance of the built-in editor.  
            </summary>
            <param name="propertyInfo">The PropertyInformation</param>
            <returns>The TimeSpanEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.TimeSpanEditor.Create(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates and initializes a new instance of the custom editor. This method will be called for properties of type dynamic, ExpandoObject  or ICustomTypeDescriptor. 
            </summary>
            <param name="PropertyDescriptor">The PropertyDescriptor</param>
            <returns>The TimeSpanEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.TimeSpanEditor.CreateEditor">
            <summary>
            Creates and initializes a new instance of the TimeSpan editor.
            </summary>
            <returns>The TimeSpanEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.TimeSpanEditor.Control_PreviewKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs when a key is pressed while focus is on <see cref="T:Syncfusion.Windows.PropertyGrid.TimeSpanEditor"/>
            </summary>
            <param name="sender">The TimeSpanEditor</param>
            <param name="e">The event data</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.TimeSpanEditor.ShouldPropertyGridTryToHandleKeyDown(System.Windows.Input.Key)">
            <summary>
            Overrides the handling of keydown event. If the method returns true, PropertyGrid handles the KeyDown event and focus will be moved to next focusable editor, otherwise the event will not handle by the PropertyGrid.
            </summary>
            <param name="key">A <see cref="T:System.Windows.Input.KeyEventArgs" /> object.</param>
            <returns>True if the property grid should be allowed to handle keys; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.TimeSpanEditor.Detach(Syncfusion.Windows.PropertyGrid.PropertyViewItem)">
            <summary>
            Represents the Detach method
            </summary>
            <param name="property"></param>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.EnumComboEditor">
            <summary>
            Represents the EnumComboEditor class
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.EnumComboEditor.propertyViewItem">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyViewItem"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.EnumComboEditor.Attach(Syncfusion.Windows.PropertyGrid.PropertyViewItem,Syncfusion.Windows.PropertyGrid.PropertyItem)">
            <summary>
            Represents the Attach method
            </summary>
            <param name="property"></param>
            <param name="info"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.EnumComboEditor.Create(System.Reflection.PropertyInfo)">
            <summary>
            Creates and initializes a new instance of the built-in editor.  
            </summary>
            <param name="propertyInfo">The PropertyInformation</param>
            <returns>The EnumComboEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.EnumComboEditor.Create(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates and initializes a new instance of the custom editor. This method will be called for properties of type dynamic, ExpandoObject  or ICustomTypeDescriptor. 
            </summary>
            <param name="PropertyDescriptor">The PropertyDescriptor</param>
            <returns>The EnumComboEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.EnumComboEditor.CreateEditor">
            <summary>
            Creates and initializes a new instance of the ComboBox editor.
            </summary>
            <returns>The EnumComboEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.EnumComboEditor.Control_PreviewKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs when a key is pressed while focus is on <see cref="T:Syncfusion.Windows.PropertyGrid.EnumComboEditor"/>
            </summary>
            <param name="sender">The EnumComboEditor</param>
            <param name="e">The event data</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.EnumComboEditor.ShouldPropertyGridTryToHandleKeyDown(System.Windows.Input.Key)">
            <summary>
            Overrides the handling of keydown event. If the method returns true, PropertyGrid handles the KeyDown event and focus will be moved to next focusable editor, otherwise the event will not handle by the PropertyGrid.
            </summary>
            <param name="key">A <see cref="T:System.Windows.Input.KeyEventArgs" /> object.</param>
            <returns>True if the property grid should be allowed to handle keys; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.EnumComboEditor.Detach(Syncfusion.Windows.PropertyGrid.PropertyViewItem)">
            <summary>
            Represents the detach method
            </summary>
            <param name="property"></param>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.FontComboEditor">
            <summary>
            Represents the FontComboEditor class
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.FontComboEditor.propertyViewItem">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyViewItem"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.FontComboEditor.Attach(Syncfusion.Windows.PropertyGrid.PropertyViewItem,Syncfusion.Windows.PropertyGrid.PropertyItem)">
            <summary>
            Represents the Attach method
            </summary>
            <param name="property"></param>
            <param name="info"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.FontComboEditor.Create(System.Reflection.PropertyInfo)">
            <summary>
            Creates and initializes a new instance of the built-in editor.
            </summary>
            <param name="propertyInfo">The PropertyInformation</param>
            <returns>The FontComboEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.FontComboEditor.Create(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates and initializes a new instance of the custom editor. This method will be called for properties of type dynamic, ExpandoObject  or ICustomTypeDescriptor. 
            </summary>
            <param name="PropertyDescriptor">The PropertyDescriptor</param>
            <returns>The FontComboEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.FontComboEditor.CreateEditor">
            <summary>
            Creates and initializes a new instance of the FontCombo editor.
            </summary>
            <returns>The FontComboEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.FontComboEditor.SetFontComboValue(System.Type)">
            <summary>
            Set the properties of FontComboBox based on <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/> type.
            </summary>
            <param name="PropertyType">The PropertyType</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.FontComboEditor.Control_PreviewKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs when a key is pressed while focus is on <see cref="T:Syncfusion.Windows.PropertyGrid.FontComboEditor"/>
            </summary>
            <param name="sender">The FontComboEditor</param>
            <param name="e">The event data</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.FontComboEditor.ShouldPropertyGridTryToHandleKeyDown(System.Windows.Input.Key)">
            <summary>
            Overrides the handling of keydown event. If the method returns true, PropertyGrid handles the KeyDown event and focus will be moved to next focusable editor, otherwise the event will not handle by the PropertyGrid.
            </summary>
            <param name="key">A <see cref="T:System.Windows.Input.KeyEventArgs" /> object.</param>
            <returns>True if the property grid should be allowed to handle keys; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.FontComboEditor.Detach(Syncfusion.Windows.PropertyGrid.PropertyViewItem)">
            <summary>
            Represents the detach method
            </summary>
            <param name="property"></param>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.IntegerTextBoxEditor">
            <summary>
            Represents the IntegerTextBoxEditor class
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.IntegerTextBoxEditor.propertyViewItem">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyViewItem"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.IntegerTextBoxEditor.Attach(Syncfusion.Windows.PropertyGrid.PropertyViewItem,Syncfusion.Windows.PropertyGrid.PropertyItem)">
            <summary>
            Represents the Attach method
            </summary>
            <param name="property"></param>
            <param name="info"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.IntegerTextBoxEditor.Create(System.Reflection.PropertyInfo)">
            <summary>
            Creates and initializes a new instance of the built-in editor.  
            </summary>
            <param name="propertyInfo">The PropertyInformation</param>
            <returns>The IntegerTextBoxEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.IntegerTextBoxEditor.Create(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates and initializes a new instance of the custom editor. This method will be called for properties of type dynamic, ExpandoObject  or ICustomTypeDescriptor. 
            </summary>
            <param name="PropertyDescriptor">The PropertyDescriptor</param>
            <returns>The IntegerTextBoxEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.IntegerTextBoxEditor.CreateEditor">
            <summary>
            Creates and initializes a new instance of the IntegerTextBox editor.
            </summary>
            <returns>The IntegerTextBoxEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.IntegerTextBoxEditor.SetIntegerTextBoxValue(System.Type)">
            <summary>
            Set the properties of IntegerTextBox based on <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/> type.
            </summary>
            <param name="propertyType">The PropertyType</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.IntegerTextBoxEditor.Control_PreviewKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs when a key is pressed while focus is on <see cref="T:Syncfusion.Windows.PropertyGrid.IntegerTextBoxEditor"/>
            </summary>
            <param name="sender">The IntegerTextBoxEditor</param>
            <param name="e">The event data</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.IntegerTextBoxEditor.ShouldPropertyGridTryToHandleKeyDown(System.Windows.Input.Key)">
            <summary>
            Overrides the handling of keydown event. If the method returns true, PropertyGrid handles the KeyDown event and focus will be moved to next focusable editor, otherwise the event will not handle by the PropertyGrid.
            </summary>
            <param name="key">A <see cref="T:System.Windows.Input.KeyEventArgs" /> object.</param>
            <returns>True if the property grid should be allowed to handle keys; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.IntegerTextBoxEditor.Detach(Syncfusion.Windows.PropertyGrid.PropertyViewItem)">
            <summary>
            Represents the Detach method
            </summary>
            <param name="property"></param>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.Int64ToInt32ConverterForIntegerTextBox">
            <summary>
            Represents the Converter which converts Int64toInt32
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.Int64ToInt32ConverterForIntegerTextBox.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value produced by the binding source.</param><param name="targetType">The type of the binding target property.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.Int64ToInt32ConverterForIntegerTextBox.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.</param><param name="targetType">The type to convert to.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.ITypeCustomEditor">
            <summary>
            Represents the interface ITypeCustomEditor
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.ITypeCustomEditor.Editor">
            <summary>
            Get and set the Editor 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.ITypeCustomEditor.Properties">
            <summary>
            Get and set the Properties values
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.ITypeCustomEditor.PropertyType">
            <summary>
            Get and set the PropertyType
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.ITypeCustomEditor.HasPropertyType">
            <summary>
            Get and set the HasPropertyType
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.ITypeCustomEditor.EditorType">
             <summary>
            Gets or sets the value that represents the type of the editor for the properties configured.
            </summary>
             <remarks>
             New editor instance is created for each properties configured.
             When both <see cref="P:Syncfusion.Windows.PropertyGrid.ITypeCustomEditor.EditorType"/> and <see cref="P:Syncfusion.Windows.PropertyGrid.ITypeCustomEditor.Editor"/> is specified, EditorType property has more precedence then Editor property. 
             Use <see cref="P:Syncfusion.Windows.PropertyGrid.ITypeCustomEditor.Editor"/> to configure same editor for specified properties.
            </remarks>
            <value>
             Default value is null.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.CustomEditor">
            <summary>
            Represents the CustomEditor class
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CustomEditor.#ctor">
            <summary>
            Represents the CustomEditor Constructor
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.CustomEditor.Editor">
            <summary>
            Get and set the Editor 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.CustomEditor._Properties">
            <summary>
            Represents the Properties property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.CustomEditor.Properties">
             <summary>
            Get and Set the collection of properties
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.CustomEditor.PropertyType">
            <summary>
            Get and set the PropertyType
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.CustomEditor.HasPropertyType">
            <summary>
            Get and Set the HasPropertyType
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.CustomEditor.EditorType">
             <summary>
            Gets or sets the value that represents the type of the editor for the properties configured.
            </summary>
             <remarks>
             New editor instance is created for each properties configured.
             When both <see cref="P:Syncfusion.Windows.PropertyGrid.CustomEditor.EditorType"/> and <see cref="P:Syncfusion.Windows.PropertyGrid.CustomEditor.Editor"/> is specified, EditorType property has more precedence then Editor property. 
             Use <see cref="P:Syncfusion.Windows.PropertyGrid.CustomEditor.Editor"/> to configure same editor for specified properties.
            </remarks>
            <value>
             Default value is null.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.CustomEditor.ConstructorParameters">
            <summary>
            Gets or sets the parameters that are used to create the instance of type specified in <see cref="P:Syncfusion.Windows.PropertyGrid.CustomEditor.EditorType"/>.
            </summary>
            <value>
            The default value is null.
            </value>
            <remarks>
            When value is null, editor is created using default constructor.
            When value is specified, editor is created based on specified type using the constructor that best matches the specified parameters.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.CustomEditorCollection">
            <summary>
            Represents the CustomEditorCollection class
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.CustomEditorCollection.Item(System.Type)">
            <summary>
            Get the ITypeCustomEditor
            </summary>
            <param name="PropertyType"></param>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.CustomEditorCollection.Item(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="PropertyName"></param>
            <param name="PropertyType"></param>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.ITypeEditor">
            <summary>
            Represents the ITypeEditor Interface
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ITypeEditor.Attach(Syncfusion.Windows.PropertyGrid.PropertyViewItem,Syncfusion.Windows.PropertyGrid.PropertyItem)">
            <summary>
            
            </summary>
            <param name="property"></param>
            <param name="info"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ITypeEditor.Create(System.Reflection.PropertyInfo)">
            <summary>
            
            </summary>
            <param name="PropertyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ITypeEditor.Detach(Syncfusion.Windows.PropertyGrid.PropertyViewItem)">
            <summary>
            Represents the Detach method
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ITypeEditor.ShouldPropertyGridTryToHandleKeyDown(System.Windows.Input.Key)">
            <summary> 
            Determines whether the custom editor should handle the KeyDown event. 
            </summary> 
            <param name="key">The key that was pressed.</param> 
            <returns>Returns false if the custom editor handles the KeyDown event, true otherwise.</returns> 
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ITypeEditor.Create(System.ComponentModel.PropertyDescriptor)">
            <summary> 
            Creates and initializes a new instance of the custom editor for properties of type dynamic, ExpandoObject, or ICustomTypeDescriptor. 
            </summary> 
            <param name="propertyDescriptor">The property descriptor for the dynamic object.</param> 
            <returns>Returns an editor for editing the property of the dynamic object.</returns> 
            <remarks> 
            This method will only be called if the selected object is a dynamic object. 
            If the selected object is not a dynamic object, this method will never be called. 
            </remarks> 
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.BaseTypeEditor">
            <summary>
            Represents an abstract base class for a PropertyEditor class where the property values are displayed using the appropriate editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BaseTypeEditor.Attach(Syncfusion.Windows.PropertyGrid.PropertyViewItem,Syncfusion.Windows.PropertyGrid.PropertyItem)">
            <summary>
            Attaches the appropriate property of editor to the PropertyItem
            </summary>
            <param name="property">PropertyViewItem of the Editor</param>
            <param name="info">PropertyItem of the Editor</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BaseTypeEditor.Create(System.Reflection.PropertyInfo)">
            <summary>
            Creates and Initializes the Editor
            </summary>
            <param name="PropertyInfo">Information about the Property</param>
            <returns>Returns the editor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BaseTypeEditor.Create(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates and initializes a new instance of the custom editor. This method will be called for properties of type dynamic, ExpandoObject or ICustomTypeDescriptor.
            </summary>
            <param name="PropertyDescriptor">The PropertyDescriptor</param>
            <remarks>
            <see cref="M:Syncfusion.Windows.PropertyGrid.BaseTypeEditor.Create(System.Reflection.PropertyInfo)"/> will be called when <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.SelectedObject"/> is not dynamic, ExpandoObject or ICustomTypeDescriptor Type.
            </remarks>
            <returns>The Editor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BaseTypeEditor.Detach(Syncfusion.Windows.PropertyGrid.PropertyViewItem)">
            <summary>
            Detaches (releases) the editor that was attached with the property.
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BaseTypeEditor.ShouldPropertyGridTryToHandleKeyDown(System.Windows.Input.Key)">
            <summary>
            Overrides the handling of keydown event. If the method returns true, PropertyGrid handles the KeyDown event and focus will be moved to next focusable editor, otherwise the event will not handle by the PropertyGrid.
            </summary>
            <param name="key">A <see cref="T:System.Windows.Input.KeyEventArgs" /> object.</param>
            <returns>True if the property grid should be allowed to handle keys; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.BaseTypeEditor.CreatePropertyInfoBinding(Syncfusion.Windows.PropertyGrid.PropertyItem,System.Windows.Controls.Control)">
            <summary>
            Create binding for Value property of PropertyItem
            </summary>
            <param name="info">Information about the PropertyItem</param>
            <param name="control">Control to update the property information</param>
            <returns>Returns binding value</returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.MaskEditor">
            <summary>
            Provides input mask, which is used to restricts the data input for a property in <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.MaskEditor.propertyViewItem">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyViewItem"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.MaskEditor.maskEdit">
            <summary>
            Gets or sets the mask text editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.MaskEditor.Mask">
            <summary>
            Gets or sets the mask for <see cref="T:Syncfusion.Windows.PropertyGrid.MaskEditor"/>.
            </summary>
            <value>The mask value.</value>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.MaskEditor.#ctor">
            <summary>
            Create and initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.MaskEditor"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.MaskEditor.Attach(Syncfusion.Windows.PropertyGrid.PropertyViewItem,Syncfusion.Windows.PropertyGrid.PropertyItem)">
            <summary>
            Represents the Attach method
            </summary>
            <param name="property">The propertyviewitem</param>
            <param name="info">The propertyitem</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.MaskEditor.Create(System.Reflection.PropertyInfo)">
            <summary>
            Creates and initializes a new instance of the built-in editor.  
            </summary>
            <param name="propertyInfo">The PropertyInformation</param>
            <returns>The MaskEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.MaskEditor.Create(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates and initializes a new instance of the custom editor. This method will be called for properties of type dynamic, ExpandoObject  or ICustomTypeDescriptor. 
            </summary>
            <param name="PropertyDescriptor">The PropertyDescriptor</param>
            <returns>The MaskEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.MaskEditor.CreateEditor">
            <summary>
            Creates and initializes a new instance of the mask text Editor.
            </summary>
            <returns>The MaskEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.MaskEditor.Control_PreviewKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs when a key is pressed while focus is on <see cref="T:Syncfusion.Windows.PropertyGrid.MaskEditor"/>
            </summary>
            <param name="sender">The MaskEditor</param>
            <param name="e">The event data</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.MaskEditor.ShouldPropertyGridTryToHandleKeyDown(System.Windows.Input.Key)">
            <summary>
            Overrides the handling of keydown event. If the method returns true, PropertyGrid handles the KeyDown event and focus will be moved to next focusable editor, otherwise the event will not handle by the PropertyGrid.
            </summary>
            <param name="key">A <see cref="T:System.Windows.Input.KeyEventArgs" /> object.</param>
            <returns>True if the property grid should be allowed to handle keys; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.MaskEditor.Detach(Syncfusion.Windows.PropertyGrid.PropertyViewItem)">
            <summary>
            Represents the detach method
            </summary>
            <param name="property">The propertyviewitem</param>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.TextBoxEditor">
            <summary>
            Represents the TextBoxEditor class
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.TextBoxEditor.propertyViewItem">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyViewItem"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.TextBoxEditor.#ctor">
            <summary>
            Represents the TextBoxEditor Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.TextBoxEditor.Attach(Syncfusion.Windows.PropertyGrid.PropertyViewItem,Syncfusion.Windows.PropertyGrid.PropertyItem)">
            <summary>
            Represents the Attach method
            </summary>
            <param name="property"></param>
            <param name="info"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.TextBoxEditor.Create(System.Reflection.PropertyInfo)">
            <summary>
            Creates and initializes a new instance of the built-in editor.  
            </summary>
            <param name="propertyInfo">The PropertyInformation</param>
            <returns>The TextBoxEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.TextBoxEditor.Create(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates and initializes a new instance of the custom editor. This method will be called for properties of type dynamic, ExpandoObject  or ICustomTypeDescriptor. 
            </summary>
            <param name="PropertyDescriptor">The PropertyDescriptor</param>
            <returns>The TextBoxEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.TextBoxEditor.CreateEditor">
            <summary>
            Creates and initializes a new instance of the TextBox editor.
            </summary>
            <returns>The TextBoxEditor</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.TextBoxEditor.Control_PreviewKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs when a key is pressed while focus is on <see cref="T:Syncfusion.Windows.PropertyGrid.TextBoxEditor"/>
            </summary>
            <param name="sender">The TextBoxEditor</param>
            <param name="e">The event data</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.TextBoxEditor.ShouldPropertyGridTryToHandleKeyDown(System.Windows.Input.Key)">
            <summary>
            Overrides the handling of keydown event. If the method returns true, PropertyGrid handles the KeyDown event and focus will be moved to next focusable editor, otherwise the event will not handle by the PropertyGrid.
            </summary>
            <param name="key">A <see cref="T:System.Windows.Input.KeyEventArgs" /> object.</param>
            <returns>True if the property grid should be allowed to handle keys; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.TextBoxEditor.Detach(Syncfusion.Windows.PropertyGrid.PropertyViewItem)">
            <summary>
            Represents the detach method
            </summary>
            <param name="property"></param>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.CategoryEditorProperty">
            <summary>
            Represents the CategoryEditorProperty
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.CategoryEditorProperty.Name">
            <summary>
            Get and Set the Name property
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.CategoryEditor">
            <summary>
            Represent the CategoryEditor property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.CategoryEditor.Category">
            <summary>
            Represents the Category property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.CategoryEditor.Description">
            <summary>
            Get and set the Description property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.CategoryEditor.DisplayName">
            <summary>
            Get and set the DisplayName property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.CategoryEditor.EditorTemplate">
            <summary>
            Get and set the EditorTemplate
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.CategoryEditor.Properties">
            <summary>
            Get and set the Properties 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyCategoryViewItemCollection">
            <summary>
            Represents the PropertyCategoryViewItemCollection
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyCategoryViewItemCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref='T:Syncfusion.Windows.PropertyGrid.PropertyCategoryViewItemCollection'/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyCategoryViewItemCollection.Properties">
            <summary>
            Get and Set the collection of Properties property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyCategoryViewItemCollection.Category">
            <summary>
            Get and set the Category property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyCategoryViewItemCollection.PropertyItemCollection">
            <summary>
            Gets or sets the collection of property items that are iterated from view source
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyCollection">
            <summary>
            Represents the PropertyCollection class
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyItemCollection">
            <summary>
            Represents PropertyItemCollection class
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItemCollection.Item(System.String)">
            <summary>
            
            </summary>
            <param name="PropertyName"></param>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.CategoryEditorCollection">
            <summary>
            Represents the CategroyEditorCollection class
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.CategoryEditorPropertyCollection">
            <summary>
            Represents the CateGoryEditorPropertyCollection class
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.IProperty">
            <summary>
            Represents the Iproperty Interface
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.IProperty.PropertyName">
            <summary>
            Get and set the PropertyName
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.IProperty.PropertyType">
            <summary>
            Get and set the PropertyType
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.DefaultMenuButton">
            <summary>
            DefaultMenuButton class
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DefaultMenuButton.#ctor">
            <summary>
            DefaultMenuButton constructor
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DefaultMenuButton.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel"/> attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseWheelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DefaultMenuButton.OnApplyTemplate">
            <summary>
            OnApplyTemplate() 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyGrid">
            <summary>
            
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.PropertyGrid.PropertyGrid.SelectedObjectChanged">
            <summary>
            Occurs when [selected object changed].
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.PropertyGrid.PropertyGrid.SelectedPropertyItemChanged">
            <summary>
            Occurs when [selected property changed].
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.PropertyGrid.PropertyGrid.SortDirectionChanged">
            <summary>
            Occurs when [sort direction changed].
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.PropertyGrid.PropertyGrid.EnableGroupingChanged">
            <summary>
            Occurs when [enable grouping changed].
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.PropertyGrid.PropertyGrid.ValueChanged">
            <summary>
            Occurs when [value changed].
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.PropertyGrid.PropertyGrid.MenuPopupOpening">
            <summary>
            Occurs when [MenuPopup Opening].
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.PropertyGrid.PropertyGrid.MenuPopupOpened">
            <summary>
            Occurs when [MenuPopup Opened].
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.PropertyGrid.PropertyGrid.AutoGeneratingPropertyGridItem">
            <summary>
            Occurs when propertyitem is adding to the property collection
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.PropertyGrid.PropertyGrid.CollectionEditorOpening">
            <summary>
            Occurs before <see cref="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.CollectionEditor"/> window is opening. 
            </summary>
            Remarks:
            You can cancel the opening of collection editor which used to edit the collections in property grid by setting <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> property. 
            Also, collection editor allows to add and delete the items in collection. You can set <IsReadyOnly/> property to disabled Add and Remove options in collection editor.
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.FlatTypeCollection">
            <summary>
            Represents the FlatTypeCollection
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.CollectionEditor">
            <summary>
            Gets or sets the collection editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.#cctor">
            <summary>
            Initializes the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.MenuItems">
            <summary>
            Get and set the MenuItems
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.MenuItemsProperty">
            <summary>
            Using a DependencyProperty as the backing store for MyProperty.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.AutoGenerateItems">
            <summary>
            Gets or sets a value that indicates whether the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/> automatically generate or not in <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/> based on selected object.
            </summary>
            <value>
            The default value is true.
            </value>
            <remarks>
            True, if the PropertyGrid property can be generated automatically based on selected object. 
            False, if the PropertyGrid PropertyItem can generated based on <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.Items"/>.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.AutoGenerateItemsProperty">
            <summary>
            Using a DependencyProperty as the backing store for AutoGenerateItems. This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.Items">
            <summary>
            Gets or sets the custom <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGridItem"/> collection in <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/>.
            </summary>
            <example>
             The following example shows how to set the Items collection of PropertyGrid in XAML.
            <code><![CDATA[
            <Window x:Class="PropertyGridConfigurationDemo.MainWindow" Icon="App.ico"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
            xmlns:local="clr-namespace:PropertyGridConfigurationDemo" 
            WindowStartupLocation="CenterScreen"
            Title="Getting Started"  Height="550" Width="750" 
            xmlns:syncfusion="clr-namespace:Syncfusion.Windows.PropertyGrid;assembly=Syncfusion.PropertyGrid.Wpf">
            <Window.DataContext>
            <local:ViewModel/>
            </Window.DataContext>
             <Grid>
              <syncfusion:PropertyGrid x:Name="pgrid" SelectedObject="{Binding EmployeeDetails}" AutoGenerateItems="false">
                <syncfusion:PropertyGrid.Items>
                    <syncfusion:PropertyGridItem PropertyName = "FirstName" DisplayName="Name"/>
                    <syncfusion:PropertyGridItem PropertyName = "Age" >
                        <syncfusion:PropertyGridItem.Editor>
                           <local:CustomIntegerTextBoxEditor/>
                        </syncfusion:PropertyGridItem.Editor>
                    </syncfusion:PropertyGridItem>
                    <syncfusion:PropertyGridItem PropertyName = "DOB" DisplayName="Birth Date" Description="Birth date of the actual person."/>
                    <syncfusion:PropertyGridItem PropertyName = "FavoriteColor" NestedPropertyDisplayMode="None"/>
                </syncfusion:PropertyGrid.Items>
              </syncfusion:PropertyGrid>
             </Grid>
            </Window>
            ]]></code>
            </example>
            <remarks>
            Populates only the property item which was defined in <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.Items"/> collection of <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/>.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.ItemsProperty">
            <summary>
            Using a DependencyProperty as the backing store for Items. This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.MenuButtonVisibility">
            <summary>
            Get and set the MenuButtonVisibility
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.MenuButtonVisibilityProperty">
            <summary>
             Using a DependencyProperty as the backing store for MyProperty.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.SelectedPropertyItem">
            <summary>
            Get and set the SelectedPropertyItem
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.SelectedPropertyItemProperty">
            <summary>
             Using a DependencyProperty as the backing store for MyProperty.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.DisableAnimationOnObjectSelection">
            <summary>
            enable or disable animation while loading selectedobject
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.DisableAnimationOnObjectSelectionProperty">
            <summary>
            enable or disable animation while loading selectedobject
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.LoadingDelay">
            <summary>
            LoadingDelay on MilliSeconds
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.LoadingDelayProperty">
            <summary>
            Using a DependencyProperty as the backing store for LoadingDelay.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.SelectedItems">
            <summary>
            Get and set the SeelctedItems property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.SelectedItemsProperty">
            <summary>
             Using a DependencyProperty as the backing store for SelectedItems.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.EditableBackground">
            <summary>
            Gets or sets the editable background.
            </summary>
            <value>The editable background.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.EditableBackgroundProperty">
            <summary>
            Using a DependencyProperty as the backing store for EditableBackground.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.SearchBoxVisibility">
            <summary>
            Get and set the SearchBoxVisibility
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.SearchBoxVisibilityProperty">
            <summary>
             Using a DependencyProperty as the backing store for SearchBoxVisibility.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.PropertyExpandMode">
            <summary>
            Get and set the PropertyExpandMode property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.PropertyExpandModeProperty">
            <summary>
            Using a DependencyProperty as the backing store for PropertyVisiblityMode.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.UpdateSourceMode">
            <summary>
            Gets or sets a value that determines when to update the values of <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.SelectedObject"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.UpdateSourceModeProperty">
            <summary>
            Using a DependencyProperty as the backing store for UpdateSourceMode. This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.EnableToolTip">
            <summary>
            Get and set the EnableToolTip property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.EnableToolTipProperty">
            <summary>
            Using a DependencyProperty as the backing store for EnableToolTip.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.EditableFontWeight">
            <summary>
            Gets or sets the editable font weight.
            </summary>
            <value>The editable font weight.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.EditableFontWeightProperty">
            <summary>
            Using a DependencyProperty as the backing store for EditableFontWeight.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.ReadOnlyBackground">
            <summary>
            Gets or sets the read only background.
            </summary>
            <value>The read only background.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.ReadOnlyBackgroundProperty">
            <summary>
            Using a DependencyProperty as the backing store for ReadOnlyBackground.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.ReadOnlyFontWeight">
            <summary>
            Gets or sets the read only font weight.
            </summary>
            <value>The read only font weight.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.ReadOnlyFontWeightProperty">
            <summary>
             Using a DependencyProperty as the backing store for ReadOnlyFontWeight.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.ButtonPanelVisibility">
            <summary>
            Gets or sets the button panel visibility.
            </summary>
            <value>The button panel visibility.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.ButtonPanelVisibilityProperty">
            <summary>
            Using a DependencyProperty as the backing store for ButtonPanelVisibility.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.CategoryForeground">
            <summary>
            Gets or sets the text color used for category headings.
            </summary>
            <value>The category foreground.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.CategoryForegroundProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.LineColor">
            <summary>
            Gets or sets the color of the borders and category heading background.
            </summary>
            <value>The color of the line.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.LineColorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.ViewBackgroundColor">
            <summary>
            Gets or sets the background color of the propertyview.
            </summary>
            <value>The color of the view background.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.ViewBackgroundColorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.DefaultPropertyPath">
            <summary>
            Get and Set the default property path for the property grid
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.DefaultPropertyPathProperty">
            <summary>
            Using a DependencyProperty as the backing store for DefaultPropertyPath.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.EnableGrouping">
            <summary>
            Gets or sets a value indicating whether [enable grouping].
            </summary>
            <value><c>true</c> if [enable grouping]; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.EnableGroupingProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.SelectedObject">
            <summary>
            Gets or sets the object for which the grid displays properties.
            </summary>
            <value>The selected object.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.SelectedObjectProperty">
            <summary>
             SelectedObject property used for displaying object which displays in the grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.VisualStyle">
            <summary>
            Gets or sets the visual style for PropertyGrid.
            </summary>
            <value>The visual style.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.VisualStyleProperty">
            <summary>
            Using a DependencyProperty as the backing store for VisualStyle.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.Properties">
            <summary>
            Gets or sets the properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.PropertiesProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.CategoryEditors">
            <summary>
            Gets or sets the category editors.
            </summary>
            <value>The category editors.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.CategoryEditorsProperty">
            <summary>
            Using a DependencyProperty as the backing store for CategoryEditors.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.SelectedObjectProperties">
            <summary>
            Gets or sets the selected object properties.
            </summary>
            <value>The selected object properties.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.SelectedObjectPropertiesProperty">
            <summary>
            Using a DependencyProperty as the backing store for SelectedObjectProperties.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.CustomProperties">
            <summary>
            Gets or sets the custom properties.
            </summary>
            <value>The custom properties.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.CustomPropertiesProperty">
            <summary>
            Using a DependencyProperty as the backing store for CustomProperties.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.DescriptionPanelVisibility">
            <summary>
            Get and Set the DescriptionPanelVisibility for the PropertyGridControl
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.DescriptionPanelVisibilityProperty">
            <summary>
            Using a DependencyProperty as the backing store for DescriptionPanelVisibility.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.DescriptionPanelHeight">
            <summary>
            Gets or set the height of description panel, or the GridLength value.
            </summary>
            <value>
            The GridLength that represents the height of the description panel. The default value is a GridLength representing a "auto" sizing.
            </value>
            <remarks>
            The <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.DescriptionPanelHeight"/> represents the height of the description panel which shows the description for selected property.
            If <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.DescriptionPanelHeight"/> uses <b>Auto</b> sizing, then the description panel occupies the height needs to show the description text.
            If <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.DescriptionPanelHeight"/> uses defined height (for example "100"), then description panel occupies the specfied height.
            If <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.DescriptionPanelHeight"/> uses <b>Star</b> sizing, for example if "0.5*" is the value, then description panel occupies the one third of the property grid height. Since the property items will have "1*" sizing.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.DescriptionPanelHeightProperty">
            <summary>
            Using a DependencyProperty as the backing store for DescriptionPanelHeight.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.PropertyNameColumnDefinition">
            <summary>
            Gets or set the width of property name column, or the GridLength value (supports double value and star sizing only).
            </summary>
            <Value>
            The GridLength that represents the width of the column.The default value is a GridLength representing a "1*" sizing.
            </Value>
            Remarks
            <PropertyColumnWidth/> accepts double value and a GridUnitType data value of Star. ///<PropertyColumnWidth/> doesn't support Auto sizing and throws exception. 
            If “200” is set to PropertyColumnWidth, then property name column occupies 200 pixels.
            Property value column always occupiers 1*, which cannot be changed. 
            If "0.5*" is  set to PropertyColumnWidth, then property name column occupies, one third of available width. Remaining two third is occupied by property value column.
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.PropertyNameColumnDefinitionProperty">
            <summary>
            Using a DependencyProperty as the backing store for ColumnWidth.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.SortDirection">
            <summary>
              Gets or sets the type of sorting the PropertyGrid uses to display properties.
            </summary>
            <value>The sort direction.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.SortDirectionProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.CollapseSidePanel">
            <summary>
            Gets or sets the CollapseSidePanel properties.
            </summary>
            <value>The CollapseSidePanel.</value>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.CollapseSidePanelProperty">
            <summary>
            CollapseSidePanel an dependency property for the collapsing the side panel of the PropertyGrid
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.HidePropertiesCollection">
            <summary>
            Gets or sets the hide properties collection.
            </summary>
            <value>The hide properties collection.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.HidePropertiesCollectionProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.CustomEditorCollection">
            <summary>
            Gets or sets the custom editor collection.
            </summary>
            <value>The custom editor collection.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.CustomEditorCollectionProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.IsVirtualizing">
             <summary>
             Gets or sets a value indicating whether the ProperrtyGrid virtualizing its PropertyItems. 
             <remarks>
             If, true animation is not working even DisableAnimationOnObjectSelection value is true . 
            Default value is True.
             </remarks>
             <example>
             <code language="XAML">
             <![CDATA[
             <syncfusion:Propertygrid IsVirtualzing=”true”/>
             ]]>
             </code>
             <code language="C#">
             <![CDATA[
            PropertyGrid propertyGrid = new PropertyGrid();
             propertygrid.IsVirtualizing = true; 
              ]]>
             </code>
             </example>
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.IsVirtualizingProperty">
            <summary>
             Using a DependencyProperty as the backing store for IsVirtualizing.  This enables animation, styling, binding, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.DescriptionTemplate">
            <summary>
            Gets or sets the template used to display the description of SelectedItem.
            </summary>
            <example>
            The following example shows how to define a Description template for property item in <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/> control.
            <code lang="Xaml"><![CDATA[
            <Grid x:Name="grid">
               <Grid.Resources>
                  <DataTemplate x:Key="template1">
                     <StackPanel>
                        <TextBlock Text = "{Binding Name}"
                                   FontSize="16" 
                                   Foreground="Red" 
                                   TextWrapping="Wrap"/>
                        <TextBlock Text = "{Binding Description}"
                                   FontSize="14" 
                                   Foreground="Green" 
                                   TextWrapping="Wrap"/>
                     </StackPanel>
                  </DataTemplate>
               </Grid.Resources>
               <syncfusion:PropertyGrid x:Name="propertyGrid1"
                                        DescriptionPanelVisibility="Visible"
                                        DescriptionTemplate="{StaticResource template1}">
                  <syncfusion:PropertyGrid.SelectedObject>
                      <local:Employee></local:Employee>
                  </syncfusion:PropertyGrid.SelectedObject>
               </syncfusion:PropertyGrid>
            </Grid>
            ]]></code>
            <code lang="C#"><![CDATA[
            public class Employee
            {
               [Description("Name of the employee")]
               public string Name { get; set; }
               [Description("ID of the employee")]
               public string ID { get; set; }
               [Description("Birth date of the employee")]
               public DateTime DOB { get; set; }
               [Description("Age of the employee")]
               public int Age { get; set; }
               public Employee()
               {
                  Name = "John";
                  ID = "381";
                  DOB = new DateTime(1995, 12, 24);
                  Age = 26;
               }
            } 
            ]]></code>
            ***
            </example>
            <returns>
            The template that defines the appearance of the description Panel.
            </returns>
            <remarks>
            DataContext of <b>DescriptionTemplate</b> is <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/>.
            <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/> has Name, Description and other useful properties, that can be bounded to the DescriptionTemplate.
            DescriptionTemplate can be defined in Autogenerating event, PropertyGridItem and PropertyGrid. 
            AutoGeneratingPropertyGridItemEventArgs.DescriptionTemplate takes the highest precedence, PropertyGridItem.DescriptionTemplate takes second precedence, and PropertyGrid.DescriptionTemplate takes the last precedence.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.DescriptionTemplateProperty">
            <summary>
             Using a DependencyProperty as the backing store for DescriptionTemplate.  This enables animation, styling, binding, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.DescriptionTemplateSelector">
            <summary>
            Gets or sets the DataTemplateSelector, which allows the user can choose the custom template that is used to display the description of SelectedItem.
            </summary>
            <value>
            The Default value is null.
            </value>
            <returns>
            The DataTemplateSelector that returns a template that defines the appearance of description Panel. 
            </returns>
            <remarks>
            The DataContext is <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/>, you can set the Name and Description values to customize Descriptions.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.DescriptionTemplateSelectorProperty">
            <summary>
             Using a DependencyProperty as the backing store for DescriptionTemplateSelector.  This enables animation, styling, binding, etc.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.RefreshPropertygrid">
            <summary>
            Refesh the property Grid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.ResetAll">
            <summary>
            ReserAll method
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.DetachEditors">
            <summary>
             Calls the dispose method of all the editors in PropertyGrid
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.Dispose(System.Boolean)">
            <summary>
            Dispose to clear managed resources
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.Dispose">
            <summary>
            Dispose to clear managed resources
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.ParseObject(System.Object)">
            <summary>
            Helps to generate the property items in PropertyGrid control.
            </summary>
            <param name="objItem">The Selected object.</param>
            <returns>The property collection</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.UpdateValueOfNestedPropertyItem(System.ComponentModel.PropertyDescriptor,Syncfusion.Windows.PropertyGrid.PropertyItem,System.Object)">
            <summary>
            Updates SelectedObject and Value of child property items when the value of the ParentPropertyItem is changed
            </summary>
            <param name="propertyDescriptor">PropertyDescriptor</param>
            <param name="parentPropertyItem">Parent property item to update properties of child items</param>
            <param name="objItem">Value of ParentPropertyItem</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.AutoGeneratePropertyItems(System.Object,Syncfusion.Windows.PropertyGrid.PropertyItemCollection,Syncfusion.Windows.PropertyGrid.PropertyItem)">
            <summary>
            Helps to generate property item in PropertyGrid control.
            </summary>
            <param name="objItem">The SelectedObject</param>
            <param name="propertyCollection">The PropertyItemCollection</param>
            <param name="parentPropertyItem">The ParentPropertyItem</param>
            <returns>The PropertyItemCollection</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.CanSetEditor(Syncfusion.Windows.PropertyGrid.PropertyItem,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Helps to check whether we can set editor for PropertyItem.
            </summary>
            <param name="parentPropertyItem">The ParentPropertyItem</param>
            <param name="propDescriptor">The PropertyDescriptor</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.CanSetValue(Syncfusion.Windows.PropertyGrid.PropertyItem,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Helps to check whether we can set value for PropertyItem.
            </summary>
            <param name="parentPropertyItem">The ParentPropertyItem</param>
            <param name="propDescriptor">The PropertyDescriptor</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.SetMaskEditor(System.Object,Syncfusion.Windows.PropertyGrid.PropertyItem,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Helps to set the MaskEditor when mask attribute is set in PropertyItem.
            </summary>
            <param name="objItem">The SelectedObject</param>
            <param name="propertyItem">The property item</param>
            <param name="propertyDescriptor">The property descriptor</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.GetPropertyDescriptors(System.Object,Syncfusion.Windows.PropertyGrid.PropertyGrid)">
            <summary>
            
            </summary>
            <param name="instance"></param>
            <param name="propertyGrid"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.HasDefaultConstructor(System.Type)">
            <summary>
            Helps to get the whether the type has parameterless constructor or not.
            </summary>
            <param name="t">The type</param>
            <returns>true if it has parameterless constructor, otherwise false</returns>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.previousSelectedCategory">
            <summary>
            Field to store the selected category item
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.categoryCollection">
            <summary>
            Field to store the category collection
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.selectedPropertyCategoryViewItemCollection">
            <summary>
            Field to store the selected category view item collection
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.doesPreviousEditorHasFocus">
            <summary>
            Indicates whether the Editor has focus or not
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs when a key is pressed while focus is on <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/>
            </summary>
            <param name="e">Provides data for the System.Windows.UIElement.KeyDown event</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.HandleHomeEndKey(System.Windows.Input.Key)">
            <summary>
            Method handles the Home and End key is pressed while focus is on <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/>
            </summary>
            <param name="key">Key arguments to handle</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.BringItemIntoView(System.Int32,System.Windows.Media.Visual)">
            <summary>
            Brings the Desired Item into View
            </summary>
            <param name="itemIndex">Index of the Item </param>
            <param name="visual">Visual which contains the item</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.MoveFocusToSelectedItem">
            <summary>
            To move the keyboard focus to the selected item
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.SelectVisibilePropertyCatagoryViewItem(Syncfusion.Windows.PropertyGrid.PropertyCollection)">
            <summary>
            Selects the Header of the Visibile PropertyCategoryViewItem of PropertyGrid
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.SelectVisiblePropertyViewItem(Syncfusion.Windows.PropertyGrid.PropertyCollection)">
            <summary>
            Selects the visible PropertyViewItem of the PropertyGrid
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.GetPropertyViewItem(System.Windows.Input.Key,Syncfusion.Windows.PropertyGrid.PropertyViewItem)">
            <summary>
            Retrieving property view item based on SelectedProperty item
            </summary>
            <param name="Key">Key to do navigation</param>
            <param name="selectedPropertyViewItem">Selected PropertyViewItem of PropertyGrid</param>
            <returns>Selected PropertyViewItem</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.GetNestedPropertyViewItem(Syncfusion.Windows.PropertyGrid.PropertyViewItem,System.Windows.Input.Key,System.Boolean)">
            <summary>
            Retrieving Nested property view item based on SelectedProperty item.
            </summary>
            <param name="key">Key to do navigation</param>
            <param name="canCheckNestedItem"></param>
            <param name="selectedPropertyViewItem">Selected PropertyViewItem of PropertyGrid</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.GetFirstOrLastItem(Syncfusion.Windows.PropertyGrid.PropertyViewItem,System.Windows.Input.Key)">
            <summary>
            Retrieving First or Last property view item based on SelectedProperty item.
            </summary>
            <param name="key">Key to do navigation</param>
            <param name="selectedPropertyViewItem">Selected PropertyViewItem of PropertyGrid</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.GetFirstLevelPropertyViewItem(Syncfusion.Windows.PropertyGrid.PropertyViewItem,System.Windows.Input.Key)">
            <summary>
            Retrieving First Level property view item based on SelectedProperty item.
            </summary>
            <param name="key">Key to do navigation</param>
            <param name="selectedPropertyViewItem">Selected PropertyViewItem of PropertyGrid</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.UpdateFocusToCategoryHeader(Syncfusion.Windows.PropertyGrid.PropertyViewItem,System.Windows.Input.Key)">
            <summary>
            Retrieving focus update, property view item based on SelectedProperty item.
            </summary>
            <param name="key">Key to do navigation</param>
            <param name="selectedPropertyViewItem">Selected PropertyViewItem of PropertyGrid</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.CategoryNavigtaion(System.Windows.Input.Key)">
            <summary>
            To do property item navigation within CategoryItems
            </summary>
            <param name="key">Key to perform up or down navigation</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.GetPropertyCategoryViewItemCollection(System.String)">
            <summary>
            Retrieve the Category item collection based on category
            </summary>
            <param name="category">Category to find the collection</param>
            <returns>Returns Category Item collection</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.GetCategoryViewItem(System.Int32)">
            <summary>
            Retrieve CategoryViewItem from the property container based on index
            </summary>
            <param name="categoryItemIndex">Index to retrieve the item</param>
            <returns>PropertyCategory item</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.UpdateSelectedtItem(Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem,System.Int32,Syncfusion.Windows.PropertyGrid.PropertyViewItem,System.Windows.Input.Key)">
            <summary>
            Updating SelectedItem based on property item index
            </summary>
            <param name="propertyCatagoryViewItem">Category of the PropertyItem</param>
            <param name="propertyItemIndex">Index to get the property item</param>
            <param name="propertyViewItem">Selected PropertyViewItem</param>
            <param name="key">Key to do navigation</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.NestedPropertyItemsNavigation(System.Windows.Input.Key,Syncfusion.Windows.PropertyGrid.PropertyViewItem)">
            <summary>
            Navigation between the proeprties of Nested proeprty items
            </summary>
            <param name="key"></param>
            <param name="selectedPropertyViewItem"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.CategoryItemHeaderNavigation(System.Int32,System.Windows.Input.Key,System.Int32,Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem)">
            <summary>
            Navigation to CategoryItem header
            </summary>
            <param name="selectedPropertyIndex">Index of SelectedPropertyItem</param>
            <param name="key">Key to do navigation</param>
            <param name="propertyItemIndex">Index of the property item to navigate</param>
            <param name="propertyCatagoryViewItem">CategoryViewItem to get appropriate proeprty view item</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.ExpandCategory(System.String)">
            <summary>
            Expand collapsed category group based on the CategoryName
            </summary>
            <param name="category">Category to expand the CategoryGroup</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.CollapseCategory(System.String)">
            <summary>
            Collapse the expanded category group based on the CategoryName
            </summary>
            <param name="category">Category to collapse the CateogryGroup</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.ToggleCategoryGroup(System.String,System.Boolean)">
            <summary>
            Expand/Collapse Category group based on the CategoryName
            </summary>
            <param name="category">CategoryName to do expansion or collapse</param>
            <param name="doExpand">Do expansion of category group if param is true, otherwise category group will be collapse</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.UpdateSelectedCategory">
            <summary>
            Updating SelectedCategoryCollection based on selected item
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.PropertyItemsNavigation(System.Windows.Input.Key,Syncfusion.Windows.PropertyGrid.PropertyViewItem,System.Double)">
            <summary>
            Navigation between first level proeprty items
            </summary>
            <param name="key">Key to do navigation</param>
            <param name="selectedPropertyViewItem">ProeprtyItem to retrieve property view item based on key </param>
            <param name="propertyLevel">PropertyLevel to get correct parent item to select the item when doing keyboard navigation</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.GetCategory">
            <summary>
            Retrieving CategoryName based on SelectedItem
            </summary>
            <returns>Category</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.GroupAndSort(Syncfusion.Windows.PropertyGrid.PropertyItemCollection)">
            <summary>
            Groups the and sort.
            </summary>
            <param name="propertyItemCollection">The property collection.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.HandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Method to handle key down event of ScrollViewer which is used in the PropertyGrid and PropertyView's template
            </summary>
            <param name="e">Key arguments to handle</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.HandleTabKey(System.Windows.Input.Key)">
            <summary>
            Method to handle Tab key press in PropertyGrid.
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.GetPropertyCollection">
            <summary>
            Adding property items into the propertycollection from the collection view source.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.IsPrimitiveType(System.Object)">
            <summary>
            Helps to check whether the selected object is primitive type or not.
            </summary>
            <param name="objItem">The SelectedObject</param>
            <returns>true if it is built-in or primitive type otherwise false</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.SetEditor(Syncfusion.Windows.PropertyGrid.PropertyItem,System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Helps to set built-in editor based on property item type in PropertyGrid.
            </summary>
            <param name="propertyItem">The property item</param>
            <param name="propertyDescriptor">The property descriptor</param>
            <param name="objItem">The SelectedObject</param>
            <returns>The property item</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.UpdateCategoryEditorPropreties(Syncfusion.Windows.PropertyGrid.PropertyItemCollection)">
            <summary>
            Updating CategoryEditor Properties in PropertyItem collection
            </summary>
            <param name="propertyItemCollection">Collection of proeprty items</param>
            <returns>Returns updated property collection</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.GetPropertyCollection(Syncfusion.Windows.PropertyGrid.PropertyCollection,System.Windows.Data.CollectionViewSource,System.Boolean)">
            <summary>
            Adding property items into the propertycollection from the collection view source
            </summary>
            <param name="propertyCollection">Existing property collection</param>
            <param name="viewSource">CollectionViewSource to retrieve items</param>
            <param name="enableGrouping">Whether the item can be added to category item collection or property collection</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.GenerateNestedPropertyItems(System.Object,Syncfusion.Windows.PropertyGrid.PropertyItem)">
            <summary>
            Helps to generate the nested property items of parent property item.
            </summary>
            <param name="objItem">The Selected object</param>
            <param name="parentPropertyItem">The parent property item</param>
            <returns>The PropertyItemCollection</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.GetPropertyItemCollection(Syncfusion.Windows.PropertyGrid.PropertyItemCollection,System.Windows.Data.CollectionViewSource)">
            <summary>
            Adding property items into the PropertyItemCollection from the collection view source
            </summary>
            <param name="propertyCollection">Existing property collection</param>
            <param name="viewSource">CollectionViewSource to retrieve items</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.UpdateNestedProperties(Syncfusion.Windows.PropertyGrid.PropertyItem,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Updating HasChildren property of PropertyItem
            </summary>
            <param name="propertyItem">PropertyItem which is to be updated</param>
            <param name="objvalue">Value of SelectedObject</param>
            <param name="containsNestedProperties">Variable that indicates whether the property descriptor has nested proeprties in it or not</param>
            <param name="isExpandableObjects">Variable that indicates whether the property descriptor is ExpandableObject or not</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.GetEditorAttributeCollection(System.Object,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Get the collection of editor attributes whichi is specified in the selected object
            </summary>
            <param name="objItem">SelectedObject</param>
            <param name="propertyDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.GetMaskAttribute(System.Object,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Get the collection of mask attributes which is specified in the selected object or specific property.
            </summary>
            <param name="objItem">The SelectedObject</param>
            <param name="propertyDescriptor">The property descriptor</param>
            <returns>MaskAttribute</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.GetExpandModeAttribute(System.Object,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Get the collection of PropertyExpandMode attributes which is specified in the selected object or specific property or custom editor.
            </summary>
            <param name="objItem">The SelectedObject</param>
            <param name="propertyDescriptor">The property descriptor</param>
            <returns>PropertyGridAttribue</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.GetBrowsableValue(System.Object,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Retrieve the Browsable value from Browsable / Bindable Attribute
            </summary>
            <param name="selectedObject">Selected object</param>
            <param name="propertyDescriptor">Property descriptor</param>
            <returns>browsable value</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.GetEditableValue(System.Object,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Retrieve the read only value from Editable / ReadOnly Attribute
            </summary>
            <param name="selectedObject">Selected object</param>
            <param name="propertyDescriptor">Property descriptor</param>
            <returns>editable value</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.GetCategoryDescriptionValue(System.ComponentModel.PropertyDescriptor,System.Object,System.ComponentModel.DataAnnotations.DisplayAttribute,System.Boolean)">
            <summary>
            Get Category or Description value from the Attribute based on proeprty descriptor, selected object type and display attribute
            </summary>
            <param name="propertyDescriptor">Value of PropertyDescriptor</param>
            <param name="objItem">SelectedObject of property grid</param>
            <param name="displayAttribute">Display attribute of property item</param>
            <param name="isCategory">true if the cateogry value is to be retrieved else description value is to be retrieved</param>
            <returns>Category or Description value</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.GetAttributeValue(System.Object,System.ComponentModel.PropertyDescriptor,System.Type)">
            <summary>
            Retrieve Attribute value based on the type
            </summary>
            <param name="selectedObject">SelectedObject</param>
            <param name="propertyDescriptor">Property descriptor</param>
            <param name="attributeType">Type of Attribute to be retrieved</param>
            <returns>Attribute value available in property item</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.FireValueChanged(Syncfusion.Windows.PropertyGrid.PropertyItem,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires the value changed.
            </summary>
            <param name="propertyItem">The property item.</param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.FireCollectionEditorOpening(Syncfusion.Windows.PropertyGrid.CollectionEditorOpeningEventArgs)">
            <summary>
            Event trigger before CollectionEditor window opening
            </summary>
            <param name="args">Cancel event arguments</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.FireAutoGeneratingPropertyGridItem(Syncfusion.Windows.PropertyGrid.AutoGeneratingPropertyGridItemEventArgs)">
            <summary>
            Triggers the collection changing event
            </summary>
            <param name="args">Cancel event arguments</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.OnSelectedPropertyItemChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:SelectedPropertyItemChanged"/> event.
            </summary>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.OnExpanderStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [expander style changed].
            </summary>
            <param name="obj">The obj.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.OnSelectedObjectChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [selected object changed].
            </summary>
            <param name="obj">The obj.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.OnItemsChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Items collection changed.
            </summary>
            <param name="obj">The PropertyGrid</param>
            <param name="args">The DependencyPropertyChangedEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.Items_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Gets or sets the custom <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/> collection in <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/>.
            </summary>
            <param name="sender">The PropertyItem Collection</param>
            <param name="e">The NotifyCollectionChangedEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.OnAutoGeneratedItemsChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when AutoGeneratedItems property changed.
            </summary>
            <param name="obj">The obj.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.OnVisualStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:VisualStyleChanged"/> event.
            </summary>
            <param name="obj"></param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.parentItemToBeSelected">
            <summary>
            Field to store the root property item on FlatMode which is used to select the parent property item when the previous selected item is nested property item.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.isPropertyExpandModeChanged">
            <summary>
            Field to denote whether the items or re-generated when the PropertyExpandMode is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.OnSelectedObjectChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:SelectedObjectChanged"/> event.
            </summary>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.OnEnableGroupingChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [enable grouping changed].
            </summary>
            <param name="obj">The obj.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.OnPropertyNameColumnDefinitionChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [GridLength auto].
            </summary>
            <param name="obj">The obj.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.OnEnableGroupingChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:EnableGroupingChanged"/> event.
            </summary>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.OnSortDirectionChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [sort direction changed].
            </summary>
            <param name="obj">The obj.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.OnSortDirectionChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:SortDirectionChanged"/> event.
            </summary>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.OnCategoryForegroundChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [category foreground changed].
            </summary>
            <param name="obj">The obj.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.OnLoadingDelayChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.OnLoadingDelayChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.OnLineColorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [line color changed].
            </summary>
            <param name="obj">The obj.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.OnViewBackgroundColorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [view background color changed].
            </summary>
            <param name="obj">The obj.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.OnViewForegroundColorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [view foreground color changed].
            </summary>
            <param name="obj">The obj.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.PART_GroupButton">
            <summary>
            The ToggleButton variable Part_GroupButton for defining the group buttons
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGrid.PART_SortButton">
            <summary>
            The ToggleButton variable Part_GroupButton for defining the group buttons
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.UpdateDefaultPropertyPath">
            <summary>
            Helps to update the selected property path.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.OnScrollTimerTick(System.Object,System.EventArgs)">
            <summary>
            Occurs when scroll position changed on <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/>.
            </summary>
            <param name="sender">scroll timer</param>
            <param name="e">Provides data for the <see cref="E:System.Windows.Threading.DispatcherTimer.Tick"/> event</param>.
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.FocusPropertyViewItem">
            <summary>
            Update focus for PropertyViewItem when click Group or Sort button in PropertyGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked while any of the property get changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGrid.OnCreateAutomationPeer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyExpandModes">
            <summary>
            Enum variable PropertyExpandModes which contains different modes for PropertyGrid
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyExpandModes.NestedMode">
            <summary>
            variable for nested mode
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyExpandModes.FlatMode">
            <summary>
            variable for flat mode
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.UpdateSourceMode">
            <summary>
            Describes the timing of binding source updates.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.UpdateSourceMode.Immediately">
            <summary>
            Updates value of <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.SelectedObject"/> immediately whenever the binding target property changes.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.UpdateSourceMode.ReturnOrLostFocus">
            <summary>
            Updates value of <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.SelectedObject"/> whenever the binding target element loses focus or when enter key is pressed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.CollectionEditorOpeningEventArgs">
            <summary>
            Provides data to the <see cref="E:Syncfusion.Windows.PropertyGrid.PropertyGrid.CollectionEditorOpening"/> event of the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.CollectionEditorOpeningEventArgs.IsReadonly">
            <summary>
            Gets or sets a value indicating whether the collection editor allows adding and deleting items if the collection supports such operations.
            </summary>
            <returns>
            <c>false</c> if items can be added or removed from the collection; otherwise, <c>true</c>.
            </returns>
            <remarks>
            When the collection is of type read-only collection, add and remove operations are disabled by the collection editor.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.CollectionEditorOpeningEventArgs.CollectionEditor">
            <summary>
            Gets the CollectionEditor window.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyItem">
            <summary>
            Represents PropertyItem class
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyItem.#ctor">
            <summary>
            Represents PropertyItem constructor
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyItem.propertyName">
            <summary>
            Field to store the name of the property item which is added to property collection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyItem.propertyType">
            <summary>
            Field to store the property type of the property item which is added to property collection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyItem.propertyEditor">
            <summary>
            Field to store the editor of the property item which is added to property collection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyItem.order">
            <summary>
            Field to store the order of the property item which is added to property collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.Order">
            <summary>
            Gets or sets the Order value which is used to arrange the property in property collection
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.Visibility">
            <summary>
            Gets or sets a value indicating whether to show the data field for editing in <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyItem.PropertyGrid"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.ParentPropertyItem">
            <summary>
            Gets or sets the parent property item of <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.PropertyViewItem">
            <summary>
            Gets or sets the corresponding property view item of <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.PropertyGridItem">
            <summary>
            Gets or sets the corresponding property grid item of custom defined <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.ResetCommand">
            <summary>
            Reset Command
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.PropertyGrid">
            <summary>
            Gets or sets the property grid.
            </summary>
            <value>The property grid.</value>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.SelectedObject">
            <summary>
            Gets or sets the selected object.
            </summary>
            <value>The selected object.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyItem.SelectedObjectProperty">
            <summary>
            Represents selectedObjectProperty dependency poroperty of PropertyGrid
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyItem.OnSelectedObjectChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Represents protected method OnSelectedObjectChanged
            </summary>
            <param name="args"></param>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.PropertyExpandMode">
            <summary>
            Gets or sets the property information.
            </summary>
            <value>The property information.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyItem.PropertyExpandModeProperty">
            <summary>
            Represents depedency property PropertyExpandModeProperty used for expanding the ProperyGrid
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.PropertyInformation">
            <summary>
            Gets or sets the property information.
            </summary>
            <value>The property information.</value>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.Mask">
            <summary>
            Gets or sets the mask for <see cref="T:Syncfusion.Windows.PropertyGrid.MaskEditor"/>.
            </summary>
            <value>The mask value.</value>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.PropertyDescriptor">
            <summary>
            Gets <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyItem.PropertyDescriptor"/> which provides abstraction of a property when <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.SelectedObject"/> is of type dynamic, ExpandoObject or ICustomTypeDescriptor.
            </summary> 
            <remarks>
            Use <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyItem.PropertyInformation"/> when <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGrid.SelectedObject"/> is not dynamic, ExpandoObject or ICustomTypeDescriptor Type.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.DisplayName">
            <summary>
            Gets the display name.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.IsDefaultValue">
            <summary>
            Gets the IsDefaultValue
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.DefaultValue">
            <summary>
            Gets  the DefaultValue
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.EnableMenuButton">
            <summary>
            Gets the EnableMenuButton
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyItem.EnableMenuButtonProperty">
            <summary>
            Idenfities the EnableMenuButton dependency property of the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/>
            </summary>
            Returns:
            Identifier of the EnableMenuButton dependency property of the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.Category">
            <summary>
            Gets the category.
            </summary>
            <value>The category.</value>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.DescriptionTemplate">
            <summary>
            Gets or sets the template used to display the description of SelectedItem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.DescriptionTemplateSelector">
            <summary>
            Gets or sets the DataTemplateSelector, which allows the user can choose the custom template that is used to display the description of SelectedItem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.EnableToolTip">
            <summary>
            Gets a value to indicate whether the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/>'s tool tip can be displayed when it is hovered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyItem.EnableToolTipProperty">
            <summary>
            Idenfities the EnableToolTip dependency property of the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/>
            </summary>
            Returns:
            Identifier of the EnableToolTip dependency property of the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.PropertyType">
            <summary>
            Gets the type of the property.
            </summary>
            <value>The type of the property.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyItem.canWrite">
            <summary>
            Field to store the value whether the property value can be overridden or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.AttachedProperty">
            <summary>
            Gets or sets the dependency property of <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.CanWrite">
            <summary>
            Gets a value indicating whether this instance can write.
            </summary>
            <value><c>true</c> if this instance can write; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.Browsable">
            <summary>
            Gets a value indicating whether this <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/> is browsable.
            </summary>
            <value><c>true</c> if browsable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.IsReadOnly">
            <summary>
            Gets a value indicating whether this instance is read only.
            </summary>
            <value>
            	<c>true</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyItem.ValueProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyItem.OnValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [value changed].
            </summary>
            <param name="obj">The obj.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyItem.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ValueChanged"/> event.
            </summary>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyItem.RaisePropertyChanged(System.String)">
            <summary>
            Invoked whenever the effective value of any dependency property on this DependencyObject has been updated. The specific dependency property that changed is reported in the event data.
            </summary>
            <param name="propertyName">
            The Dependency Property Name.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyItem.OnPropertyExpandModeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when PropertyExpandMode collection changed.
            </summary>
            <param name="obj">The PropertyItem</param>
            <param name="args">The DependencyPropertyChangedEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyItem.GetAttribute``1(System.Reflection.PropertyInfo)">
            <summary>
            Gets the attribute.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyInfo">The property info.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.Editor">
            <summary>
            Gets or sets the editor.
            </summary>
            <value>The editor.</value>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.PropertyLevel">
            <summary>
            Get and set the PropertyLevelProperty for PropertyGrid
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyItem.PropertyLevelProperty">
            <summary>
            Represents DependencyProperty PropertyLevel which represents level 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.PropertyEditor">
            <summary>
            Gets or sets the property editor.
            </summary>
            <value>The property editor.</value>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.Template">
            <summary>
            Gets or sets the template.
            </summary>
            <value>The template.</value>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.CategoryValueProperties">
            <summary>
            Gets or sets the category value properties.
            </summary>
            <value>The category value properties.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyItem.CategoryValuePropertiesProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.SelectedObjectProperties">
            <summary>
            Gets or sets the selected object properties.
            </summary>
            <value>The selected object properties.</value>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.Error">
            <summary>
            Gets an error message indicating what is wrong with this object.
            </summary>
            <value></value>
            <returns>An error message indicating what is wrong with this object. The default is an empty string ("").</returns>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.String"/> with the specified column name.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyItem.IsSelected">
            <summary>
            Get and Set the IsSelected Property
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyItem.SetSourceObject(System.Windows.Data.Binding,Syncfusion.Windows.PropertyGrid.PropertyItem)">
            <summary>
            Gets or sets the source object when selected object is of primitive or string type.
            </summary>
            <param name="binding">The binding</param>
            <param name="propertyItem">The property item</param>
            <returns>The binding</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyItem.GetBinding(Syncfusion.Windows.PropertyGrid.PropertyItem)">
            <summary>
            Helps to get the binding value of <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/>.
            </summary>
            <param name="propertyItem">The PropertyItem</param>
            <returns>The Binding value of PropertyItem</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyItem.CreateBindingPropertyInfo(Syncfusion.Windows.PropertyGrid.PropertyItem,System.Windows.Controls.Control)">
            <summary>
            Creates binding for built-in-editors in PropertyGrid.
            </summary>
            <param name="info">The propertyItem</param>
            <param name="control">The editor</param>
            <returns></returns>
        </member>
        <member name="E:Syncfusion.Windows.PropertyGrid.PropertyItem.PropertyChanged">
            <summary>
            Represent Propeety
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyItem.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked while any of the property get changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyItem.Dispose">
            <summary> 
            Helps to clean up the resources which is being used.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.ToggleGroupButton">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ToggleGroupButton.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ToggleGroupButton.OnCreateAutomationPeer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.ToggleSortButton">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ToggleSortButton.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ToggleSortButton.OnCreateAutomationPeer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.SearchTextBox">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.SearchTextBox.OnCreateAutomationPeer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.DescriptionBorder">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DescriptionBorder.OnCreateAutomationPeer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.DescriptionNameTextBlock">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DescriptionNameTextBlock.OnCreateAutomationPeer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.DescriptionDetailsTextBlock">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.DescriptionDetailsTextBlock.OnCreateAutomationPeer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyGridScrollViewer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridScrollViewer.OnCreateAutomationPeer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyGridSplitter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridSplitter.OnCreateAutomationPeer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyItemTextBlock">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyItemTextBlock.OnCreateAutomationPeer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.ClearButton">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ClearButton.OnCreateAutomationPeer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.PropertyView">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.IsExpanded">
            <summary>
            Gets or sets a value indicating whether this instance is expanded.
            </summary>
            <value>
            	<c>true</c> if this instance is expanded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.IsExpandedProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.CategoryForeground">
            <summary>
            Gets or sets the text color used for category headings.
            </summary>
            <value>The category foreground.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.CategoryForegroundProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.LineColor">
            <summary>
            Gets or sets the color of the borders and category heading background.
            </summary>
            <value>The color of the line.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.LineColorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.EditableBackground">
            <summary>
            Gets or sets the editable background.
            </summary>
            <value>The editable background.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.EditableBackgroundProperty">
            <summary>
            EditableBackgroundproperty depedency property for the PropertyGrid
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.EditableFontWeight">
            <summary>
            Gets or sets the editable font weight.
            </summary>
            <value>The editable font weight.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.EditableFontWeightProperty">
            <summary>
            EditableFontWeight property depedency property for PropertyGrid
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.ReadOnlyBackground">
            <summary>
            Gets or sets the read only background.
            </summary>
            <value>The read only background.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.ReadOnlyBackgroundProperty">
            <summary>
            ReadOnlyBackgroundproperty dependency property for the PropertyGrid
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.ReadOnlyFontWeight">
            <summary>
            Gets or sets the read only font weight.
            </summary>
            <value>The read only font weight.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.ReadOnlyFontWeightProperty">
            <summary>
            ReadOnlyFontWeight depedency property for ReadOnlyFontWeight
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> routed event is raised on this element. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains the event data. The event data reports that the left mouse button was pressed.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.UIElement.OnKeyDown"/> routed event is raised on this element. Implement this method to add class handling for this event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.OnHeaderChanged(System.Object,System.Object)">
            <summary>
            Called when the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header"/> property of a <see cref="T:System.Windows.Controls.HeaderedItemsControl"/> changes. 
            </summary>
            <param name="oldHeader">The old value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header"/> property.</param><param name="newHeader">The new value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header"/> property.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines if the specified item is (or is eligible to be) its own container.
            </summary>
            <param name="item">The item to check.</param>
            <returns>
            true if the item is (or is eligible to be) its own container; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element that is used to display the given item.
            </summary>
            <returns>
            The element that is used to display the given item.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">Element used to display the specified item.</param>
            <param name="item">Specified item.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.OnIsExpandedChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [is expanded changed].
            </summary>
            <param name="obj">The obj.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.OnIsExpandedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:IsExpandedChanged"/> event.
            </summary>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.OnCategoryForegroundChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [category foreground changed].
            </summary>
            <param name="obj">The obj.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.OnLineColorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [line color changed].
            </summary>
            <param name="obj">The obj.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.OnCreateAutomationPeer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyCatagoryViewItem.Dispose">
            <summary> 
            Helps to clean up the resources which is being used.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyView">
            <summary>
            Represents class for PropertyView which inherits from ItemsControl
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyView.SelectedProperty">
            <summary>
            Gets or sets the selected property.
            </summary>
            <value>The selected property.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyView.SelectedPropertyProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyView.OnSelectedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [selected property changed].
            </summary>
            <param name="obj">The obj.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyView.OnSelectedPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:SelectedPropertyChanged"/> event.
            </summary>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyView.SelectedItem">
            <summary>
            Gets or sets the selected item.
            </summary>
            <value>The selected item.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyView.SelectedItemProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyView.OnSelectedItemChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [selected item changed].
            </summary>
            <param name="obj">The obj.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyView.OnSelectedItemChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:SelectedItemChanged"/> event.
            </summary>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyView.EnableGrouping">
            <summary>
            Gets or sets a value indicating whether [enable grouping].
            </summary>
            <value><c>true</c> if [enable grouping]; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyView.EnableGroupingProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyView.OnEnableGroupingChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [enable grouping changed].
            </summary>
            <param name="obj">The obj.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyView.OnEnableGroupingChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:EnableGroupingChanged"/> event.
            </summary>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyView.CategoryForeground">
            <summary>
            Gets or sets the text color used for category headings.
            </summary>
            <value>The category foreground.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyView.CategoryForegroundProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyView.LineColor">
            <summary>
            Gets or sets the color of the borders and category heading background.
            </summary>
            <value>The color of the line.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyView.LineColorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyView.ViewBackgroundColor">
            <summary>
            Gets or sets the color of the view background.
            </summary>
            <value>The color of the view background.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyView.ViewBackgroundColorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyView.EditableBackground">
            <summary>
            Gets or sets the editable background.
            </summary>
            <value>The editable background.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyView.EditableBackgroundProperty">
            <summary>
            EditableBackgroundProperty DependencyProperty for PropertyGrid
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyView.EditableFontWeight">
            <summary>
            Gets or sets the editable font weight.
            </summary>
            <value>The editable font weight.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyView.EditableFontWeightProperty">
            <summary>
            Represents EditableFontWeight property for PropertyGrid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyView.ReadOnlyBackground">
            <summary>
            Gets or sets the read only background.
            </summary>
            <value>The read only background.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyView.ReadOnlyBackgroundProperty">
            <summary>
            Represents Dependency property ReadOnlyBackground for PropertyGrid
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyView.ReadOnlyFontWeight">
            <summary>
            Gets or sets the read only font weight.
            </summary>
            <value>The read only font weight.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyView.ReadOnlyFontWeightProperty">
            <summary>
             The read only font weight dependency property for the PropertyGrid
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyView.OnCategoryForegroundChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [category foreground changed].
            </summary>
            <param name="obj">The obj.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyView.OnLineColorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [line color changed].
            </summary>
            <param name="obj">The obj.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyView.OnViewBackgroundColorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [view background color changed].
            </summary>
            <param name="obj">The obj.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyView"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyView.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            When overridden in a derived class, undoes the effects of the <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)"/> method.
            </summary>
            <param name="element">The container element.</param><param name="item">The item.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyView.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Method handles the GotFocus event for the current object.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyView.ScrollViewer">
            <summary>
            Field to store the instance of ScrollViewer
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyView.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyView.ScrollViewer_PreviewKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            To avoid moving focus to Editor of the PropertyItem, keydown event of the scrollviewer is handled
            </summary>
            <param name="sender">Sender of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyView.Dispose">
            <summary>
            Method to dispose the unused objects
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyView.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">Element used to display the specified item.</param>
            <param name="item">Specified item.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyView.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines if the specified item is (or is eligible to be) its own container.
            </summary>
            <param name="item">The item to check.</param>
            <returns>
            true if the item is (or is eligible to be) its own container; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyView.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element that is used to display the given item.
            </summary>
            <returns>
            The element that is used to display the given item.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyView.OnCreateAutomationPeer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyViewItem">
            <summary>
             The PropertyView Item class
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItem.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItem.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element that is used to display the given item.
            </summary>
            <returns>
            The element that is used to display the given item.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item. 
            </summary>
            <param name="element">Element used to display the specified item.</param><param name="item">Specified item.</param>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyViewItem.IsSelected">
            <summary>
            Gets or sets a value indicating whether this instance is selected.
            </summary>
            <value>
            	<c>true</c> if this instance is selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyViewItem.IsSelectedProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyViewItem.IsMouseOver">
            <summary>
            Gets a value indicating whether the mouse pointer is located over this element (including child elements in the visual tree).
            </summary>
            <value></value>
            <returns>true if mouse pointer is over the element or its child elements; otherwise, false. The default is false.</returns>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyViewItem.IsMouseOverProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyViewItem.HasItems">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyViewItem.viewItem">
            <summary>
            Field to store the First level PropertyViewItem
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyViewItem.ParentViewItem">
            <summary>
            Gets or sets the first level property view item of second level proeprty view items 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItem.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyViewItem"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyViewItem"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyViewItem.EditorTemplate">
            <summary>
            Gets or sets the editor template.
            </summary>
            <value>The editor template.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyViewItem.EditorTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyViewItem.EditorValueTemplate">
            <summary>
            Gets or sets the editor template.
            </summary>
            <value>The editor template.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyViewItem.EditorValueTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItem.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Invoked whenever an unhandled <see cref="E:System.Windows.UIElement.GotFocus"/> event reaches this element in its route.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItem.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.UIElement.LostFocus"/> routed event by using the event data that is provided.
            </summary>
            <param name="e">A <see cref="T:System.Windows.RoutedEventArgs"/> that contains event data. This event data must contain the identifier for the <see cref="E:System.Windows.UIElement.LostFocus"/> event.</param>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyViewItem.PropertyGrid">
            <summary>
            Gets the value of PropertyGrid
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItem.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when the left mouse button is pressed while the mouse pointer is over this element.
            </summary>
            <param name="e">Provides data for mouse button related events</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> routed event is raised on this element. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains the event data. The event data reports that the left mouse button was pressed.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseEnter"/> attached event is raised on this element. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave"/> attached event is raised on this element. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItem.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoke on Mousemove
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItem.OnIsSelectedChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [is selected changed].
            </summary>
            <param name="obj">The obj.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItem.OnIsSelectedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:IsSelectedChanged"/> event.
            </summary>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItem.OnIsMouseOverChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [is mouse over changed].
            </summary>
            <param name="obj">The obj.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItem.OnIsMouseOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:IsMouseOverChanged"/> event.
            </summary>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyViewItem.Name">
            <summary>
            Gets or sets the identifying name of the element. The name provides a reference so that code-behind, such as event handler code, can refer to a markup element after it is constructed during processing by a XAML processor.
            </summary>
            <value></value>
            <returns>The name of the element. The default is an empty string.</returns>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyViewItem.NameProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItem.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItem.GenerateNestedItem(Syncfusion.Windows.PropertyGrid.PropertyItem,Syncfusion.Windows.PropertyGrid.PropertyViewItem)">
            <summary>
            Helps to generate the nested item when IsExpanded property of PropertyViewItem is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItem.IsHandleKeyDown(System.Windows.Input.Key,Syncfusion.Windows.PropertyGrid.PropertyViewItem)">
            <summary>
            Helps to ensure whether the keys event should be handled by <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyViewItem.PropertyGrid"/> or not.
            </summary>
            <param name="key">The key value.</param>
            <param name="propertyViewItem">The PropertyViewItem</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItem.UpdateEditorValue(Syncfusion.Windows.PropertyGrid.PropertyViewItem,System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Input.KeyEventArgs)">
            <summary>
            Helps to update the built-in editor value when pressing Escape or enter key in Editor.
            </summary>
            <param name="propertyViewItem">The PropertyViewItem</param>
            <param name="dependencyObject">The Editor</param>
            <param name="dependencyProperty">The dependency property</param>
            <param name="e">The event data</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItem.OnCreateAutomationPeer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyViewItem.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.ResourceManager">
            <summary>
            Represents the ResourceManager class
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ResourceManager.#ctor">
            <summary>
            Represents the ResourceManager constructor
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ResourceManager.GetValueTemplate(System.Type,System.String,System.Boolean)">
            <summary>
            Method for getting the template for the value
            </summary>
            <param name="type"></param>
            <param name="visualstyle"></param>
            <param name="IsPropertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ResourceManager.GetValueTemplate(System.Type,System.String)">
            <summary>
            Gets the property name and value template of PropertyGrid.
            </summary>
            <param name="type"></param>
            <param name="visualstyle"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyExpandModeAttribute">
            <summary>
            PropertyExpandModeAttribute for the PropertyGrid
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyExpandModeAttribute.ExpandMode">
            <summary>
            Get and Set the mode for the expanding the property grid
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyExpandModeAttribute.#ctor(System.String)">
            <summary>
            Attribute called PropertyExpandModeAttribute , used for expand mode
            </summary>
            <param name="ExpandMode"></param>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.MaskAttribute">
            <summary>
            Specifies the input mask for a property, so that it can be edited using <see cref="T:Syncfusion.Windows.PropertyGrid.MaskEditor"/> in  <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.MaskAttribute.EmailId">
            <summary>
            Regular expression to get valid email id from user.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.MaskAttribute.MobileNumber">
            <summary>
            Regular expression to get valid email id from user.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.MaskAttribute.Number">
            <summary>
            Gets the Regular expression for number.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.MaskAttribute.PositiveNumber">
            <summary>
            Gets the Regular expression for positive number.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.MaskAttribute.Fraction">
            <summary>
            Gets the Regular expression for fraction.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.MaskAttribute.Alphanumeric">
            <summary>
            Gets the Regular expression for alpha numeric.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.MaskAttribute.IPv4">
            <summary>
            Gets the Regular expression for IPv4.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.MaskAttribute.IPv6">
            <summary>
            Gets the Regular expression for IPv6.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.MaskAttribute.ProductKey">
            <summary>
            Gets the Regular expression for product key.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.MaskAttribute.Binary">
            <summary>
            Gets the Regular expression for binary.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.MaskAttribute.HexaDecimal">
            <summary>
            Gets the Regular expression for hexa decimal.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.MaskAttribute.Octal">
            <summary>
            Gets the Regular expression for octal.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.MaskAttribute.CardNumber">
            <summary>
            Gets the Regular expression for card number.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.MaskAttribute.Mask">
             <summary>
             Gets or sets the input mask of <see cref="T:Syncfusion.Windows.PropertyGrid.MaskEditor"/>, which is used to restrict and format input data.
             </summary>
             <remarks>
             Provide regular expression as input mask, where user will be allowed to enter input that meets the expression.
             To know about regular expression, please refer https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference.
             Build-In mask are also available as constants, you can use it directly from <see cref="T:Syncfusion.Windows.PropertyGrid.MaskAttribute"/>
             </remarks>
             <example>
             <code lang="C#">
             // Built-In mask to get valid email id from user.
             [MaskAttribute(MaskAttribute.EmailId, "EmailId")]
             public class Employee
             {
               public string EmailId { get; set; }
             }
            
             // Built-In mask to get valid email id from user.
             [MaskAttribute(MaskAttribute.EmailId)]
             public string EmailId { get; set; }
            
             // Custom mask to get valid email id from user.
             [MaskAttribute("[A-Za-z0-9._%-]+@[A-Za-z0-9]+.[A-Za-z]{2,3}")]
             public string EmailId { get; set; }
             </code>
             </example>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.MaskAttribute.PropertyName">
            <summary>
            Gets or sets the property name to which <see cref="T:Syncfusion.Windows.PropertyGrid.MaskEditor"/> will be applied.
            </summary>
            <example>
            <code lang="C#">
             // Built-In mask to get valid email id from user.
             [MaskAttribute(MaskAttribute.EmailId, "EmailId")]
             public class Employee
             {
               public string EmailId { get; set; }
             }
             </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.MaskAttribute.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.MaskAttribute"/> class with input mask.   
             </summary>
             <param name="mask">The input mask for property.</param>
             <example>
             <code lang="C#">
             // Built-In mask to get valid email id from user.
              [MaskAttribute(MaskAttribute.EmailId)]
              public string EmailId { get; set; }
            
             // Custom mask to get valid email id from user.
              [MaskAttribute("[A-Za-z0-9._%-]+@[A-Za-z0-9]+.[A-Za-z]{2,3}")]
              public string EmailId { get; set; }  
              </code>
             </example>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.MaskAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.MaskAttribute"/> class with input mask.
            </summary>
            <param name="mask">The input mask for property.</param>
            <param name="propertyName">The name of the property</param>
            <example>
            <code lang="C#">
            // Built-In mask to get valid email id from user.
            [MaskAttribute(MaskAttribute.EmailId, "EmailId")]
            public class Employee
            {
               public string EmailId { get; set; }
            } 
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.CollectionEditor">
            <summary>
            Interaction logic for CollectionEditor UI.
            </summary>
            <summary>
            CollectionEditor
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CollectionEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.CollectionEditor"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CollectionEditor.#ctor(Syncfusion.Windows.PropertyGrid.ItemsSourceControl)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.CollectionEditor"/> class.
            </summary>
            <param name="itemsSourceCtrl">The items source CTRL.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CollectionEditor.Part_ListBox_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Occurs when the selection of a System.Windows.Controls.Primitives.Selector changes.
            </summary>
            <param name="sender">The ListBox</param>
            <param name="e">The SelectionChangedEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CollectionEditor.GetPropertyItem">
            <summary>
            Gets selected property item in PropertyGrid control.
            </summary>
            <returns>The property item.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CollectionEditor.PropertyGrid_ValueChanged(System.Object,Syncfusion.Windows.PropertyGrid.ValueChangedEventArgs)">
            <summary>
            Occurs when the value changed occurred in editor.
            </summary>
            <param name="sender">The PropertyGrid</param>
            <param name="args">The ValueChangedEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CollectionEditor.CollectionEditor_GotKeyboardFocus(System.Object,System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            Occurs when the keyboard is focused on this element.
            </summary>
            <param name="sender">The CollectionEditor</param>
            <param name="e">The KeyboardFocusChangedEventArgs.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CollectionEditor.CollectionEditor_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles the key down event of the CollectionEditor control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The KeyEventArgs.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CollectionEditor.CollectionEditor_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Loaded event of the CollectionEditor control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CollectionEditor.HasDefaultConstructor(System.Type)">
            <summary>
            Helps to get the whether the type has parameterless constructor or not.
            </summary>
            <param name="t">The type</param>
            <returns>true if it has parameterless constructor, otherwise false</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CollectionEditor.AddBtn_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Click event of the AddBtn control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CollectionEditor.GetNewInstance(System.Type)">
            <summary>
            Gets the new instance.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CollectionEditor.OkBtn_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Click event of the OkBtn control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CollectionEditor.CancelBtn_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Click event of the CancelBtn control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CollectionEditor.RemoveBtn_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Click event of the RemoveBtn control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.CollectionEditor.SelectedObject">
            <summary>
            Gets or sets the selected object.
            </summary>
            <value>The selected object.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.CollectionEditor.SelectedObjectProperty">
            <summary>
            Using a DependencyProperty as the backing store for SelectedObject.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.CollectionEditor.ItemType">
            <summary>
            Gets or sets the type of the item.
            </summary>
            <value>The type of the item.</value>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.CollectionEditor.ItemTypeProperty">
            <summary>
            Using a DependencyProperty as the backing store for ItemType.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CollectionEditor.OnClosed(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Window.Closed" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CollectionEditor.Dispose">
            <summary>
            Disposes all the resources. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.CollectionEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.ItemsSourceControl">
            <summary>
            Represent the ItemsSourceControl
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ItemsSourceControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.ItemsSourceControl"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ItemsSourceControl.#cctor">
            <summary>
            Initializes the <see cref="T:Syncfusion.Windows.PropertyGrid.ItemsSourceControl"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.ItemsSourceControl.ItemPropertyType">
            <summary>
            Gets or sets the item property type in ItemsSource collection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.ItemsSourceControl.PropertyType">
            <summary>
            Gets or sets the property type of ItemsSource collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ItemsSourceControl.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ItemsSourceControl.Dispose">
            <summary>
            Dispose to clear managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ItemsSourceControl.GetCollectionItemType">
            <summary>
            Helps to get the collection item type of ItemsSource property in ItemsSourceControl.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ItemsSourceControl.Part_CollectionBtn_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Click event of the Part_CollectionBtn control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ItemsSourceControl.OpenCollectionEditor">
            <summary>
            Helps to open the CollectionEditor
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.ITypeItemsSourceControl">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.ITypeItemsSourceControl.propertyViewItem">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyViewItem"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.ITypeItemsSourceControl.propertyItem">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyItem"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ITypeItemsSourceControl.Attach(Syncfusion.Windows.PropertyGrid.PropertyViewItem,Syncfusion.Windows.PropertyGrid.PropertyItem)">
            <summary>
            
            </summary>
            <param name="property"></param>
            <param name="info"></param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ITypeItemsSourceControl.Create(System.Reflection.PropertyInfo)">
            <summary>
            Creates ands initializes a new instance of the editor
            </summary>
            <param name="PropertyInfo">The PropertyInformation</param>
            <returns>The ItemsControl</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ITypeItemsSourceControl.Create(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates and initializes a new instance of the custom editor. This method will be called for properties of type dynamic, ExpandoObject  or ICustomTypeDescriptor. 
            </summary>
            <param name="PropertyDescriptor">The PropertyDescriptor</param>
            <returns>The ItemsControl</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ITypeItemsSourceControl.CreateControl">
            <summary>
            Creates and initializes a new instance of the ItemsControl.
            </summary>
            <returns>The ItemsControl</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ITypeItemsSourceControl.ItemsSourceValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the value changed event of the ItemsControl control.
            </summary>
            <param name="sender">The ItemsControl control</param>
            <param name="e">The EventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ITypeItemsSourceControl.Control_PreviewKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs when a key is pressed while focus is on <see cref="T:Syncfusion.Windows.PropertyGrid.ITypeItemsSourceControl"/>
            </summary>
            <param name="sender">The ITypeItemsSourceControl</param>
            <param name="e">The event data</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ITypeItemsSourceControl.ShouldPropertyGridTryToHandleKeyDown(System.Windows.Input.Key)">
            <summary>
            Overrides the handling of keydown event. If the method returns true, PropertyGrid handles the KeyDown event and focus will be moved to next focusable editor, otherwise the event will not handle by the PropertyGrid.
            </summary>
            <param name="key">A <see cref="T:System.Windows.Input.KeyEventArgs" /> object.</param>
            <returns>True if the property grid should be allowed to handle keys; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ITypeItemsSourceControl.Detach(Syncfusion.Windows.PropertyGrid.PropertyViewItem)">
            <summary>
            Detaches (releases) the editor that was attached with the property passed as parameter.
            </summary>
            <param name="property"></param>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.ExpandableObjects">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.ExpandableObjects.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets a value indicating whether this object supports properties using the specified context.
            </summary>
            <returns>
            true because <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)"/> should be called to find the properties of this object. This method never returns false.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyGridLocalizationResourceAccessor">
            <inheritdoc cref="T:Syncfusion.Windows.Shared.LocalizationResourceAccessor"/>
        </member>
        <member name="F:Syncfusion.Windows.PropertyGrid.PropertyGridLocalizationResourceAccessor.Instance">
            <summary>
            Insance of <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGridLocalizationResourceAccessor"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridLocalizationResourceAccessor.GetControlAssembly">
            <inheritdoc cref="M:Syncfusion.Windows.Shared.LocalizationResourceAccessor.GetControlAssembly"/>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridLocalizationResourceAccessor.GetControlAssemblyDefaultNamespace">
            <inheritdoc cref="M:Syncfusion.Windows.Shared.LocalizationResourceAccessor.GetControlAssemblyDefaultNamespace"/>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridLocalizationResourceAccessor.GetDefaultResourceManager">
            <inheritdoc cref="M:Syncfusion.Windows.Shared.LocalizationResourceAccessor.GetDefaultResourceManager"/>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.PropertyGridLocalizationResourceExtension">
            <summary>
            A markup extension that returns the localized string based on culture for the <see cref="P:Syncfusion.Windows.PropertyGrid.PropertyGridLocalizationResourceExtension.ResourceName"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.PropertyGridLocalizationResourceExtension.ResourceName">
            <summary>
            Gets or sets the resource name to get the localized string.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.PropertyGridLocalizationResourceExtension.ProvideValue(System.IServiceProvider)">
            <inheritdoc cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)"/>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.Resources.ResourceWrapper">
            <summary>
            Maintains the string constant to access the localized text in xaml file and code behind.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.Resources.ResourceWrapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.PropertyGrid.Resources.ResourceWrapper">ResourceWrapper</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.Resources.ResourceWrapper.SetResources(System.Reflection.Assembly)">
            <summary>
            Helper method to set alternative assembly reference resources for this project
            </summary>
            <param name="assembly">External assembly</param>
        </member>
        <member name="M:Syncfusion.Windows.PropertyGrid.Resources.ResourceWrapper.SetResources(System.Reflection.Assembly,System.String)">
            <summary>
            Helper method to set alternative assembly reference resources for this project
            </summary>
            <param name="assembly">External assembly</param>
            <param name="_namespace">Namespace of application</param>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.ResourceWrapper.Search">
            <summary>
            Gets or sets the watermark text of search textbox in <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/>. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.ResourceWrapper.Alphabetical">
            <summary>
            Gets or sets the tooltip text for sort button in <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.ResourceWrapper.Categorized">
            <summary>
            Gets or sets the tooltip text for categorized button in <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.ResourceWrapper.CollectionEditorDialogTitle">
            <summary>
            Gets or sets the title text of <see cref="T:Syncfusion.Windows.PropertyGrid.CollectionEditor"/> dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.ResourceWrapper.OK">
            <summary>
            Gets or sets the OK button text in <see cref="T:Syncfusion.Windows.PropertyGrid.CollectionEditor"/> dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.ResourceWrapper.Cancel">
            <summary>
            Gets or sets the cancel button text in <see cref="T:Syncfusion.Windows.PropertyGrid.CollectionEditor"/> dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.ResourceWrapper.Add">
            <summary>
            Gets or sets the add button text in <see cref="T:Syncfusion.Windows.PropertyGrid.CollectionEditor"/> dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.ResourceWrapper.Remove">
            <summary>
            Gets or sets the remove button text in <see cref="T:Syncfusion.Windows.PropertyGrid.CollectionEditor"/> dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.ResourceWrapper.CollectionEditorWatermark">
            <summary>
            Gets or sets the watermark text of collection editor in <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.ResourceWrapper.Clear">
            <summary>
            Gets or sets the tooltip text for clear button of search box in <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.ResourceWrapper.Reset">
            <summary>
            Gets or sets the reset menu item text in <see cref="T:Syncfusion.Windows.PropertyGrid.PropertyGrid"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.ResourceWrapper.Members">
            <summary>
            Gets or sets the members text in <see cref="T:Syncfusion.Windows.PropertyGrid.CollectionEditor"/> dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.ResourceWrapper.Properties">
            <summary>
            Gets or sets the properties text in <see cref="T:Syncfusion.Windows.PropertyGrid.CollectionEditor"/> dialog.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.PropertyGrid.Resources.Syncfusion_PropertyGrid_Wpf">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.Syncfusion_PropertyGrid_Wpf.ResourceManager">
            <summary>
            Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.Syncfusion_PropertyGrid_Wpf.Culture">
            <summary>
            Overrides the current thread's CurrentUICulture property for all
            resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.Syncfusion_PropertyGrid_Wpf.Search">
            <summary>
            Looks up a localized string similar to Search.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.Syncfusion_PropertyGrid_Wpf.Alphabetical">
            <summary>
            Looks up a localized string similar to Alphabetical.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.Syncfusion_PropertyGrid_Wpf.Categorized">
            <summary>
            Looks up a localized string similar to Categorized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.Syncfusion_PropertyGrid_Wpf.CollectionEditorDialogTitle">
            <summary>
            Looks up a localized string similar to CollectionEditor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.Syncfusion_PropertyGrid_Wpf.OK">
            <summary>
            Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.Syncfusion_PropertyGrid_Wpf.Cancel">
            <summary>
            Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.Syncfusion_PropertyGrid_Wpf.Add">
            <summary>
            Looks up a localized string similar to Add.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.Syncfusion_PropertyGrid_Wpf.Remove">
            <summary>
            Looks up a localized string similar to Remove.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.Syncfusion_PropertyGrid_Wpf.CollectionEditorWatermark">
            <summary>
            Looks up a localized string similar to (Collection).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.Syncfusion_PropertyGrid_Wpf.Clear">
            <summary>
            Looks up a localized string similar to Clear.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.Syncfusion_PropertyGrid_Wpf.Reset">
            <summary>
            Looks up a localized string similar to Reset.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.Syncfusion_PropertyGrid_Wpf.Members">
            <summary>
            Looks up a localized string similar to Members.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.PropertyGrid.Resources.Syncfusion_PropertyGrid_Wpf.Properties">
            <summary>
            Looks up a localized string similar to Properties.
            </summary>
        </member>
    </members>
</doc>
